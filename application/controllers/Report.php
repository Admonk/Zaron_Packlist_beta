<?php
defined('BASEPATH') OR exit('No direct script access allowed');
ini_set('memory_limit', '4400M');
class Report extends CI_Controller {

    function __construct() {
             error_reporting(0);
             parent::__construct();
             $this->load->model('Admin/Auth');
             $this->load->model('Main_model');

             if(isset($this->session->userdata['logged_in']))
             {

                //$Totaltranspotval=$closeing;


               $sess_array =$this->session->userdata['logged_in'];
               $userid=$sess_array['userid'];
               $email=$sess_array['email'];
               $from_date=$sess_array['from_date'];
               $to_date=$sess_array['to_date'];
               $this->from_date=$from_date;
               $this->to_date=$to_date;
               $this->userid=$userid;
               $this->user_mail=$email;

               
            }
          
    }



public function trial_balance_log_purchase()
{




                                        if(isset($this->session->userdata['logged_in']))
                                        {


                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Trial Balance Log purchase log';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance_log_purchase.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




}


     public function trial_balance_log()
    {




                                        if(isset($this->session->userdata['logged_in']))
                                        {


                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Trial Balance Log';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance_log.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




    }


        public function failed_login_attempts_report()
    {
        if(isset($this->session->userdata['logged_in']))
        {
           
            // $this->load->model('Auth');
            $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
            $data['active_base']='customer_1';
            $data['active']='customer_1';
            $data['failed_login_attempts'] = $this->Auth->getFailedLoginAttempts();
            $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
            $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
            $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
            
            $this->load->view('report/failed_login_attempts_report', $data);
        }
        else
        {
            $this->load->view('admin/index');
        }
    }


    public function fetch_failed_login_attempts() {
   
    $this->load->database();
    $query = $this->db->get('failed_login_attempts');
     echo json_encode($query->result());
     echo $count; 
}


public function fetch_failed_login_attempts_count() {
    $this->load->database();
    $lastAttemptTime = $_GET['lastAttemptTime'];
    $this->db->where('attempt_time >', $lastAttemptTime);
    $query = $this->db->get('failed_login_attempts');
    $count = $query->num_rows();
    echo json_encode(array('newCount' => $count));
}


    public function trial_balance_log_delete()
    {




                                        if(isset($this->session->userdata['logged_in']))
                                        {


                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Trial Balance Log Delete';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance_log_delete.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




    }


       public function trial_balance_log_edit()
    {




                                        if(isset($this->session->userdata['logged_in']))
                                        {


                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Trial Balance Log Edit';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance_log_edit.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




    }


     public function opening_balance_log()
    {




                                        if(isset($this->session->userdata['logged_in']))
                                        {


                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Opening Balance Log';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/opening_balance_log.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




    }





        public function fetch_data_accounts_log_report()
    {






                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                   
                     
                  
                    $userslog="";


                 
                   $sqls=" AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid IN ('0')";
                   $sqlb=" AND create_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid IN ('0')";
                   $order_by=" ORDER BY id DESC";
                   if(isset($_GET['delete']))
                   {

                    $todate=date('Y-m-d', strtotime('+1 day', strtotime($todate)));
                    $sqls=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('1') AND process_by!='Party Change Deleted'";
                    $sqlb=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('1')";
                    $order_by=" ORDER BY update_date DESC";

                   }


                   if(isset($_GET['edit']))
                   {

                    $todate=date('Y-m-d', strtotime('+1 day', strtotime($todate)));
                    $sqls=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('0') AND payment_date!='".$formdate."'";
                    $sqlb=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('0') AND create_date!='".$formdate."'";
                    $order_by=" ORDER BY update_date DESC";

                   }
              






$result=$this->db->query("SELECT * FROM all_ledgers WHERE  customer_id NOT IN ('346','252')  AND  opening_balance_status=0  $sqls $order_by");

                     $result=$result->result();

                                     

                   




                     $i=1;
                     $array=array();

                     foreach ($result as  $value)
                     {



                        $value->payment_date=date('d-m-Y',strtotime($value->payment_date));

                       // if(isset($_GET['edit']))
                       // {
                       //     $value->payment_date=date('d-m-Y g:i:s',strtotime($value->update_date));
                       // }

                       //  if(isset($_GET['delete']))
                       // {
                       //     $value->payment_date=date('d-m-Y g:i:s',strtotime($value->update_date));
                       // }






                          




                             $status="";
                             if($value->deleteid=='1')
                             {
                                  $status='Deleted';
                             }


                             if($value->party_type==1)
                            {

                                $table='customers';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");

                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                            }

                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';

                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                             if($value->party_type==4)
                            {
                                        $table='bankaccount';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,bank_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }


                             $party_name="";
                             $res=$query->result();


                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }

                           


                            





                       $bankrecord=array();

                           $sql="";
                       if($value->process_by=='Voucher')   
                       {
                          $sql.=" AND bank_account_id='".$value->customer_id."'";
                       } 

                       if($value->account_heads_id_2=='48')   
                       {
                          $deletemod=str_replace('DPAY_SET', '',$value->deletemod);
                          $sql.=" AND deletemod LIKE '%".$deletemod."%'";
                          
                       }
                       elseif($value->account_heads_id_2=='123')   
                       {

                          $deletemod=str_replace('DPAY_SET', '',$value->deletemod);
                          $sql.=" AND deletemod LIKE '%".$deletemod."%'";


                          
                       }
                       else
                       {
                          $deletemod=$value->deletemod;
                          $sql.=" AND deletemod='".$deletemod."'";
                       }
                  
 
                       $bank=$this->db->query("SELECT * FROM bankaccount_manage WHERE   party_type IN ('4') AND deleteid=0  $sql ORDER BY id DESC ");
                       $bank=$bank->result();
                       foreach ($bank as  $bankss) 
                       {


                         $bankss->create_date=date('d-m-Y',strtotime($bankss->create_date));

                       // if(isset($_GET['edit']))
                       // {
                       //     $bankss->create_date=date('d-m-Y g:i:s',strtotime($bankss->update_date));
                       // }

                       //  if(isset($_GET['delete']))
                       // {
                       //     $bankss->create_date=date('d-m-Y g:i:s',strtotime($bankss->update_date));
                       // }



                                                     $bankaccount='';
                                                      $querys = $this->db->query("SELECT bank_name as name FROM `bankaccount`  WHERE id='".$bankss->bank_account_id."'");
                                                      $bankaccounts=$querys->result();
                                                      foreach ($bankaccounts as  $bank) 
                                                      {

                                                            $bankaccount=$bank->name;

                                                      }


                                                          $created_by_bank='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->user_id."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $created_by_bank=$values_set->name;

                                                          }



                                                            $deleted_by='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->deleted_by."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $deleted_by_bank=$values_set->name;

                                                          }


                                                            $edited_by='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->edited_by."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $edited_by_bank=$values_set->name;

                                                          }



                             $status_bank="";
                             if($bankss->deleteid=='1')
                             {
                                  $status_bank='Deleted';
                             }

                                if($bankss->debit=='')
                                {
                                    $bankss->debit=0;
                                }
                                if($bankss->credit=='')
                                {
                                    $bankss->credit=0;
                                }



                                                            $ss='COLOR';
                                                            if($bankss->deletemod==$value->deletemod)
                                                            {
                                                              $ss=1;
                                                            }


                                                       $array[] = array(

                                                            'deletemod' => $bankss->deletemod,
                                                            'party_name' => $bankaccount,
                                                            'order_no' => $bankss->name,
                                                            'reference_no' => $bankss->ex_code,
                                                            'created_by' => $created_by_bank,
                                                            'edited_by' => $edited_by_bank,
                                                            'deleted_by' => $deleted_by_bank,
                                                            'credits' => $bankss->debit,
                                                            'debits' => $bankss->credit,
                                                            'payment_mode' => $bankaccount,
                                                            'SS' => $ss,
                                                            'notes' => $bankss->status_by,
                                                            'create_date' =>$bankss->create_date,
                                                            'status' => $status_bank

                                                        );

                       }

                         
                              $created_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->user_id."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $created_by=$values_set->name;

                              }



                                $deleted_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->deleted_by."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $deleted_by=$values_set->name;

                              }


                                $edited_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->edited_by."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $edited_by=$values_set->name;

                              }

                                if($value->debits=='')
                                {
                                    $value->debits=0;
                                }
                                if($value->credits=='')
                                {
                                    $value->credits=0;
                                }




                              if($value->order_id>0)
                              {





                                  $array[] = array(


                                
                                    'deletemod' => $value->deletemod,
                                    'party_name' => 'SALES ACCOUNT',
                                    'order_no' => $value->order_no,
                                    'reference_no' => $value->reference_no,
                                    'created_by' => $created_by,
                                    'edited_by' => $edited_by,
                                    'deleted_by' => $deleted_by,
                                    'credits' => $value->debits,
                                    'debits' => $value->credits,
                                    'SS'=>1,
                                    'payment_mode' => $value->payment_mode_payoff,
                                    'notes' => $value->process_by.' | '.$value->reference_no,
                                    'create_date' =>$value->payment_date,
                                    'status' => $status


                                     );

                                     

                              }




                              if($value->account_heads_id_2==372)
                              {


                                  $array[] = array(


                                
                                    'deletemod' => $value->deletemod,
                                    'party_name' => 'ROUNDED',
                                    'order_no' => $value->order_no,
                                    'reference_no' => $value->reference_no,
                                    'created_by' => $created_by,
                                    'edited_by' => $edited_by,
                                    'deleted_by' => $deleted_by,
                                    'credits' => $value->debits,
                                    'debits' => $value->credits,
                                    'SS'=>1,
                                    'payment_mode' => $value->payment_mode_payoff,
                                    'notes' => $value->process_by.' | '.$value->reference_no,
                                    'create_date' =>$value->payment_date,
                                    'status' => $status


                                     );

                                     

                              }


                               if($value->account_heads_id_2==142)
                              {


                                
                                     if($value->process_by!='Manual Journals')
                                     {



                                              $array[] = array(


                                            
                                                'deletemod' => $value->deletemod,
                                                'party_name' => $value->notes,
                                                'order_no' => $value->order_no,
                                                'reference_no' => $value->reference_no,
                                                'created_by' => $created_by,
                                                'edited_by' => $edited_by,
                                                'deleted_by' => $deleted_by,
                                                'credits' => $value->debits,
                                                'debits' => $value->credits,
                                                'SS'=>1,
                                                'payment_mode' => $value->payment_mode_payoff,
                                                'notes' => $value->process_by.' | '.$value->reference_no,
                                                'create_date' =>$value->payment_date,
                                                'status' => $status


                                                );


                                     }

                                     

                              }


                               if($value->tcs_status==1)
                              {

                 if(!isset($_GET['edit']))
                 {
                                  $array[] = array(


                                
                                  'deletemod' => $value->deletemod,
                                    'party_name' => 'TCS',
                                   'order_no' => $value->order_no,
                                  'reference_no' => $value->reference_no,
                                   'created_by' => $created_by,
                                   'edited_by' => $edited_by,
                                  'deleted_by' => $deleted_by,
                                    'credits' => $value->debits,
                                    'debits' => $value->credits,
                                    'SS'=>1,
                                   'payment_mode' => $value->payment_mode_payoff,
                                    'notes' => $value->process_by.' | '.$value->reference_no,
                                    'create_date' =>date('d-m-Y',strtotime($value->payment_date)),
                                    'status' => $status


                                  );

                     }

                                     

                              }


                               if($value->process_by=='Sales Return')
                              {


                                  $array[] = array(


                                
                                    'deletemod' => $value->deletemod,
                                    'party_name' => 'SALES RETURN ACCOUNT',
                                    'order_no' => $value->order_no,
                                    'reference_no' => $value->reference_no,
                                    'created_by' => $created_by,
                                    'edited_by' => $edited_by,
                                    'deleted_by' => $deleted_by,
                                    'credits' => $value->debits,
                                    'debits' => $value->credits,
                                    'SS'=>1,
                                    'payment_mode' => $value->payment_mode_payoff,
                                    'notes' => $value->process_by.' | '.$value->reference_no,
                                    'create_date' =>$value->payment_date,
                                    'status' => $status


                                     );

                                     

                              }



                                if($value->account_heads_id_2==381)
                              {


                                  $array[] = array(


                                
                                    'deletemod' => $value->deletemod,
                                    'party_name' => 'DISCOUNT',
                                    'order_no' => $value->order_no,
                                    'reference_no' => $value->reference_no,
                                    'created_by' => $created_by,
                                    'edited_by' => $edited_by,
                                    'deleted_by' => $deleted_by,
                                    'credits' => $value->debits,
                                    'debits' => $value->credits,
                                    'SS'=>1,
                                    'payment_mode' => $value->payment_mode_payoff,
                                    'notes' => $value->process_by.' | '.$value->reference_no,
                                    'create_date' =>$value->payment_date,
                                    'status' => $status


                                     );

                                     

                              }


                                if($value->driver_collection_status==1 && $value->order_trancation_status==2)
                              {


                                  $array[] = array(


                                
                                    'deletemod' => $value->deletemod,
                                    'party_name' => 'AUTO EXPENSES',
                                    'order_no' => $value->order_no,
                                    'reference_no' => $value->reference_no,
                                    'created_by' => $created_by,
                                    'edited_by' => $edited_by,
                                    'deleted_by' => $deleted_by,
                                    'credits' => $value->debits,
                                    'debits' => $value->credits,
                                    'SS'=>1,
                                    'payment_mode' => $value->payment_mode_payoff,
                                    'notes' => $value->process_by.' | '.$value->reference_no,
                                    'create_date' =>$value->payment_date,
                                    'status' => $status


                                     );

                                     

                              }


                                if($value->auto_expence_bank_status==1)
                              {

                                  if($value->process_by=='Manual Journals')
                                  {


                                      // $array[] = array(


                                    
                                      //   'deletemod' => $value->deletemod,
                                      //   'party_name' => 'AUTO EXPENSES BANK',
                                      //   'order_no' => $value->order_no,
                                      //   'reference_no' => $value->reference_no,
                                      //   'created_by' => $created_by,
                                      //   'edited_by' => $edited_by,
                                      //   'deleted_by' => $deleted_by,
                                      //   'credits' => $value->credits,
                                      //   'debits' => $value->debits,
                                      //   'payment_mode' => $value->payment_mode_payoff,
                                      //   'notes' => $value->process_by.' | '.$value->reference_no,
                                      //   'create_date' =>date('d-m-Y',strtotime($value->payment_date)),
                                      //   'status' => $status


                                      //    );


                                 }

                                     

                              }




                               

                     $os=array(1,2,3,5);
                     if(in_array($value->party_type, $os))
                     {



                            $array[] = array(


                                
                                'deletemod' => $value->deletemod,
                                'party_name' => $party_name,
                                'order_no' => $value->order_no,
                                'reference_no' => $value->reference_no,
                                'created_by' => $created_by,
                                'edited_by' => $edited_by,
                                'deleted_by' => $deleted_by,
                                'credits' => $value->credits,
                                'debits' => $value->debits,
                                'SS'=>1,
                                'payment_mode' => $value->payment_mode_payoff,
                                'notes' => $value->process_by.' | '.$value->reference_no,
                                'create_date' =>$value->payment_date,
                                'status' => $status


                            );


                       }     
                            $i++;



                     }



                      $bank=$this->db->query("SELECT * FROM bankaccount_manage WHERE   party_type IN ('4') AND status_by='Bank Internal transfer' $sqlb ORDER BY id DESC ");
                       $bank=$bank->result();
                       foreach ($bank as  $bankss) 
                       {


                                                     $bankaccount='';
                                                      $querys = $this->db->query("SELECT bank_name as name FROM `bankaccount`  WHERE id='".$bankss->bank_account_id."'");
                                                      $bankaccounts=$querys->result();
                                                      foreach ($bankaccounts as  $bank) 
                                                      {

                                                            $bankaccount=$bank->name;

                                                      }


                                                          $created_by_bank='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->user_id."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $created_by_bank=$values_set->name;

                                                          }



                                                            $deleted_by='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->deleted_by."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $deleted_by_bank=$values_set->name;

                                                          }


                                                            $edited_by='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->edited_by."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $edited_by_bank=$values_set->name;

                                                          }



                             $status_bank="";
                             if($bankss->deleteid=='1')
                             {
                                  $status_bank='Deleted';
                             }

                                if($bankss->debit=='')
                                {
                                    $bankss->debit=0;
                                }
                                if($bankss->credit=='')
                                {
                                    $bankss->credit=0;
                                }


 $bankss->create_date=date('d-m-Y',strtotime($bankss->create_date));

                       // if(isset($_GET['edit']))
                       // {
                       //     $bankss->create_date=date('d-m-Y g:i:s',strtotime($bankss->update_date));
                       // }

                       //  if(isset($_GET['delete']))
                       // {
                       //     $bankss->create_date=date('d-m-Y g:i:s',strtotime($bankss->update_date));
                       // }

                                                       $array[] = array(

                                                            'deletemod' => $bankss->deletemod,
                                                            'party_name' => $bankaccount,
                                                            'order_no' => $bankss->name,
                                                            'reference_no' => $bankss->ex_code,
                                                            'created_by' => $created_by_bank,
                                                            'edited_by' => $edited_by_bank,
                                                            'deleted_by' => $deleted_by_bank,
                                                            'credits' => $bankss->debit,
                                                            'debits' => $bankss->credit,
                                                            'payment_mode' => $bankaccount,
                                                            'notes' => $bankss->status_by,
                                                            'SS'=>1,
                                                            'create_date' =>$bankss->create_date,
                                                            'status' => $status_bank

                                                        );

                       }




                           $bank=$this->db->query("SELECT * FROM bankaccount_manage WHERE   party_type IN ('4') AND name='Deposit & Withdrawal' $sqlb ORDER BY id DESC ");
                       $bank=$bank->result();
                       foreach ($bank as  $bankss) 
                       {


                                                     $bankaccount='';
                                                      $querys = $this->db->query("SELECT bank_name as name FROM `bankaccount`  WHERE id='".$bankss->bank_account_id."'");
                                                      $bankaccounts=$querys->result();
                                                      foreach ($bankaccounts as  $bank) 
                                                      {

                                                            $bankaccount=$bank->name;

                                                      }


                                                          $created_by_bank='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->user_id."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $created_by_bank=$values_set->name;

                                                          }



                                                            $deleted_by='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->deleted_by."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $deleted_by_bank=$values_set->name;

                                                          }


                                                            $edited_by='';
                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$bankss->edited_by."'");
                                                          $resultsales_team=$query->result();
                                                          foreach ($resultsales_team as  $values_set) 
                                                          {

                                                                $edited_by_bank=$values_set->name;

                                                          }



                             $status_bank="";
                             if($bankss->deleteid=='1')
                             {
                                  $status_bank='Deleted';
                             }

                                if($bankss->debit=='')
                                {
                                    $bankss->debit=0;
                                }
                                if($bankss->credit=='')
                                {
                                    $bankss->credit=0;
                                }

                                 $bankss->create_date=date('d-m-Y',strtotime($bankss->create_date));

                       // if(isset($_GET['edit']))
                       // {
                       //     $bankss->create_date=date('d-m-Y g:i:s',strtotime($bankss->update_date));
                       // }

                       //  if(isset($_GET['delete']))
                       // {
                       //     $bankss->create_date=date('d-m-Y g:i:s',strtotime($bankss->update_date));
                       // }




                                                       $array[] = array(

                                                            'deletemod' => $bankss->deletemod,
                                                            'party_name' => $bankaccount,
                                                            'order_no' => $bankss->name,
                                                            'reference_no' => $bankss->ex_code,
                                                            'created_by' => $created_by_bank,
                                                            'edited_by' => $edited_by_bank,
                                                            'deleted_by' => $deleted_by_bank,
                                                            'credits' => $bankss->debit,
                                                            'debits' => $bankss->credit,
                                                            'payment_mode' => $bankaccount,
                                                            'notes' => $bankss->status_by,
                                                            'SS'=>1,
                                                            'create_date' =>$bankss->create_date,
                                                            'status' => $status_bank

                                                        );

                       }


                   

                    echo json_encode($array);

    }




















































        public function fetch_data_accounts_log_report_pursase()
    {






                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                   
                     
                  
                    $userslog="";


                 
                   $sqls=" AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid IN ('0')";
                   $sqlb=" AND create_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid IN ('0')";
                   if(isset($_GET['delete']))
                   {

                    $todate=date('Y-m-d', strtotime('+1 day', strtotime($todate)));
                    $sqls=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('1') AND process_by!='Party Change Deleted'";
                    $sqlb=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('1')";

                   }


                   if(isset($_GET['edit']))
                   {

                    $todate=date('Y-m-d', strtotime('+1 day', strtotime($todate)));
                    $sqls=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('0') AND payment_date!='".$formdate."'";
                    $sqlb=" AND update_date BETWEEN '".$formdate."' AND '".$todate."' AND deleteid  IN ('0') AND create_date!='".$formdate."'";

                   }
              





  $resultss=$this->db->query("SELECT * FROM all_ledgers WHERE  party_type IN ('3','5')  AND purchase_entry=1  $sqls GROUP BY order_no ORDER BY order_no,id DESC ");
$resultss=$resultss->result();


   $mainarray=array();

foreach ($resultss as  $ddf)
{






                        $result=$this->db->query("SELECT * FROM all_ledgers WHERE  party_type IN ('3','5') AND purchase_entry=1 AND order_no='".$ddf->order_no."' $sqls ORDER BY order_no,id DESC ");

                     $result=$result->result();





                     $i=1;
                     $array=array();
                     $totalcredits=0;
                     $totaldebit=0;
                    

                     foreach ($result as  $value)
                     {

                          




                             $status="";
                             if($value->deleteid=='1')
                             {
                                  $status='Deleted';
                             }


                             if($value->party_type==1)
                            {

                                $table='customers';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");

                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                            }

                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';

                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                             if($value->party_type==4)
                            {
                                        $table='bankaccount';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,bank_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }


                             $party_name="";
                             $res=$query->result();


                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }

                           


                            





 
                       

                         
                              $created_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->user_id."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $created_by=$values_set->name;

                              }



                                $deleted_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->deleted_by."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $deleted_by=$values_set->name;

                              }


                                $edited_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->edited_by."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $edited_by=$values_set->name;

                              }

                                if($value->debits=='')
                                {
                                    $value->debits=0;
                                }
                                if($value->credits=='')
                                {
                                    $value->credits=0;
                                }



                                                     $roundoffDr=0;
                                                      $roundoffCr=0;






                              if($value->order_id>0)
                              {


                               $loading_charges_dec=0;
                              $query = $this->db->query("SELECT loading_charges,roundoff,convert_status FROM `purchase_invoice`  WHERE id='".$value->order_id."' AND deleteid=0");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $loading_charges_dec=$values_set->loading_charges;
                                    $roundoff=$values_set->roundoff;
                                    $convert_status=$values_set->convert_status;


                                    if($roundoff>0)
                                    {
                                        if($convert_status==0)
                                        {
                                              $roundoffDr=$roundoff;
                                        }

                                        if($convert_status==1)
                                        {
                                            $roundoffCr=$roundoff;
                                        }

                                    }

                              }


                                                      $credits_sub_total=$value->credits_sub_total;


                                                      if($value->payment_date>'2024-05-31')
                                                      {



                                                      if($roundoffDr>0)
                                                      {       
                                                              $roundoffDr=$roundoffDr*2;
                                                              $credits_sub_total=$value->credits_sub_total-$roundoffDr;
                                                      }
                                                      if($roundoffCr>0)
                                                      {
                                                              $credits_sub_total=$value->credits_sub_total+$roundoffCr;
                                                      }

                                                      }
                                                      






                                  $array[] = array(


                                
                                    'deletemod' => $value->deletemod,
                                    'party_name' => 'PURCHASE ACCOUNT',
                                    'order_no' => $value->order_no,
                                    'reference_no' => $value->reference_no,
                                    'created_by' => $created_by,
                                    'edited_by' => $edited_by,
                                    'deleted_by' => $deleted_by,
                                    'credits' => $value->debits,
                                    'debits' => round($credits_sub_total),
                                    'SS'=>1,
                                    'payment_mode' => $value->payment_mode_payoff,
                                    'notes' => $value->process_by.' | '.$value->reference_no,
                                    'create_date' =>date('d-m-Y',strtotime($value->payment_date)),
                                    'status' => $status


                                     );


                               

                                     

                              }




                             





                            
                               

                     $os=array(1,2,3,5);
                     if(in_array($value->party_type, $os))
                     {


                               
                             $roundoffDr1=0;
                             $roundoffCr1=0;

                                                       if($value->order_id>0)
                                                       {



                                                           $loading_charges_dec1=0;
                              $query = $this->db->query("SELECT loading_charges,roundoff,convert_status FROM `purchase_invoice`  WHERE invoice_no='".$value->order_no."' AND deleteid=0");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $loading_charges_dec1=$values_set->loading_charges;
                                    $roundoff1=$values_set->roundoff;
                                    $convert_status1=$values_set->convert_status;


                                    if($roundoff1>0)
                                    {
                                        if($convert_status1==0)
                                        {
                                              $roundoffDr1=$roundoff1;
                                        }

                                        if($convert_status1==1)
                                        {
                                            $roundoffCr1=$roundoff1;
                                        }

                                    }

                              }


                                                      

                                                      if($value->payment_date>'2024-05-31')
                                                      {

                                                      if($roundoffCr1>0)
                                                      {
                                                               //$value->credits=$value->credits-$roundoffCr1;
                                                               //$value->credits=888;
                                                      }

                                                     }



                            }
                                                      


                           if($value->customer_id=='372')
                           {
                                     
                                                  $credits=$value->credits;
                                                  $debits=$value->debits;
                                      if($credits>0)
                                     {
                                         
                                         $value->debits=$credits;
                                         $value->credits=0;
                                     }

                                     if($debits>0)
                                     {
                                         $value->credits=$debits;
                                         $value->debits=0;
                                     }



                             
                          

                           }


                            $array[] = array(


                                
                                'deletemod' => $value->deletemod,
                                'party_name' => $party_name,
                                'order_no' => $value->order_no,
                                'reference_no' => $value->reference_no,
                                'created_by' => $created_by,
                                'edited_by' => $edited_by,
                                'deleted_by' => $deleted_by,
                                'credits' => round($value->credits),
                                'debits' => $value->debits,
                                'SS'=>1,
                                'payment_mode' => $value->payment_mode_payoff,
                                'notes' => $value->process_by.' | '.$value->reference_no,
                                'create_date' =>date('d-m-Y',strtotime($value->payment_date)),
                                'status' => $status


                            );


                          



                       }     
                            $i++;






                     }
                             


                              for ($i=0; $i<count($array) ; $i++)
                              {

                                $totalcredits+=$array[$i]['credits'];
                                $totaldebit+=$array[$i]['debits'];
                                
                              }


                   if(round($totalcredits)!=round($totaldebit))
                   {


                             $mainarray[] = array(


                                
                                
                                
                                'order_no' => $ddf->order_no,
                                'creditstot' => round($totalcredits),
                                'debitstot' => round($totaldebit),
                                'create_date' =>date('d-m-Y',strtotime($ddf->payment_date)),
                                'subarray'=>$array
                                


                            );

                }



}


 






                   

                    echo json_encode($mainarray);

    }




        public function fetch_data_op_balance_log_report()
    {






                     $formdate=$_GET['formdate'];
                     $date=$_GET['todate'];

                     $todate=date('Y-m-d', strtotime('+1 day', strtotime($date)));

                   
                     
                  
                    $userslog="";


              










    $result=$this->db->query("SELECT * FROM all_ledgers WHERE update_date BETWEEN '".$formdate."' AND '".$todate."'  AND deleteid IN ('0') AND opening_balance_status=1  ORDER BY id DESC ");

                     $result=$result->result();





                     $i=1;
                     $array=array();

                     foreach ($result as  $value)
                     {

                          




                             $status="";
                             if($value->deleteid=='1')
                             {
                                  $status='Deleted';
                             }


                             if($value->party_type==1)
                            {

                                $table='customers';
                                $base='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");

                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $base='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $base='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                            }

                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $base='Other Ledger';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $base='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $base='accountheads';
                                        $traget2='customer_id';

                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $base='admin_users';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }

                             if($value->party_type==4)
                            {
                                        $table='bankaccount';
                                        $base='bankaccount';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,bank_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                            }


                             $party_name="";
                             $res=$query->result();


                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }

                           




                         
                              $created_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->user_id."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $created_by=$values_set->name;

                              }



                                $deleted_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->deleted_by."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $deleted_by=$values_set->name;

                              }


                                $edited_by='';
                              $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$value->edited_by."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values_set) 
                              {

                                    $edited_by=$values_set->name;

                              }

                                if($value->debits=='')
                                {
                                    $value->debits=0;
                                }
                                if($value->credits=='')
                                {
                                    $value->credits=0;
                                }




                          








                          






                               
                 $ss= $value->credits+$value->debits;

                 

                     $os=array(1,2,3,5);
                     if(in_array($value->party_type, $os))
                     {



                            $array[] = array(


                                'base' => $base,
                                'deletemod' => $value->deletemod,
                                'party_name' => $party_name.' | '.$value->customer_id,
                                'order_no' => $value->order_no,
                                'reference_no' => $value->reference_no,
                                'created_by' => $created_by,
                                'edited_by' => $edited_by,
                                'deleted_by' => $deleted_by,
                                'credits' => $value->credits,
                                'debits' => $value->debits,
                                'payment_mode' => $value->payment_mode_payoff,
                                'notes' => $value->process_by.' | '.$value->reference_no,
                                'create_date' =>date('d-m-Y g:i:s',strtotime($value->update_date)),
                                'status' => $status


                            );


                       }     
                            $i++;

                     

                     }

                   

                    echo json_encode($array);

    }




   
         public function sales_product_report_group()
    {



                                        if(isset($this->session->userdata['logged_in']))
                                        {

                                          
                                            $data['uom'] = $this->Main_model->where_names_order_by('uom','deleteid','0','id','ASC');
                                            $data['brand'] = $this->Main_model->where_names_order_by('brand','deleteid','0','id','ASC');

                                            $resultmain = $this->db->query("SELECT * FROM `layout_plan` WHERE deleteid=0 GROUP BY name ORDER BY `layout_plan`.`id` DESC");
                                            $data['layout_plan'] = $resultmain->result();

                                            $data['price_master'] = $this->Main_model->where_names_order_by('price_master','deleteid','0','id','ASC');
                                            $data['grouping'] = $this->Main_model->where_names_order_by('grouping','deleteid','0','id','ASC');

                                            $data['additional_information'] =$this->Main_model->where_names_three_order_by_new('additional_information','grouping','1','deleteid','0','category_id','0','sort_order_id','ASC');
                                            $data['additional_information2'] =$this->Main_model->where_names_three_order_by_new('additional_information','grouping','1','deleteid','0','category_id!=','0','sort_order_id','ASC');
                                            $data['additional_information1'] =$this->Main_model->where_names_three_order_by_new('additional_information','grouping','1','deleteid','0','category_id=',$categories_id,'sort_order_id','ASC');

                                            $data['ys'] = $this->Main_model->where_names_order_by('ys','deleteid','0','id','ASC');
                                            $data['brand'] = $this->Main_model->where_names_order_by('brand','deleteid','0','id','ASC');
                                            $data['product'] = $this->Main_model->where_names_order_by('product_list','deleteid','0','id','ASC');
                                            $data['color'] = $this->Main_model->where_names_order_by('color','deleteid','0','id','ASC');
                                            $data['gsm'] = $this->Main_model->where_names_order_by('gsm','deleteid','0','id','ASC');
                                            $data['thickness'] = $this->Main_model->where_names_order_by('thickness','deleteid','0','id','ASC');
                                            $data['material_type'] = $this->db->query("SELECT DISTINCT id, SUBSTRING_INDEX(SUBSTRING_INDEX(`option`, ',', n), ',', -1) AS `option`
                                            FROM additional_information
                                            JOIN (
                                                SELECT 1 AS n UNION ALL
                                                SELECT 2 UNION ALL
                                                SELECT 3 UNION ALL
                                                SELECT 4
                                            ) AS numbers
                                            ON CHAR_LENGTH(`option`)
                                                -CHAR_LENGTH(REPLACE(`option`, ',', '')) >= n - 1
                                            WHERE label_name = 'material_type'
                                            ORDER BY id, n;");

                                          // Fetch options where label_name is 'categorie_type' directly through query
                                          $query = $this->db->query("SELECT `option` FROM `additional_information` WHERE `label_name` = 'categorie_type' AND `deleteid` = '0'");
                                          $result = $query->row();
                                          if ($result) {
                                            $categorie_type_option = $result->option;
                                           // Split the string into an array using a comma as the delimiter
                                                $optionsArray = array_map('trim', explode(",", $categorie_type_option));

                                                // Create an array of objects with the "option" key
                                                $optionObjects = array();
                                                foreach ($optionsArray as $option) {
                                                    if (!empty($option)) {
                                                        $optionObjects[] = $option;
                                                    }
                                                }
                                        }
 
                                            $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');

                                            $data['categorie_type_options'] = $optionObjects;
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title'] = 'Sales Product Report Group';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                         $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/sales_product_report_group.php',$data);

                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




    }

   
     public function gte_sale_grpup_products()
    {
        $productid = $_GET['productid'];
        $cateTypes = $_GET["cateTypes"];
        $limit = $_GET['limit'];
        $formdate = $_GET['formdate'];
        $todate = $_GET['todate'];
        $filterBrand = $_GET['brand'];
        $filterYs = $_GET['ys'];
        $filterUom = $_GET['uom'];
        $filterColor = $_GET['color'];
        $filterThickness = $_GET['thickness'];
        $filterCatType = $_GET['categoryType'];
        $filterMatType = $_GET['materialType'];
        $filterGsm = $_GET['gsm'];

        if ($productid == 'All') {
            $catInput = explode(',',$cateTypes);
            
            // foreach($catInput as $val){
            //     echo $val."----";
            // }
            // exit;
            if(in_array("ALL", $catInput)){
                $catInput = " != 1 ";
            }else{
                $catInput = "IN (".implode(',',$catInput).") ";
            }
            $prodQuery = "SELECT op.product_id FROM order_product_list_process op LEFT JOIN product_list pl ON pl.id = op.product_id WHERE op.categories_id $catInput AND op.deleteid=0 AND op.product_name != '' AND pl.deleteid=0 ";

            //Filter Part ->
            if ($filterBrand !== '') {
                $prodQuery .= " AND pl.brand = '$filterBrand' ";
            }
            if ($filterYs !== '') {
                $prodQuery .= " AND pl.yield_strength LIKE '%".$filterYs."%' ";
            }
            if ($filterUom !== '') {
                $prodQuery .= " AND pl.uom = '$filterUom' ";
            }
            if ($filterColor !== '') {
                $prodQuery .= " AND pl.color = '$filterColor' ";
            }
            if ($filterThickness !== '') {
                $prodQuery .= " AND pl.thickness = '$filterThickness' ";
            }
            if ($filterCatType !== '') {
                $prodQuery .= " AND pl.categorie_type = '$filterCatType' ";
            }
            if ($filterMatType !== ''){
                $prodQuery .= " AND pl.material_type = '$filterMatType' ";
            }
            if($filterGsm !== ''){
                $prodQuery .= " AND pl.coating_mass LIKE '%".$filterGsm."%' ";
            }

            // Filter Part

            $prodQuery .= " AND op.create_date BETWEEN '".$formdate." 00:00:00' AND '".$todate." 23:59:59' GROUP BY op.product_id ORDER BY REPLACE(pl.product_name , ' ', '')";           
 $allProducts = $this->db->query($prodQuery)->result();
        } else {
            $productid = explode(',',$productid);
            // print_r($productid);
            // exit;
            foreach($productid as $key => $prod){
                
                $obj['product_id'] = $prod;
                $allProducts[] =  (object)$obj;
            }
           
        }

        
        // echo $prodQuery;
        // exit;

        // if(count( $allProducts) < 1){
        //     return false;
        // }
        function refineValue($value)
        {
            if ($value != 0 && $value != '') {
                return floatval(round($value, 2));
            } else {
                return 0;
            }
        }

        $array = array();
        $totals = array(
            'sq_mtr' => 0,
            'R_Ft1' => 0,
            'kg1' => 0,
            'R_sq_mtr' => 0,
            'kg2' => 0
        );
        $i = 1;




        $commaSeparatedNames = implode(', ', array_map(function ($obj) {
            if (is_object($obj) && isset($obj->product_id)) {
                return strval($obj->product_id);
            } elseif (is_array($obj) && isset($obj['product_id'])) {
                return strval($obj['product_id']);
            } else {
                return null; // Handle the case when 'product_id' is not found
            }
        }, $allProducts));
// // 
// print_r($commaSeparatedNames);
//         exit;
       
        $limitExtend = " SET SESSION group_concat_max_len = 9999 ";

        $this->db->query( $limitExtend);

        //Iron and Steel Corr. Sheet
        $query1 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS sq_mtr_order_id, SUM(a.qty) AS sq_mtr, a.product_id   FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 3 AND a.product_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by product_id";
        $res1 = $this->db->query($query1)->result();

       
        //Accessories
        $query2 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS R_Ft1_order_id, SUM(a.qty) AS R_Ft1, a.product_id,a.sub_product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 1 AND a.sub_product_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 AND a.deleteid = 0 group by sub_product_id";
        
        $res2 = $this->db->query($query2)->result();

        // Roll Sheet
        $query3 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS R_sq_mtr_order_id, SUM(a.qty) AS R_sq_mtr, a.product_id,a.sub_product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 591 AND  a.sub_product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by sub_product_id";
        $res3 = $this->db->query($query3)->result();

        //Steel Coil
        $query4 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS kg1_order_id, SUM(a.qty) AS kg1, a.product_id, a.tile_material_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND (a.categories_id = 593 OR a.categories_id = 28) AND a.tile_material_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by tile_material_id";
        $res4 = $this->db->query($query4)->result();

         //Profile Ridge & Arch
        $query5 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS PRA_order_id, SUM(a.qty) AS PRA_Ft, a.product_id, a.sub_product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id =  32 AND a.sub_product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by sub_product_id";
        $res5 = $this->db->query($query5)->result();

        //Tile Sheet
        $query6 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS TS_order_id, SUM(a.qty) AS TS_Ft, a.product_id, a.tile_material_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id = 26 AND a.tile_material_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by tile_material_id";
        $res6 = $this->db->query($query6)->result();

        //Liner Sheet
        $query7 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS LS_order_id, SUM(a.qty) AS LS_Ft, a.product_id, a.tile_material_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id = 590 AND a.tile_material_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by tile_material_id";
        $res7 = $this->db->query($query7)->result();

        //Purlin
        $query8 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS Purlin_order_id, SUM(a.qty) AS Purlin_ton, a.product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id = 5 AND a.product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by product_id";
        $res8 = $this->db->query($query8)->result();

 
         //Decking Sheet
        $query9 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS DeckSh_order_id, SUM(a.qty) AS DeckSh_ton, a.product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 34 AND  a.product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by product_id";
        $res9 = $this->db->query($query9)->result();

        //Others 
        $query10 = "SELECT GROUP_CONCAT(a.id SEPARATOR ',') AS others_id, SUM(a.qty) AS others_qty, a.product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id NOT IN (3,1,591,593,28,32,26,590,5,34) AND  a.product_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by product_id";      
       
        $res10 = $this->db->query($query10)->result();

 foreach ($allProducts as $item) {
            // print_r($item);
            $productId = $item->product_id;
                $outputArray[$productId] = array(
                    'product_id' => $productId,
                    'sq_mtr_order_id' => [],
                    'sq_mtr' => 0,
                );
                    
                     
        }


         foreach($res1 as $sq_mtr){
            //Corr. Sheet
            $valuesArray = explode(',', $sq_mtr->sq_mtr_order_id);
            foreach($valuesArray as $item){
                $outputArray[$sq_mtr->product_id]['sq_mtr_order_id'][] = $item;
            }
            $outputArray[$sq_mtr->product_id]['sq_mtr'] += $sq_mtr->sq_mtr;
        }
            
        foreach($res2 as $R_Ft1){
            //Accessories
                $valuesArray = explode(',', $R_Ft1->R_Ft1_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$R_Ft1->sub_product_id]['R_Ft1_order_id'][] = $item;
                }
                $outputArray[$R_Ft1->sub_product_id]['R_Ft1'] += $R_Ft1->R_Ft1;
        }

        foreach($res3 as $R_sq_mtr){
            // Roll Sheet
               
                $valuesArray = explode(',', $R_sq_mtr->R_sq_mtr_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$R_sq_mtr->sub_product_id]['R_sq_mtr_order_id'][] = $item;
                }
                $outputArray[$R_sq_mtr->sub_product_id]['R_sq_mtr'] += $R_sq_mtr->R_sq_mtr;
        }

        foreach($res4 as $kg1){
             //Steel Coil
                $valuesArray = explode(',', $kg1->kg1_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$kg1->tile_material_id]['kg1_order_id'][] = $item;
                }
                $outputArray[$kg1->tile_material_id]['kg1'] += $kg1->kg1;
        }

        foreach($res5 as $PRA_Ft){
            //Profile Ridge & Arch
                $valuesArray = explode(',', $PRA_Ft->PRA_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$PRA_Ft->sub_product_id]['PRA_Ft_order_id'][] = $item;
                }
                $outputArray[$PRA_Ft->sub_product_id]['PRA_Ft'] += $PRA_Ft->PRA_Ft;
        }

        foreach($res6 as $TS_Ft){
             //Tile Sheet
                $valuesArray = explode(',', $TS_Ft->TS_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$TS_Ft->tile_material_id]['TS_Ft_order_id'][] =  $item;
                }
                $outputArray[$TS_Ft->tile_material_id]['TS_Ft'] += $TS_Ft->TS_Ft;
        }

        foreach($res7 as $LS_Ft){
            //Liner Sheet
                $valuesArray = explode(',', $LS_Ft->LS_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$LS_Ft->tile_material_id]['LS_Ft_order_id'][] = $item;
                }
                $outputArray[$LS_Ft->tile_material_id]['LS_Ft'] += $LS_Ft->LS_Ft;
        }

        foreach($res8 as $Purlin_ton){
            //Purlin
                $valuesArray = explode(',', $Purlin_ton->Purlin_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$Purlin_ton->product_id]['Purlin_ton_order_id'][] = $item;
                }
                $outputArray[$Purlin_ton->product_id]['Purlin_ton'] += $Purlin_ton->Purlin_ton;
        }

        foreach($res9 as $DeckSh){
            //Decking Sheet
                $valuesArray = explode(',', $DeckSh->DeckSh_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$DeckSh->product_id]['DeckSh_ton_order_id'][] =  $item;
                }
                $outputArray[$DeckSh->product_id]['DeckSh_ton'] += $DeckSh->DeckSh_ton;
        }

        foreach($res10 as $others){
            //others
                $valuesArray = explode(',', $others->others_id);
                foreach($valuesArray as $item){
                    $outputArray[$others->product_id]['others_order_id'][] = $item;
                }
                $outputArray[$others->product_id]['others_qty'] += $others->others_qty;
        }
             foreach ($outputArray as $value) {

                
                $sq_mtr = 0;
                $R_Ft1 = 0;
                $R_sq_mtr = 0;
                $kg1 = 0;
                $PRA_Ft = 0;
                $TS_Ft = 0;
                $LS_Ft = 0;
                //Single values
                $sq_mtr = refineValue($value['sq_mtr']);
                $R_Ft1 = refineValue($value['R_Ft1']);
                $R_sq_mtr = refineValue($value['R_sq_mtr']);
                $kg1 = refineValue($value['kg1']);
                $PRA_Ft = refineValue($value['PRA_Ft']);
                $TS_Ft = refineValue($value['TS_Ft']);
                $LS_Ft = refineValue($value['LS_Ft']);
                $Purlin_ton = refineValue($value['Purlin_ton']);
                $DeckSh_ton = refineValue($value['DeckSh_ton']);
                $others_qty = refineValue($value['others_qty']);
                //totals
                $totals['sq_mtr'] = refineValue($totals['sq_mtr'] += $sq_mtr);
                $totals['R_Ft1'] = refineValue($totals['R_Ft1'] += $R_Ft1);
                $totals['R_sq_mtr'] = refineValue($totals['R_sq_mtr'] += $R_sq_mtr);
                $totals['kg1'] = refineValue($totals['kg1'] += $kg1);
                $totals['PRA_Ft'] = refineValue($totals['PRA_Ft'] += $PRA_Ft);
                $totals['TS_Ft'] = refineValue($totals['TS_Ft'] += $TS_Ft);
                $totals['LS_Ft'] = refineValue($totals['LS_Ft'] += $LS_Ft);
                $totals['Purlin_ton'] = refineValue($totals['Purlin_ton'] += $Purlin_ton);
                $totals['DeckSh_ton'] = refineValue($totals['DeckSh_ton'] += $DeckSh_ton);
                $totals['others_qty'] = refineValue($totals['others_qty'] += $others_qty);

                $kg2 = "0";
                // print_r($value);
                $product_list = $this->Main_model->where_names('product_list', 'id', $value['product_id']);

                foreach ($product_list as $pro_list) {
                    //From product_list Table
                    $product_name = $pro_list->product_name;
                    $category_name = $pro_list->categorie_type ? $pro_list->categorie_type : '-';
                    $material_type = $pro_list->material_type ? $pro_list->material_type : '-';
                    $color = $pro_list->color ? $pro_list->color : '-';
                    $thickness = $pro_list->thickness ? $pro_list->thickness : '-';
                    $coating_mass = $pro_list->coating_mass ? $pro_list->coating_mass : '-';
                    $yield_strength = $pro_list->yield_strength ? $pro_list->yield_strength : '-';
                    $brand = $pro_list->brand ? $pro_list->brand : '-';
                    $uom = $pro_list->uom ? $pro_list->uom : '-';
                }

                //Result
                $array[] = array(
                    'no' => $i,
                    // 'order_id' => $value->order_id,
                    'product_id' => $value->product_id,
                    'category_name' => $category_name,
                    'product_name' => $product_name,
                    'color' => $color,
                    'thickness' => $thickness,
                    'material_type' => $material_type,
                    'yield_strength' => $yield_strength,
                    'coating_mass' => $coating_mass,
                    'brand' => $brand,
                    'uom' => $uom ,
                    'sq_mtr' => $sq_mtr,
                    'sq_mtr_order_id' => base64_encode(implode(',',$value['sq_mtr_order_id'])),
                    'R_Ft1' => $R_Ft1,
                    'R_Ft1_order_id' => base64_encode(implode(',',$value['R_Ft1_order_id'])),
                    'kg1' => $kg1,
                    'kg1_order_id' => base64_encode(implode(',',$value['kg1_order_id'])),
                    'R_sq_mtr' => $R_sq_mtr,
                    'R_sq_mtr_order_id' => base64_encode(implode(',',$value['R_sq_mtr_order_id'])),
                    'PRA_Ft' => $PRA_Ft,
                    'PRA_Ft_order_id' => base64_encode(implode(',',$value['PRA_Ft_order_id'])),
                    'TS_Ft' => $TS_Ft,
                    'TS_Ft_order_id' => base64_encode(implode(',',$value['TS_Ft_order_id'])),
                    'LS_Ft' => $LS_Ft,
                    'LS_Ft_order_id' => base64_encode(implode(',',$value['LS_Ft_order_id'])),    
                    'Purlin_ton'  => $Purlin_ton,   
                    'Purlin_ton_order_id'   => base64_encode(implode(',', $value['Purlin_ton_order_id'])),
                    'DeckSh_ton'  => $DeckSh_ton,   
                    'DeckSh_ton_order_id'   => base64_encode(implode(',', $value['DeckSh_ton_order_id'])),
                    'others_qty' => $others_qty,
                    'others_order_id' => base64_encode(implode(',', $value['others_order_id'])),
                    'kg2' => $kg2
                );
                $i++;
            }


        $arrayMain[] = $array;

        $arrayMain['totals'] = $totals;


        echo json_encode($arrayMain);

    }





    public function gte_sale_grpup_products_export()
    {
        $productid = $_GET['productid'];
        $cateTypes = $_GET["cateTypes"];
        $limit = $_GET['limit'];
        $formdate = $_GET['formdate'];
        $todate = $_GET['todate'];
        $filterBrand = $_GET['brand'];
        $filterYs = $_GET['ys'];
        $filterUom = $_GET['uom'];
        $filterColor = $_GET['color'];
        $filterThickness = $_GET['thickness'];
        $filterCatType = $_GET['categoryType'];
        $filterMatType = $_GET['materialType'];
        $filterGsm = $_GET['gsm'];

        if ($productid == 'All') {
            $catInput = explode(',',$cateTypes);
            
            // foreach($catInput as $val){
            //     echo $val."----";
            // }
            // exit;
            if(in_array("ALL", $catInput)){
                $catInput = " != 1 ";
            }else{
                $catInput = "IN (".implode(',',$catInput).") ";
            }
            $prodQuery = "SELECT op.product_id FROM order_product_list_process op LEFT JOIN product_list pl ON pl.id = op.product_id WHERE op.categories_id $catInput AND op.deleteid=0 AND op.product_name != '' AND pl.deleteid=0 ";

            //Filter Part ->
            if ($filterBrand !== '') {
                $prodQuery .= " AND pl.brand = '$filterBrand' ";
            }
            if ($filterYs !== '') {
                $prodQuery .= " AND pl.yield_strength LIKE '%".$filterYs."%' ";
            }
            if ($filterUom !== '') {
                $prodQuery .= " AND pl.uom = '$filterUom' ";
            }
            if ($filterColor !== '') {
                $prodQuery .= " AND pl.color = '$filterColor' ";
            }
            if ($filterThickness !== '') {
                $prodQuery .= " AND pl.thickness = '$filterThickness' ";
            }
            if ($filterCatType !== '') {
                $prodQuery .= " AND pl.categorie_type = '$filterCatType' ";
            }
            if ($filterMatType !== ''){
                $prodQuery .= " AND pl.material_type = '$filterMatType' ";
            }
            if($filterGsm !== ''){
                $prodQuery .= " AND pl.coating_mass LIKE '%".$filterGsm."%' ";
            }

            // Filter Part

            $prodQuery .= " AND op.create_date BETWEEN '".$formdate." 00:00:00' AND '".$todate." 23:59:59' GROUP BY op.product_id ORDER BY REPLACE(pl.product_name , ' ', '')";     
            $allProducts = $this->db->query($prodQuery)->result();
        } else {
            $productid = explode(',',$productid);
            // print_r($productid);
            // exit;
            foreach($productid as $key => $prod){
                
                $obj['product_id'] = $prod;
                $allProducts[] =  (object)$obj;
            }
           
        }

        
        // echo $prodQuery;
        // exit;

        if(count( $allProducts) < 1){
            return false;
        }
        function refineValue($value)
        {
            if ($value != 0 && $value != '') {
                return floatval(round($value, 2));
            } else {
                return 0;
            }
        }

        $array = array();
        $totals = array(
            'sq_mtr' => 0,
            'R_Ft1' => 0,
            'kg1' => 0,
            'R_sq_mtr' => 0,
            'kg2' => 0
        );
        $i = 1;




        $commaSeparatedNames = implode(', ', array_map(function ($obj) {
            if (is_object($obj) && isset($obj->product_id)) {
                return strval($obj->product_id);
            } elseif (is_array($obj) && isset($obj['product_id'])) {
                return strval($obj['product_id']);
            } else {
                return null; // Handle the case when 'product_id' is not found
            }
        }, $allProducts));
// // 
// print_r($commaSeparatedNames);
//         exit;
       
        $limitExtend = " SET SESSION group_concat_max_len = 99999 ";

        $this->db->query( $limitExtend);

       //Iron and Steel Corr. Sheet
        $query1 = "SELECT  SUM(a.qty) AS sq_mtr, a.product_id   FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 3 AND a.product_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by product_id";
        $res1 = $this->db->query($query1)->result();

       
        //Accessories
        $query2 = "SELECT  SUM(a.qty) AS R_Ft1, a.product_id,a.sub_product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 1 AND a.sub_product_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 AND a.deleteid = 0 group by sub_product_id";
        
        $res2 = $this->db->query($query2)->result();

        // Roll Sheet
        $query3 = "SELECT  SUM(a.qty) AS R_sq_mtr, a.product_id,a.sub_product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 591 AND  a.sub_product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by sub_product_id";
        $res3 = $this->db->query($query3)->result();

        //Steel Coil
        $query4 = "SELECT SUM(a.qty) AS kg1, a.product_id, a.tile_material_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND (a.categories_id = 593 OR a.categories_id = 28) AND a.tile_material_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by tile_material_id";
        $res4 = $this->db->query($query4)->result();

         //Profile Ridge & Arch
        $query5 = "SELECT SUM(a.qty) AS PRA_Ft, a.product_id, a.sub_product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id =  32 AND a.sub_product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base = 1 group by sub_product_id";
        $res5 = $this->db->query($query5)->result();

        //Tile Sheet
        $query6 = "SELECT  SUM(a.qty) AS TS_Ft, a.product_id, a.tile_material_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id = 26 AND a.tile_material_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by tile_material_id";
        $res6 = $this->db->query($query6)->result();

        //Liner Sheet
        $query7 = "SELECT   SUM(a.qty) AS LS_Ft, a.product_id, a.tile_material_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id = 590 AND a.tile_material_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by tile_material_id";
        $res7 = $this->db->query($query7)->result();

        //Purlin
        $query8 = "SELECT   SUM(a.qty) AS Purlin_ton, a.product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND  a.categories_id = 5 AND a.product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by product_id";
        $res8 = $this->db->query($query8)->result();

 
         //Decking Sheet
        $query9 = "SELECT  SUM(a.qty) AS DeckSh_ton, a.product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id = 34 AND  a.product_id IN ($commaSeparatedNames) AND  b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by product_id";
        $res9 = $this->db->query($query9)->result();

        //Others 
        $query10 = "SELECT SUM(a.qty) AS others_qty, a.product_id FROM order_product_list_process as a INNER JOIN orders_process as b ON a.order_id = b.id WHERE a. deleteid=0 AND a.categories_id NOT IN (3,1,591,593,28,32,26,590,5,34) AND  a.product_id IN ($commaSeparatedNames) AND b.create_date >= '$formdate' AND b.create_date <= '$todate' AND b.deleteid = 0 AND b.order_base  = 1 group by product_id";
        $res10 = $this->db->query($query10)->result();      
       
        foreach ($allProducts as $item) {
            // print_r($item);
            $productId = $item->product_id;
                $outputArray[$productId] = array(
                    'product_id' => $productId,
                    'sq_mtr_order_id' => [],
                    'sq_mtr' => 0,
                );
                    
                     
        }


        foreach($res1 as $sq_mtr){
            //Corr. Sheet
            $valuesArray = explode(',', $sq_mtr->sq_mtr_order_id);
            foreach($valuesArray as $item){
                $outputArray[$sq_mtr->product_id]['sq_mtr_order_id'][] = $item;
            }
            $outputArray[$sq_mtr->product_id]['sq_mtr'] += $sq_mtr->sq_mtr;
        }
            
        foreach($res2 as $R_Ft1){
            //Accessories
                $valuesArray = explode(',', $R_Ft1->R_Ft1_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$R_Ft1->sub_product_id]['R_Ft1_order_id'][] = $item;
                }
                $outputArray[$R_Ft1->sub_product_id]['R_Ft1'] += $R_Ft1->R_Ft1;
        }

         foreach($res3 as $R_sq_mtr){
            // Roll Sheet
               
                $valuesArray = explode(',', $R_sq_mtr->R_sq_mtr_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$R_sq_mtr->product_id]['R_sq_mtr_order_id'][] = $item;
                }
                $outputArray[$R_sq_mtr->product_id]['R_sq_mtr'] += $R_sq_mtr->R_sq_mtr;
        }
        foreach($res4 as $kg1){
             //Steel Coil
                $valuesArray = explode(',', $kg1->kg1_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$kg1->tile_material_id]['kg1_order_id'][] = $item;
                }
                $outputArray[$kg1->tile_material_id]['kg1'] += $kg1->kg1;
        }

        foreach($res5 as $PRA_Ft){
            //Profile Ridge & Arch
                $valuesArray = explode(',', $PRA_Ft->PRA_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$PRA_Ft->sub_product_id]['PRA_Ft_order_id'][] = $item;
                }
                $outputArray[$PRA_Ft->sub_product_id]['PRA_Ft'] += $PRA_Ft->PRA_Ft;
        }

        foreach($res6 as $TS_Ft){
             //Tile Sheet
                $valuesArray = explode(',', $TS_Ft->TS_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$TS_Ft->tile_material_id]['TS_Ft_order_id'][] =  $item;
                }
                $outputArray[$TS_Ft->tile_material_id]['TS_Ft'] += $TS_Ft->TS_Ft;
        }

        foreach($res7 as $LS_Ft){
            //Liner Sheet
                $valuesArray = explode(',', $LS_Ft->LS_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$LS_Ft->tile_material_id]['LS_Ft_order_id'][] = $item;
                }
                $outputArray[$LS_Ft->tile_material_id]['LS_Ft'] += $LS_Ft->LS_Ft;
        }

        foreach($res8 as $Purlin_ton){
            //Purlin
                $valuesArray = explode(',', $Purlin_ton->Purlin_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$Purlin_ton->product_id]['Purlin_ton_order_id'][] = $item;
                }
                $outputArray[$Purlin_ton->product_id]['Purlin_ton'] += $Purlin_ton->Purlin_ton;
        }

        foreach($res9 as $DeckSh){
            //Decking Sheet
                $valuesArray = explode(',', $DeckSh->DeckSh_order_id);
                foreach($valuesArray as $item){
                    $outputArray[$DeckSh->product_id]['DeckSh_ton_order_id'][] =  $item;
                }
                $outputArray[$DeckSh->product_id]['DeckSh_ton'] += $DeckSh->DeckSh_ton;
        }

        foreach($res10 as $others){
            //others
                $valuesArray = explode(',', $others->others_id);
                foreach($valuesArray as $item){
                    $outputArray[$others->product_id]['others_order_id'][] = $item;
                }
                $outputArray[$others->product_id]['others_qty'] += $others->others_qty;
        }
  
            foreach ($outputArray as $value) {

                
                $sq_mtr = 0;
                $R_Ft1 = 0;
                $R_sq_mtr = 0;
                $kg1 = 0;
                $PRA_Ft = 0;
                $TS_Ft = 0;
                $LS_Ft = 0;
                //Single values
                $sq_mtr = refineValue($value['sq_mtr']);
                $R_Ft1 = refineValue($value['R_Ft1']);
                $R_sq_mtr = refineValue($value['R_sq_mtr']);
                $kg1 = refineValue($value['kg1']);
                $PRA_Ft = refineValue($value['PRA_Ft']);
                $TS_Ft = refineValue($value['TS_Ft']);
                $LS_Ft = refineValue($value['LS_Ft']);
                $Purlin_ton = refineValue($value['Purlin_ton']);
                $DeckSh_ton = refineValue($value['DeckSh_ton']);
                $others_qty = refineValue($value['others_qty']);
                //totals
                $totals['sq_mtr'] = refineValue($totals['sq_mtr'] += $sq_mtr);
                $totals['R_Ft1'] = refineValue($totals['R_Ft1'] += $R_Ft1);
                $totals['R_sq_mtr'] = refineValue($totals['R_sq_mtr'] += $R_sq_mtr);
                $totals['kg1'] = refineValue($totals['kg1'] += $kg1);
                $totals['PRA_Ft'] = refineValue($totals['PRA_Ft'] += $PRA_Ft);
                $totals['TS_Ft'] = refineValue($totals['TS_Ft'] += $TS_Ft);
                $totals['LS_Ft'] = refineValue($totals['LS_Ft'] += $LS_Ft);
                $totals['Purlin_ton'] = refineValue($totals['Purlin_ton'] += $Purlin_ton);
                $totals['DeckSh_ton'] = refineValue($totals['DeckSh_ton'] += $DeckSh_ton);
                $totals['others_qty'] = refineValue($totals['others_qty'] += $others_qty);

                $kg2 = "0";
                // print_r($value);
                $product_list = $this->Main_model->where_names('product_list', 'id', $value['product_id']);

                foreach ($product_list as $pro_list) {
                    //From product_list Table
                    $product_name = $pro_list->product_name;
                    $category_name = $pro_list->categorie_type ? $pro_list->categorie_type : '-';
                    $material_type = $pro_list->material_type ? $pro_list->material_type : '-';
                    $color = $pro_list->color ? $pro_list->color : '-';
                    $thickness = $pro_list->thickness ? $pro_list->thickness : '-';
                    $coating_mass = $pro_list->coating_mass ? $pro_list->coating_mass : '-';
                    $yield_strength = $pro_list->yield_strength ? $pro_list->yield_strength : '-';
                    $brand = $pro_list->brand ? $pro_list->brand : '-';
                    $uom = $pro_list->uom ? $pro_list->uom : '-';
                }

                //Result
                $array[] = array(
                    'no' => $i,
                    // 'order_id' => $value->order_id,
                    'product_id' => $value->product_id,
                    'category_name' => $category_name,
                    'product_name' => $product_name,
                    'color' => $color,
                    'thickness' => $thickness,
                    'material_type' => $material_type,
                    'yield_strength' => $yield_strength,
                    'coating_mass' => $coating_mass,
                    'brand' => $brand,
                    'uom' => $uom ,
                    'sq_mtr' => $sq_mtr,
                    'sq_mtr_order_id' => base64_encode(implode(',',$value['sq_mtr_order_id'])),
                    'R_Ft1' => $R_Ft1,
                    'R_Ft1_order_id' => base64_encode(implode(',',$value['R_Ft1_order_id'])),
                    'kg1' => $kg1,
                    'kg1_order_id' => base64_encode(implode(',',$value['kg1_order_id'])),
                    'R_sq_mtr' => $R_sq_mtr,
                    'R_sq_mtr_order_id' => base64_encode(implode(',',$value['R_sq_mtr_order_id'])),
                    'PRA_Ft' => $PRA_Ft,
                    'PRA_Ft_order_id' => base64_encode(implode(',',$value['PRA_Ft_order_id'])),
                    'TS_Ft' => $TS_Ft,
                    'TS_Ft_order_id' => base64_encode(implode(',',$value['TS_Ft_order_id'])),
                    'LS_Ft' => $LS_Ft,
                    'LS_Ft_order_id' => base64_encode(implode(',',$value['LS_Ft_order_id'])),    
                    'Purlin_ton'  => $Purlin_ton,   
                    'Purlin_ton_order_id'   => base64_encode(implode(',', $value['Purlin_ton_order_id'])),
                    'DeckSh_ton'  => $DeckSh_ton,   
                    'DeckSh_ton_order_id'   => base64_encode(implode(',', $value['DeckSh_ton_order_id'])),
                    'others_qty' => $others_qty,
                    'others_order_id' => base64_encode(implode(',', $value['others_order_id'])),
                    'kg2' => $kg2
                );
                $i++;
            }


        // $arrayMain[] = $array;

        // $arrayMain['totals'] = $totals;

                       
                        

                 



                  
                    
                     
                         $filename='Sales_Product_Base_Report'.$formdate; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                         header("Expires: 0");

                  ?>
                 
                 <table border="1" >
                            <thead >
                            <tr>



                            <th colspan="20" style="text-align: center;"><b>Sales Product Base Report ( <?=$formdate?> to <?=$todate?> )</b></th>

                            </tr>
                              <tr>



                                <th ><b>Product Name</b></th>
                                <th><b>UOM</b></th>
                                <th style="width: 50px;"><b>Category Type</b></th>
                                <th><b>Material Type</b></th>
                                <th><b>Color</b></th>
                                <th><b>Thickness</b></th>
                                <th><b>Coating Mass</b></th>
                                <th><b>Yield Strength</b></th>
                                <th><b>Brand</b></th>
                                <th style="text-align: center;" ><b>Iron and Steel Corr. Sheet</b></th>
                                <th style="text-align: center;" ><b>Accessories</b></th>
                                <th style="text-align: center;" ><b>Sheet Coil</b></th>
                                <th style="text-align: center;" ><b>Roll Sheet</b></th>
                                <th style="text-align: center;" ><b>Profile Ridge & Arch</b></th>
                                <th style="text-align: center;" ><b>Tile Sheet</b></th>
                                <th style="text-align: center;" ><b>Liner Sheet</b></th>
                                <th style="text-align: center;" ><b>Purlin</b></th>
                                <th style="text-align: center;" ><b>Decking Sheet</b></th>
                                <th style="text-align: center;" ><b>Others</b></th>
                                <th style="text-align: center;"><b>Total</b></th>

                              </tr>
                              <tr>


                                <th ><b>UOM</b></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th style="text-align: center;">Sq. Mtr</th>
                                <th style="text-align: center;">R.Ft</th>
                                <th style="text-align: center;">KG</th>
                                <th style="text-align: center;">Sq.Mtr</th>
                                <th style="text-align: center;">Sq.Mtr</th>
                                <th style="text-align: center;">Sq.Mtr</th>
                                <th style="text-align: center;">Sq.Mtr</th>
                                <th style="text-align: center;">KG</th>
                                <th style="text-align: center;">Sq. Mtr</th>
                                <th style="text-align: center;">UOM</th>
                                <th style="text-align: center;">KG</th>



                              </tr>
                              <tr class="totals">

                                <td style=" text-align: right; padding-right: 20px;width: 380px;height: 40px;"></td>
                                <td class="border-0"></td>
                                <td class="border-0"></td>
                                <td class="border-0"></td>
                                <td class="border-0"></td>
                                <td class="border-0"></td>
                                <td class="border-0"></td>
                                <td class="border-0"></td>
                                <td class="border-0"><b>Totals : </b></td>
                                <td style="text-align: center;"><b><?=$totals['sq_mtr']?></b></td> <!-- Quantity -->
                                <td style="text-align: center;"><b><?=$totals['R_Ft1']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['kg1']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['R_sq_mtr']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['PRA_Ft']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['TS_Ft']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['LS_Ft']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['Purlin_ton']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['DeckSh_ton']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b><?=$totals['others_qty']?></b></td> <!-- Price -->
                                <td style="text-align: center;"><b></b></td> <!-- Price -->

                              </tr>
                            </thead>
                            <tbody>
                            <?php
                                foreach($array as $entry){
                            ?>
                            <tr>
                            <td><?=$entry['product_name']?></td>
                                <td><?=$entry['uom']?></td>
                                <td><?=$entry['category_name']?></td>
                                <td><?=$entry['material_type']?></td>
                                <td><?=$entry['color']?></td>
                                <td><?=$entry['thickness']?></td>
                                <td><?=$entry['coating_mass']?></td>
                                <td><?=$entry['yield_strength']?></td>
                                <td><?=$entry['brand']?></td>
                                <td><?=$entry['sq_mtr']?></td>
                                <td><?=$entry['R_Ft1']?></td>
                                <td><?=$entry['kg1']?></td>
                                <td><?=$entry['R_sq_mtr']?></td>
                                <td><?=$entry['PRA_Ft']?></td>
                                <td><?=$entry['TS_Ft']?></td>
                                <td><?=$entry['LS_Ft']?></td>
                                <td><?=$entry['Purlin_ton']?></td>
                                <td><?=$entry['DeckSh_ton']?></td>
                                <td><?=$entry['others_qty']?></td>
                                <td><?=$entry['kg2']?></td>
                            </tr>

                            <?php
                                }

                            ?>
                       </tbody>
                    </table>
                  



                  <?php
                   
                    

    }
   public function fetch_sales_return()
   {


   date_default_timezone_set('Asia/Kolkata');
        
     
      
        $tablename = 'order_sales_return_complaints';


        $order_base=$_GET['order_base'];
        
        $where = "";
        $sqls = "";
        $sqls1="";
         
        if($this->session->userdata['logged_in']['access']==11 || $this->session->userdata['logged_in']['access']==12)
        {
          
          
            $sales_team_id = array($this->userid);
            $resultsales_team = $this->Main_model->where_in_names('admin_users','define_saleshd_id',$sales_team_id);
            foreach ($resultsales_team as $values) {
                $sales_team_id[] = $values->id;
            }
            
            
            $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
            $sqls .= ' AND  a.sales_id IN (' . $sales_team_id . ')';
            $sqls1 .= ' AND  sales_id IN (' . $sales_team_id . ')';
             
        }
        $sqls .= ' AND  a.order_base="'.$order_base.'"';
        $sqls1 .= ' AND  order_base="'.$order_base.'"';
        
            $i = 1;
            $array = array();
            
            
         
            
            $query = $this->db->query("SELECT a.*,b.name FROM $tablename as a JOIN admin_users as b ON a.user_id=b.id  WHERE a.deleteid='0'  $sqls $where ORDER BY a.id DESC ");
            $result = $query->result();
       
        
        
        
        
        foreach ($result as $value) {
         
               
               
                 $totalqty=0;
         
                $totalamount=0;
                $query_profle_get = $this->db->query("SELECT * FROM sales_return_products  WHERE c_id='".$value->id."' AND deleteid=0");
                $result_lengeth = $query_profle_get->result();
                foreach ($result_lengeth as $valuess)
                {      
                    
                          $totalqty+=$valuess->qty;
                          $totalamount += round($valuess->qty*$valuess->rate);
                    
                       
                }
                    
         
                if($value->id=='106')
               {
                  $totalamount=$totalamount+61.1;
               }


              $totalamount= round($totalamount,2);
              $this->db->query("UPDATE $tablename SET bill_total='".$totalamount."' WHERE id='".$value->id."'");

              if($value->re_order_no!='')
              {


    //$this->db->query("UPDATE all_ledgers SET credits='".$totalamount."' WHERE reference_no='".$value->re_order_no."' AND party_type=1 AND notes='Sales Return'");
               
              }



           


            if($value->deleteid==0)
            {



                   $queryss = $this->db->query("SELECT b.name as sales_person  FROM customers as a  JOIN admin_users as b ON a.sales_team_id=b.id WHERE  a.id='" . $value->customer . "'   ORDER BY a.id ASC");
                     $results = $queryss->result();
                     foreach ($results as  $values) {
                        $sales_person=$values->sales_person;
                     }

            $array[] = array('no' => $i, 'id' => $value->id,'driver_delivery_status'=>$value->driver_delivery_status,'amount' => $totalamount,'order_base' => $value->order_base,'driver_return' => $value->driver_return,'order_by' => $value->name,'qty'=>round($totalqty,2),'customer_id'=>$value->customer_id,'order_no' => $value->order_no,'re_order_no' => $value->re_order_no,'sales_person' => $sales_person, 'remarks' => $value->remarks, 'product_id' => $value->product_id,'create_date' => date('d-m-Y', strtotime($value->update_date)),'invoice_date' => date('d-m-Y', strtotime($value->invoice_date)),'update_date' => date('d-m-Y', strtotime($value->update_date)));
                $i++;

            }
            
            
            
        }
       
       $head="";  
       if($order_base==5)
       {
         $head="Return To Re-Sale";
       }

       if($order_base==2)
       {
          $head="Return To Sale";
       }


       if($order_base==8)
       {
          $head="Return To Extra Sheet";
       }
                   
                      $filename='Material_return_List'; 
                      header("Content-Type: application/xls");    
                      header("Content-Disposition: attachment; filename=$filename.xls");  
                      header("Pragma: no-cache"); 
                      header("Expires: 0");

?>

  
                                                                <table style="width: 100%;colop" border="1" >
                                                                  <thead>
                                                                    <tr>
                                                                          <th colspan="12">Material return List <?php echo $head; ?></th>
                                                                        
                                                                      </tr>
                                                                      <tr>
                                                                         
                                                                          <th>ID</th>
                                                                          <th>Re-Order No</th>
                                                                          <th>Invoice No</th>
                                                                          <th>Invoice Date</th>
                                                                         
                                                                          <th>Customer</th>
                                                                          
                                                                        
                                                                          <th>Total QTY</th>
                                                                          <td>Total Amount</td>
                                                                          
                                                                          <th>Remarks</th>
                                                                          <th>Status</th>
                                                                          
                                                                          <th>Create By</th>
                                                                          <th>Sales Person</th>
                                                                          <th>Return Date</th>
                                                                          
                                                                      </tr>
                                                                  </thead>
                                                                  <tbody>
                                                                      
                                                                    <?php
                                                                    foreach($array as $vl)
                                                                    {
                                                                        ?>
                                                                      <tr  >
                                                                         
                                                                          
                                                                          <td>  <?php echo $vl['no']; ?> </td>
                                                                              
                                                                             
                                                                           
                                                                              
                                                                             
                                                                              
                                                                        
                                                                          <td>"<?php echo $vl['re_order_no']; ?>"
                                                                              
                                                                             
                                                                             
                                                                             
                                                                              
                                                                         </td>
                                                                          
                                                                          <td>
                                                                              "<?php echo $vl['order_no']; ?>"
                                                                             
                                                                             
                                                                              
                                                                             
                                                                              
                                                                         </td>
                                                                          
                                                                          
                                                                          
                                                                           <td><?php echo $vl['invoice_date']; ?> </td>
                                                                            
                                                                          <td><?php echo $vl['customer_id']; ?></td>
                                                                          <td><?php echo $vl['qty']; ?></td>
                                                                          <td><?php echo $vl['amount']; ?></td>
                                                                          <td> <?php echo $vl['remarks']; ?></td>
                                                                          <td>

                                                                            <?php
                                                                              if($vl['order_base']==0)
                                                                              {
                                                                                echo "Open Order";
                                                                              }
                                                                               if($vl['order_base']==1)
                                                                              {
                                                                                echo "Driver Assigend";
                                                                              }
                                                                               if($vl['order_base']==4)
                                                                              {
                                                                                echo "Trip Started";
                                                                              }
                                                                               if($vl['order_base']==6)
                                                                              {
                                                                                echo "Reschedule Order";
                                                                              }
                                                                               if($vl['order_base']==2)
                                                                              {
                                                                                         if($vl['driver_delivery_status']==1)
                                                                                      {
                                                                                          echo "Return Completed";
                                                                                      }
                                                                                       if($vl['driver_delivery_status']!=1)
                                                                                      {
                                                                                        echo "Return To Sale";
                                                                                      }
                                                                                
                                                                              }
                                                                               if($vl['order_base']==5)
                                                                              {
                                                                                echo "Return To Re-sale";
                                                                              }
                                                                             
                                                                              if($vl['order_base']==8)
                                                                              {
                                                                                echo "Return To Extra Sheet";
                                                                              }
                                                                              if($vl['order_base']==3)
                                                                              {
                                                                                echo "Return Revokedt";
                                                                              }
                                                                            ?>
                                                                              
                                                                       
                                                                          </td>
                                                                          <td><?php echo $vl['order_by']; ?></td>
                                                                           <td> <?php echo $vl['sales_person']; ?></td>
                                                                          <td>
                                                                           <?php echo $vl['create_date']; ?>
                                                                          </td>
                                                                         
                                                                      </tr>
                                                                      <?php
                                                                  }
                                                                  ?>
                                                                         
                                                                   
                                                                  </tbody>
                                                              </table>

<?php


   }


      public function commsionconvert()
    {
        
        
        
        
        
        
                        $form_data = json_decode(file_get_contents("php://input"));
                        $date= date('d-m-Y');
                        $time= date('h:i A');
                         
                         
                                    $customer_id1=$form_data->customer_id1;
                                    $customer_id2=$form_data->customer_id2;
                                    
                                    $customerdata=$form_data->customerdata;
                                    $customer=explode("-",$customerdata);
                                    $customer_name=$customer[1];
                                    
                                    
                                    $customerdata2=$form_data->customerdata2;
                                    $customer2=explode("-",$customerdata2);
                                    $customer_id2=$customer2[0];
                                    $customer_name2=$customer2[1];
                                    
                                    $amount=$form_data->credit;
                                  
                                    
                                    $notes=$form_data->notes;
                                    $payment_date=$form_data->payment_date;
                                    $order_no=0;
                                    $result= $this->Main_model->where_names('all_ledgers','id',$form_data->id);
                                    foreach ($result as  $value)
                                    { 
                                        $order_no=$value->reference_no;
                                        $id=$value->id;
                                         
                                    }
                            
                                    $data_address_refer['order_id'] = 0;
                                    $data_address_refer['order_no'] = $order_no;
                                    $data_address_refer['difference'] = 0;
                                    $data_address_refer['reference_no'] = $order_no;
                                    $data_address_refer['credits'] = round($amount,2);
                                    $data_address_refer['order_id'] = 0;
                                    $data_address_refer['customer_id'] = $customer_id2;
                                    $data_address_refer['user_id'] = $this->userid;
                                    $data_address_refer['account_head_id'] = 68;
                                    $data_address_refer['account_heads_id_2'] = 116;
                                    $data_address_refer['order_trancation_status'] = 0;
                                    $data_address_refer['bank_id'] = 0;
                                    $data_address_refer['debits'] = 0;
                                    $data_address_refer['collected_amount'] = $amount;
                                    $data_address_refer['payment_date'] = $payment_date;
                                    $data_address_refer['notes'] = 'Commission Credit '.$order_no;
                                    $data_address_refer['process_by'] = 'Commission Credit '.$order_no;
                                    $data_address_refer['commission_customer'] =0;
                                    $data_address_refer['payment_time'] = $time;
                                    $data_address_refer['party_type'] = 1;
                                    $data_address_refer['deletemod'] = 'CMMCT'.$id;
                                    
                                    
                                    
                                    
                                    $data_address_refer2['order_id'] = 0;
                                    $data_address_refer2['order_no'] = $order_no;
                                    $data_address_refer2['difference'] = 0;
                                    $data_address_refer2['reference_no'] = $order_no;
                                    $data_address_refer2['credits'] = 0;
                                    $data_address_refer2['order_id'] = 0;
                                    $data_address_refer2['customer_id'] = $customer_id1;
                                    $data_address_refer2['user_id'] = $this->userid;
                                    $data_address_refer2['account_head_id'] = 48;
                                    $data_address_refer2['account_heads_id_2'] = 48;
                                    $data_address_refer2['order_trancation_status'] = 0;
                                    $data_address_refer2['bank_id'] = 0;
                                    $data_address_refer2['debits'] = round($amount,2);
                                    $data_address_refer2['collected_amount'] = 0;
                                    $data_address_refer2['payment_date'] = $payment_date;
                                    $data_address_refer2['notes'] = 'Commission Convert '.$customer_name2;
                                    $data_address_refer2['process_by'] = 'Commission Convert '.$customer_name2;
                                    $data_address_refer2['commission_customer'] =0;
                                    $data_address_refer2['payment_time'] = $time;
                                    $data_address_refer2['party_type'] = 5;
                                    $data_address_refer2['deletemod'] = 'CMMCT'.$id;
                                    
                                    
                        
                                       if($amount>0)
                                       {
                                          $insertdataval=$this->Main_model->insert_commen($data_address_refer, 'all_ledgers');
                                          $insertdataval=$this->Main_model->insert_commen($data_address_refer2, 'all_ledgers');
                                       }
                                       
                        
                                   
                                   
                                   
           
                            

                  
                  
                  
        
    }
        



    public function product_stock_report()
    {
        
                                      


                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                           
                                             $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                             $data['active_base']='customer_1';
                                             $data['active']='customer_1';
                                             $data['title']    = 'Products Stock Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/product_stock_report',$data);
                                        
                                        
                                        }
                                        else
                                        {
                                             $this->load->view('admin/index');
                                        }
         

    }
    

    public function view_diffrence()
    {
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {

                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             
                                             $data['accountstypename']="";
                                             if(isset($_GET['accountstype']))
                                             {
                                                 
                                                  $accounttype= $this->Main_model->where_names('accounttype','id',$_GET['accountstype']);
                                                  foreach($accounttype as $vl)
                                                  {
                                                      $accountstypename=$vl->name;
                                                  }
                                                 $data['accountstypename']=$accountstypename;
                                             }
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'View Difference';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/view_difference.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }

    public function trial_balance_full_copy()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             
                                             $data['accountstypename']="";
                                             if(isset($_GET['accountstype']))
                                             {
                                                 
                                                  $accounttype= $this->Main_model->where_names('accounttype','id',$_GET['accountstype']);
                                                  foreach($accounttype as $vl)
                                                  {
                                                      $accountstypename=$vl->name;
                                                  }
                                                 $data['accountstypename']=$accountstypename;
                                             }
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Trial Balance';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance_full_copy.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    public function product_re_sale_stock_report()
    {
        
                                      


                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                           
                                             $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                             $data['active_base']='customer_1';
                                             $data['active']='customer_1';
                                             $data['title']    = 'Product Re-Sale Stock Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/product_re_sale_stock_report',$data);
                                        
                                        
                                        }
                                        else
                                        {
                                             $this->load->view('admin/index');
                                        }
         

    }
    
    public function product_extra_sheet_stock_report()
    {
        
                                      


                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                           
                                             $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                             $data['active_base']='customer_1';
                                             $data['active']='customer_1';
                                             $data['title']    = 'Product Extra Sheet Stock Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/product_extra_sheet_stock_report',$data);
                                        
                                        
                                        }
                                        else
                                        {
                                             $this->load->view('admin/index');
                                        }
         

    }
    
    
    
     public function updaterecord()
    {
        
        
        
        
        
        
                        $form_data = json_decode(file_get_contents("php://input"));
                        $date= date('d-m-Y');
                        $time= date('h:i A');
                         
                            $driver_collection_status=$form_data->DriverOptionedit;


                                                                           

                            $customer_id_old=$form_data->customer_id;
                            $customerdata=$form_data->customerdata;
                            $customer=explode("-",$customerdata);
                            $customer_id=$customer[0];
                            $customer_name=$customer[1];
                            
                            $bankaccount=$form_data->bankaccount;
                            $payment_mode_payoff=$form_data->payment_mode_payoff;
                            $party_type=$form_data->party_type_data;



                            if($party_type==2)
                            {
                              
                                                                           if($driver_collection_status==0)
                                                                            {
                                                                              $ssname="COLLECTION - ";
                                                                            }
                                                                            else
                                                                            {
                                                                              $ssname="RENT - ";
                                                                            }

                                                                            $customer_name=$ssname.$customer_name;

                            }


                            
                            $bank_id_old=0;
                            
                            $result= $this->Main_model->where_names('all_ledgers','id',$form_data->id);
                            foreach ($result as  $value)
                            {
                                 
                                 if($value->bank_id!='')
                                 {
                                     $bank_id_old=$value->bank_id;
                                 }
                                 $deletemod=$value->deletemod;
                                 $order_id=$value->order_id;
                                 $process_by=$value->process_by;
                                 $order_no=$value->order_no;
                                 
                                 $payment_mode=$value->payment_mode;
                                 $reference_no=$value->reference_no;
                                 $customer_id_old=$value->customer_id;
                                 $party_to_party=$value->party_to_party;
                                 //$driver_collection_status=$value->driver_collection_status;
                                 
                                 
                               
                                 
                                                                    $orgamount= $value->debits;
                                                                    
                                                                    if($orgamount>0)
                                                                    {
                                                                        
                                                                        $orgamount= $value->debits.' DR';

                                                                if($value->process_by=='Party Transfer' || $value->process_by=='Collection Verified By MD')
                                                                        {

                                                                           
                                                                        if($deletemod!='')
                                                                        {

                                                                             if($customer_id_old>0)
                                                                            {


                                        $this->db->query("UPDATE all_ledgers SET changes_status=1,driver_collection_status='".$driver_collection_status."',credits='".$form_data->debit."',debits='".$form_data->credit."',payment_date='".$form_data->create_date."' WHERE deletemod='".$deletemod."' AND deleteid=0 AND customer_id!='".$customer_id_old."'");

                                                                             }


                                                                        }


                                                                        }



                                                                  if($reference_no=='Manual Journals Discount')
                                                                   {

                                                                            if($deletemod!=''){
                                                                                if($customer_id_old>0){
                                                                                   
                                                                            // if($form_data->debit>0){
                                        $this->db->query("UPDATE all_ledgers SET changes_status=1,driver_collection_status='".$driver_collection_status."',credits='".$form_data->debit."',debits='".$form_data->credit."',payment_date='".$form_data->create_date."' WHERE deletemod='".$deletemod."' AND deleteid=0 AND customer_id!='".$customer_id_old."'");
                                                                            // }
                                            
                                                                                                        }
                                                                                            }
                                                                            }




                                                                             if($reference_no=='Discount Approved')
                                                                             {



                                                                            if($deletemod!='')
                                                                            {
                                                                                  if($customer_id_old>0)
                                                                                  {

                                                                            // if($form_data->debit>0){
                                                                            $this->db->query("UPDATE all_ledgers SET changes_status=1,driver_collection_status='".$driver_collection_status."',credits='".$form_data->debit."',debits='".$form_data->credit."',payment_date='".$form_data->create_date."' WHERE deletemod='".$deletemod."' AND deleteid=0 AND customer_id!='".$customer_id_old."'");
                                                                            // }

                                                                                    }
                                                                                }
                                                                            }











                                                                    }
                                                                    else
                                                                    {
                                                                        $orgamount= $value->credits.' CR';


                                                            if($value->process_by=='Party Transfer' || $value->process_by=='Collection Verified By MD')
                                                                        {


                                                                              if($deletemod!='')
                                                                              {

                                                                                        if($customer_id_old>0)
                                                                                        {



                            $this->db->query("UPDATE all_ledgers SET changes_status=1,driver_collection_status='".$driver_collection_status."',debits='".$form_data->credit."',credits='".$form_data->debit."',payment_date='".$form_data->create_date."' WHERE deletemod='".$deletemod."' AND deleteid=0 AND customer_id!='".$customer_id_old."'");

                                                                                        }

                                                                               }

                                                                        }



                                                                        if($reference_no=='Manual Journals Discount')
                                                                         {

                                                                            if($deletemod!=''){
                                                                                 if($customer_id_old>0){
                                                                                    
                                                                            // if($form_data->credit>0){
                                              $this->db->query("UPDATE all_ledgers SET changes_status=1,driver_collection_status='".$driver_collection_status."',debits='".$form_data->credit."',credits='".$form_data->debit."',payment_date='".$form_data->create_date."' WHERE deletemod='".$deletemod."' AND deleteid=0 AND customer_id!='".$customer_id_old."'");
                                                                            // }
                                            
                                                                           
                                            
                                                                                                        }
                                                                                            }
                                                                            }



                                                                           if($reference_no=='Discount Approved'){

                                                                            if($deletemod!='')
                                                                            {
                                                                                 if($customer_id_old>0)
                                                                                 {

                                                                            // if($form_data->credit>0){
                            $this->db->query("UPDATE all_ledgers1 SET changes_status=1,driver_collection_status='".$driver_collection_status."',debits='".$form_data->credit."',credits='".$form_data->debit."',payment_date='".$form_data->create_date."' WHERE deletemod='".$deletemod."' AND deleteid=0 AND customer_id!='".$customer_id_old."'");
                                                                            // }




                                                                                 }
                                                                                            }
                                                                            }








                                                                        
                                                                    }
                                                                    


                                                                if($form_data->credit>0)
                                                                {
                                                                    $billamt=$form_data->credit;
                                                                }
                                                                if($form_data->debit>0)
                                                                {
                                                                    $billamt=$form_data->debit;
                                                                }

                                                                if($billamt>0)
                                                                {


                                                                    if($order_no!='')
                                                                    {

  
//$this->db->query("UPDATE all_ledgers SET changes_status=1,credits='".$billamt."',debits='0',edited_by='".$this->userid."' WHERE deletemod='DRICT-".$order_no."' AND deleteid=0");
//$this->db->query("UPDATE all_ledgers SET changes_status=1,debits='".$billamt."',credits='0',edited_by='".$this->userid."' WHERE deletemod='DRI-".$order_no."' AND deleteid=0");
//$this->db->query("UPDATE all_ledgers SET changes_status=1,credits='".$billamt."',debits='0',edited_by='".$this->userid."' WHERE deletemod='ORPAY".$order_no."' AND deleteid=0");
//$this->db->query("UPDATE bankaccount_manage SET changes_status=1,credit='".$billamt."',debit='0',edited_by='".$this->userid."' WHERE deletemod='ORPAY".$order_no."' AND deleteid=0");



                                                                    }


                                                                }
                                                                       
                                 








                                 
                                 
                                 
                             }
                             
                             
                             
                             if($party_type==1)
                             {
                                 
                                     if($order_id>0)
                                     {
                                         
                                             if($process_by=='Sales Return')
                                             {
                                                 
                                                 
                                                 
                                                    $cname="";
                                                    $sales_team_id1 = $this->Main_model->where_names('customers', 'id', $customer_id);
                                                    foreach ($sales_team_id1 as $val1) {
                                                        $cname = $val1->company_name;
                                                        
                                                    }
                                                   //$this->db->query("UPDATE order_sales_return_complaints SET customer='".$customer_id."',customer_id='".$cname."'  WHERE id='" . $order_id . "'");
                                             }
                                             else
                                             {
                                                 $totalval=0;
                                                 if($form_data->debit>0)
                                                 {
                                                    $totalval= 0;
                                                 }
                                                 //$this->db->query("UPDATE orders_process SET customer_id='".$customer_id."',bill_total='".$totalval."'  WHERE id='" . $order_id . "'");
                                                 
                                             }
                                             
                                     //$this->db->query("UPDATE all_ledgers SET customer_id='".$customer_id."',order_no='".$order_no."',reference_no='".$reference_no."'   WHERE order_id='" . $order_id . "' AND party_type=1 AND deleteid=0");
                                    
                                     }
                             
                             }
                             
                             
                            $data['edited_by']=$this->userid;
                            $data['bank_id']=$bankaccount; 
                            $data['payment_mode']=0; 

                            if($payment_mode_payoff!='')
                            {
                                $data['payment_mode_payoff']=$payment_mode_payoff; 
                            }
                            
                            $data['party_type']=$party_type; 
                            $data['order_id']=$order_id; 
                            
                            $data['debits']=$form_data->debit;
                            $data['credits']=$form_data->credit;
                            
                            $data['org_amount']=$orgamount.' Date : '.$date.' '.$time;
                            $data['changes_status']=1;
                            $data['driver_collection_status']=$driver_collection_status;
                            
                           

                            
                            if($form_data->notes!='')
                            {
                                 $data['notes']=$form_data->notes;
                            }
                                                                 
                            $data['payment_date']=$form_data->create_date;
                             $data['payment_time']=$time;
                            
                            $data['data_edited']=1;
                            
                            if($customer_id_old==$customer_id)
                            {
                                
                                  $data['get_id']=$form_data->id;
                                  $data['balance']=0; 

                                    if($form_data->payment_mode_payoff!='')
                                    {
                                        
                                         if($form_data->payment_mode_payoff == 'Cash'){
                                          $data['payment_mode']=0;
                                        }else{
                                          $data['payment_mode']=$form_data->payment_mode_payoff; 
                                        }
                                    }
                                  
                                  $this->Main_model->update_commen($data,'all_ledgers');

                                  if($party_type==4)
                                  {


                                       $this->db->query("UPDATE all_ledgers SET deleteid='50' WHERE id='".$form_data->id."'");
                                       

                                  }


                                  //$deletemodinsertr='ED'.$deletemod; 
                                  //$this->db->query("UPDATE all_ledgers SET deletemod='".$deletemodinsertr."' WHERE id='".$form_data->id."'");
                                
                                  $deletemodinsertr=$deletemod;
                                  $deletelog['userid']=$this->userid;
                                  $deletelog['all_legers']=$form_data->id;
                                  $deletelog['bank_legers']='Ledger Edit '.$orgamount;
                                  $this->Main_model->insert_commen($deletelog,'deleted_log');
                                                                 
                                
                                
                            }
                            else
                            {
                                
                                
                                
                                                                    $cnameold="";
                                                                    if($party_type=='1')
                                                                   {
                                                                    $sales_team_id1 = $this->Main_model->where_names('customers', 'id', $customer_id_old);
                                                                    foreach ($sales_team_id1 as $val1) {
                                                                      
                                                                        $cnameold = $val1->company_name;
                                                                        
                                                                    }
                                                                   }
                                                                    if($party_type=='2')
                                                                   {
                                                                    $sales_team_id1 = $this->Main_model->where_names('driver', 'id', $customer_id_old);
                                                                    foreach ($sales_team_id1 as $val1) {
                                                                      
                                                                        $cnameold = $val1->name;
                                                                        
                                                                    }
                                                                   }
                                                                    if($party_type=='3')
                                                                   {
                                                                    $sales_team_id1 = $this->Main_model->where_names('vendor', 'id', $customer_id_old);
                                                                    foreach ($sales_team_id1 as $val1) {
                                                                      
                                                                        $cnameold = $val1->name;
                                                                        
                                                                    }
                                                                   }
                                                                   
                                                                   
                                                                    if($party_type=='5')
                                                                   {
                                                                    $sales_team_id1 = $this->Main_model->where_names('accountheads', 'id', $customer_id_old);
                                                                    foreach ($sales_team_id1 as $val1) {
                                                                      
                                                                        $cnameold = $val1->name;
                                                                        
                                                                    }
                                                                   }
                                                                     if($party_type=='7')
                                                                   {
                                                                    $sales_team_id1 = $this->Main_model->where_names('accountheads', 'id', $customer_id_old);
                                                                    foreach ($sales_team_id1 as $val1) {
                                                                      
                                                                        $cnameold = $val1->name;
                                                                        
                                                                    }
                                                                   }
                                                                    if($party_type=='6')
                                                                   {
                                                                    $sales_team_id1 = $this->Main_model->where_names('accountheads_sub_group', 'id', $customer_id_old);
                                                                    foreach ($sales_team_id1 as $val1) {
                                                                      
                                                                        $cnameold = $val1->name;
                                                                        
                                                                    }
                                                                   }
                                                                   
                                                                    if($party_type=='8')
                                                                   {
                                                                    $sales_team_id1 = $this->Main_model->where_names('admin_users', 'id', $customer_id_old);
                                                                    foreach ($sales_team_id1 as $val1) {
                                                                      
                                                                        $cnameold = $val1->name;
                                                                        
                                                                    }
                                                                   }       



                                                               



                                                                
                                                                 



                                                                 $data['balance']=0;
                                                                 $ssname="";
                                                                 
                                                                 
                                                                 
                                                                 
                                                                 
                                                                   if($party_type=='1')
                                                                   {
                                                                       $query = $this->db->query("SELECT id,company_name as name,account_heads_id,account_heads_id_2 FROM customers  WHERE deleteid='0' AND id='".$customer_id."' ORDER BY company_name ASC");
                                                                      
                                                                       
                                                                  
                                                                   }
                                                                   elseif($party_type=='2')
                                                                   {


                                                                        $query = $this->db->query("SELECT id,name,account_heads_id,account_heads_id_2 FROM driver  WHERE deleteid='0'  AND id='".$customer_id."' ORDER BY name ASC");

                                                                           if($driver_collection_status==0)
                                                                            {
                                                                              $ssname="COLLECTION - ";
                                                                            }
                                                                            else
                                                                            {
                                                                              $ssname="RENT - ";
                                                                            }



                                                                        
                                                                   }
                                                                   elseif($party_type=='3')
                                                                   {
                                                                       $query = $this->db->query("SELECT id,name,account_heads_id,account_heads_id_2 FROM vendor  WHERE deleteid='0' AND id='".$customer_id."' ORDER BY name ASC");
                                                                       
                                                                       
                                                                   }
                                                                   elseif($party_type=='5')
                                                                   {
                                                                       
                                                                        $query = $this->db->query("SELECT id,name,account_heads_id,account_heads_id_2 FROM accountheads  WHERE deleteid='0' AND id='".$customer_id."' ORDER BY name ASC");
                                                                        
                                                                       
                                                                   }
                                                                   elseif($party_type=='6')
                                                                   {
                                                                       
                                                                       
                                                                        $query = $this->db->query("SELECT id,name,id as account_heads_id,id as account_heads_id_2 FROM accountheads_sub_group  WHERE deleteid='0' AND id='".$customer_id."' ORDER BY name ASC");
                                                                       
                                                                       
                                                                       
                                                                   }
                                                                   elseif($party_type=='7')
                                                                   {
                                                                       
                                                                       
                                                                        $query = $this->db->query("SELECT id,name,account_heads_id,account_heads_id_2 FROM accountheads  WHERE deleteid='0' AND id='".$customer_id."' ORDER BY name ASC");
                                                                        
                                                                       
                                                                   }
                                                                   elseif($party_type=='8')
                                                                   {
                                                                       
                                                                       
                                                                        $query = $this->db->query("SELECT id,name,id as account_heads_id,id as account_heads_id_2 FROM admin_users  WHERE deleteid='0' AND id='".$customer_id."' ORDER BY name ASC");
                                                                        
                                                                       
                                                                   }
                                                                   else
                                                                   {
                                                                       $query = $this->db->query("SELECT id,name,account_heads_id,account_heads_id_2 FROM admin_users  WHERE deleteid='0' AND access!='13' AND id='".$customer_id."' ORDER BY name ASC");
                                                                     
                                                                       
                                                                   }
                                                                                
                                                                     
                                                                 
                                                                 
                                                                                    $res=$query->result();
                                                                                    foreach($res as $val)
                                                                                    {
                                                                                            $company_name= $ssname.$val->name;
                                                                                            $account_heads_id= $val->account_heads_id;
                                                                                            $account_heads_id_2= $val->account_heads_id_2;
                                                                                    }
                                                                                    
                                                                                    
                                                                                   
                                                                                 
                                                                                 
                                                                 
                                                                 
                                                                                      if($party_type==1)
                                                                                      {
                                                                                          $data['account_heads_id_2']= 123; 
                                                                                          $data['account_head_id']=68;
                                                                                      
                                                                                      }
                                                                                      elseif($party_type==5)
                                                                                      {  
                                                                                          $data['account_heads_id_2']= $account_heads_id; 
                                                                                          $data['account_head_id']=$account_heads_id;
                                                                                          
                                                                                      }
                                                                                      elseif($party_type==7)
                                                                                      {
                                                                                        
                                                                                          $data['account_head_id']=$account_heads_id;
                                                                                          $data['account_heads_id_2']= $form_data->expense_head; 
                                                                                         
                                                                                      
                                                                                      }
                                                                                      elseif($party_type==8)
                                                                                      {
                                                                                            $data['account_head_id']= 8;
                                                                                            $data['account_heads_id_2']= 8;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                          $data['account_heads_id_2']= $account_heads_id_2; 
                                                                                          $data['account_head_id']=$account_heads_id;
                                                                                        
                                                                                      }
                                                                 
                                                                 
                                                                 
                                                                 
                                                                 $data['user_id']=$this->userid;

                                                                 $data['order_no']=$order_no;
                                                                 $data['notes']='Ledger change Party '.$cnameold;
                                                                 $data['reference_no']='CHANGE-'.$order_no.'-'.$customer_id.'-'.time();
                                                                 $data['process_by']='Party Transfer';
                                                                 $data['customer_id']=$customer_id;

                                                                  if($form_data->payment_mode_payoff!='')
                                                                  {
                                                                      
                                                                      if($form_data->payment_mode_payoff == 'Cash'){
                                                                          $data['payment_mode']=0;
                                                                        }else{
                                                                          $data['payment_mode']=$form_data->payment_mode_payoff; 
                                                                        }
                                                                  }



                                                                 $setresult = $this->Main_model->where_names('all_ledgers','reference_no',$data['reference_no']);

                                                                if(count($setresult)==0)
                                                                {



                                                                 if($customer_id>0)
                                                                 {








                                                                 if($process_by=='Party Transfer')
                                                                 {


                                                                      $data['get_id']=$form_data->id;
                                                                     $this->Main_model->update_commen($data, 'all_ledgers');
                    
                    $process_by='Party Transfer Change '.$company_name;
$this->db->query("UPDATE all_ledgers SET edited_by='".$this->userid."',driver_collection_status='".$driver_collection_status."',order_no='". $process_by."',reference_no='".$process_by."' WHERE deletemod='".$deletemod."' AND  customer_id='".$party_to_party."'");



                                                                    $deletemodinsertr=$deletemod;


                                                                 }
                                                                 else
                                                                 {

                                                                     $data['deletemod']='LE'.$customer_id.'-'.$form_data->id;
                                                                     $data['edited_by']=$this->userid;
                                                                     $data['driver_collection_status']=$driver_collection_status;
                                                                     $deletemodinsertr=$deletemod;

                                            $bankquerycheck = $this->db->query("SELECT id FROM all_ledgers  WHERE  deletemod='".$data['deletemod']."'");
                                             $bankquerycheck=$bankquerycheck->result();
                                                                      if(count($bankquerycheck)==0)
                                                                      {
                                                                         $deletemodinsertr=$data['deletemod']; 
                                                                         $insertid=$this->Main_model->insert_commen($data,'all_ledgers');
                                                                         $this->db->query("UPDATE all_ledgers SET deleteid='1',edited_by='".$this->userid."',process_by='Party Change Deleted' WHERE id='".$form_data->id."'");

                                                                      }

                                                                 }

                                                                






                                                                 
                                                                 $deletelog['userid']=$this->userid;
                                                                 $deletelog['all_legers']=$insertid;
                                                                 $deletelog['bank_legers']='Ledger change Party '.$cnameold;
                                                                 $this->Main_model->insert_commen($deletelog,'deleted_log');














                                                                 }


                                                                }




                                                                 
                                                                 
                                                                 
                                                                 
                            }
                            
                             
                             if($deletemod!='')
                            {


                                if($customer_name!='')
                                { 


                                  if($party_type==4)
                                  {
                                       
                                         $status_by='HDFC BANK TRANSFER';
                                        

                                         $result2=$this->db->query("SELECT b.bank_name,b.id,b.account_type FROM  bankaccount as b WHERE b.deleteid=0 and id='".$bankaccount."'");
                                         $result2=$result2->result();
                                         foreach ($result2 as  $sd) {

                                            $bank_name=$sd->bank_name;

                                         }



                                           $status_by_base='MOVED TO '.$bank_name ;
                                       $this->db->query("UPDATE bankaccount_manage SET status_by='".$status_by_base."' WHERE deletemod='".$deletemod."' AND deleteid=0");


                                  }
                                  else
                                  {



                                    $this->db->query("UPDATE bankaccount_manage SET amount='".$orgamount."',name='".$customer_name."',changes_status='1',bank_account_id='".$bankaccount."',debit='".$form_data->debit."',credit='".$form_data->credit."',deletemod='".$deletemodinsertr."',create_date='".$form_data->create_date."',edited_by='".$this->userid."' WHERE deletemod='".$deletemod."' AND deleteid=0");



                                  }

                                     
                      


                               }




                            }
                                      
                                                                   
                                                                    //$this->db->query("UPDATE bankaccount_manage SET deleteid='1' WHERE deletemod='".$deletemod."'");
                                                                    
                                                                    
                                                                   
                                                                    
                                                                    
                                                                    
                                                                   if($party_type==4)
                                                                  {


                                                                        $data_bank['bank_account_id']=$bankaccount;
                                                                        $data_bank['debit']=$form_data->credit;
                                                                        $data_bank['credit']=$form_data->debit;
                                                                        $data_bank['status_by']=$status_by;
                                                                        $data_bank['deletemod']=$deletemod;
                                                                        $data_bank['user_id']=$this->userid;
                                                                        $data_bank['name']=$customer_name;
                                                                        $data_bank['create_date']=date('Y-m-d',strtotime($form_data->create_date));
                                                                        
                                                                        if($bankaccount==24)
                                                                        {
                                                                             $data_bank['account_head_id']=106;
                                                                             $data_bank['account_heads_id_2']=106;
                                                                        }
                                                                        elseif($bankaccount==25)
                                                                        {
                                                                             $data_bank['account_head_id']=105;
                                                                             $data_bank['account_heads_id_2']=105;
                                                                        }
                                                                        else
                                                                        {

                                                                             $data_bank['account_head_id']=107;
                                                                             $data_bank['account_heads_id_2']=107;

                                                                        }
                                                                        $data_bank['party_type']=4;
                                                                        $this->Main_model->insert_commen($data_bank,'bankaccount_manage');

                                                                }
 
                                                                    
                                                                    
                                                                    
                                                                    
                                                                    
                                                                    
                                                                     
                                                                        
                                                             
                                                                        
                                                                        
                                                             
                                                                
                                                                
                            
                         
                         
                         
                                                           
                                             
                  
                  
                  
                  
                  
                  
                  
                  
        
    }
        
    public function fetch_single_data_by()
    {
                      
                     $form_data = json_decode(file_get_contents("php://input"));
                     $tablename=$form_data->tablename;
                     $id=$form_data->id;
                     $result= $this->Main_model->where_names($tablename,'id',$id);
                     foreach ($result as  $value) {
                     
                        $output['id'] = $value->id;
                        $customer_id = $value->customer_id;
                        $output['debit'] = $value->debits;
                        $output['credit'] = $value->credits;


  $output['bank_amount'] = round($value->bank_amount);
                        $output['beneficiary_name'] = $value->beneficiary_name;
                        $output['account_no'] = $value->account_no;
                        $output['ifsc_code'] = $value->ifsc_code;
                        $output['bank_notes'] = $value->bank_notes;
                       


$output['consider_gst'] = $value->consider_gst;
$output['gstamount'] = round($value->gstamount);
                          
                          $output['party_type4'] = $value->party_type4;
                          $output['party_type1'] = $value->party_type1;
                          $output['party_type2'] = $value->party_type2;
                          $output['party_type5'] = $value->party_type5;
                          $output['bank_amount'] =  round($value->bank_amount);
                          $output['beneficiary_name'] = $value->beneficiary_name;
                          $output['account_no']       = $value->account_no;
                          $output['ifsc_code']        = $value->ifsc_code;
                         // $output['bank_notes']       = $value->notes;
                         $output['excess_bank_id'] = $value->excess_bank_id;

                            $output['net_balance'] = $value->net_balance;
                          $output['blance_text'] = $value->blance_text;




                           $output['md_verification'] = $value->md_verification;

                          if($value->value1!=0)
                          {
                            $output['value1'] = round($value->value1);
                          }

                          if($value->value2!=0)
                          {
                            $output['value2'] = round($value->value2);
                          }

                          

                          if($value->value4!=0)
                          {
                            $output['value4'] =  round($value->value4);
                          }
                           if($value->value5!=0)
                          {
                            $output['value5'] = round($value->value5);
                          }

                          

                          if($value->remarks1!=0)
                          {
                            $output['remarks1'] = $value->remarks1;
                          }
                          

                          if($value->remarks2!=0)
                          {
                            $output['remarks2'] = $value->remarks2;
                          }
                          

                          if($value->remarks3!=0)
                          {
                           

                           $value33=explode('|',$value->value3);
                           $party_type33=explode('|',$value->party_type3);
                           $remarks33=explode('|',$value->remarks3);


                           $output['value3'] = $value33;
                           $output['party_type3'] = $party_type33;
                           $output['remarks3'] = $remarks33;


                          }
                          

                          if($value->remarks4!=0)
                          {
                            $output['remarks4'] = $value->remarks4;
                          }

                           if($value->remarks5!=0)
                          {
                            $output['remarks5'] = $value->remarks5;
                          }
                         
                          if($value->remarksB!=0)
                          {
                            $output['remarksB'] = $value->remarksB;
                          }
                         
                          $output['tdsamount'] = round($value->tdsamount);
                         
                          $output['totalsum'] = round($value->totalsum);
                          if($value->c_payment_date!='')
                          {
                              $output['c_payment_date'] = $value->c_payment_date;
                          }
                          else
                          {
                              $output['c_payment_date'] = $value->payment_date;
                          }
                         
                         





                        
                        $output['party_type'] = $value->party_type;
                        $output['create_date'] = $value->payment_date;
                        $output['payment_mode'] = $value->payment_mode_payoff;
                        $output['bank_id'] = $value->bank_id;
                        $output['notes'] = $value->notes;
                        $output['process_by'] = $value->process_by;
                        $output['order_no'] = $value->order_no;


 $output['company_name_cc']="";
$resultorder = $this->db->query("SELECT b.company_name  FROM orders_process as a JOIN customers as b ON a.customer_id=b.id WHERE a.order_no='" .$value->order_no . "' ");
                        $resultorder = $resultorder->result();
                        foreach ($resultorder as $valueorder) {
                          
                           $output['company_name_cc'] = $valueorder->company_name;
                            
                        }
                        
                            if($value->party_type==1)
                            {
                               $output['lable'] = 'Customers';
                               $query = $this->db->query("SELECT id,company_name as name FROM customers  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");
                                        
                            }
                            if($value->party_type==2)
                            {
                                
                                 $output['lable'] = 'Drivers';
                                $query = $this->db->query("SELECT id,name FROM driver  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                        
                            }
                             if($value->party_type==3)
                            {
                                
                                $output['lable'] = 'Venodrs';
                                $query = $this->db->query("SELECT id,name FROM vendor  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                            }
                            
                            if($value->party_type==5)
                            {
                                        $output['lable'] = 'Others Ledgers';
                                        $query = $this->db->query("SELECT id,name FROM accountheads  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==6)
                            {
                                       
                                       
                                        $output['lable'] = 'Expense Heads';
                                        $query = $this->db->query("SELECT id,name FROM accountheads_sub_group  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==7)
                            {
                                
                                       $output['lable'] = 'Others Ledgers';
                                       $query = $this->db->query("SELECT id,name FROM accountheads  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                   
                            }
                            
                            if($value->party_type==8)
                            {
                                
                                       $output['lable'] = 'Internal Users';
                                       $query = $this->db->query("SELECT id,name FROM admin_users  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                             $party_name="";
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }
                                                                      
                        
                        $output['party_name'] = $customer_id.'-'.$party_name;
                        $output['customer_id'] = $customer_id;
                        
                     
                        
                        
                     }

                    echo json_encode($output);


    }
    
    
    public function table_customize()
    {
        
        
         $status=$_GET['status_id'];
         $val=$_GET['status_val'];
         $this->db->query("DELETE FROM table_customize  WHERE user_id='".$this->userid."' AND label_id='".$val."'");
         
         $basedata['user_id'] = $this->userid;
         $basedata['label_id'] = $val;
         $basedata['status'] = $status;
         
         
         $this->Main_model->insert_commen($basedata, 'table_customize');
         
         
    }

     public function table_customize_new()
    {
        
        
         $status=$_GET['status_id'];
         $val=$_GET['status_val'];
         $this->db->query("DELETE FROM table_customize_new  WHERE user_id='".$this->userid."' AND label_id='".$val."'");
         
         $basedata['user_id'] = $this->userid;
         $basedata['label_id'] = $val;
         $basedata['status'] = $status;
         
         
         $this->Main_model->insert_commen($basedata, 'table_customize_new');
         
         
    }
  
     public function salesreport()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Sales Day Book';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/salesreport.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }





      
      public function order_date_confirmation_list_get_data() {
       
        
        $tablename ='orders_process';
     
        $where = "";
        $where1 = "";
        
        
        
        
        
        
        
         if(isset($_GET['formdate'])) 
        {     
            if($_GET['formdate']!='')
            {
                
                  $from_date = $_GET['formdate'];
                  $to_date = $_GET['todate'];
                  $where .= " AND a.delivery_date BETWEEN  '".$from_date."' AND '".$to_date."'";
                
            }
            else
            {

                  if($order_base==1)
                  {

                      $from_date = date('Y-m-d');
                      $to_date = date('Y-m-d');
                      $where .= " AND a.delivery_date BETWEEN  '".$from_date."' AND '".$to_date."'";


                  }
                 
            }
             
        }


       
        
        $where .= " AND a.order_base IN ('1','21') AND a.finance_status=2 AND a.assign_status=0 AND a.delivery_date_status=1 AND a.delivery_status=2";
            
        
        
       
        
        
        $i = 1;
        $array = array();
        
        
        
        
        
        
      
        if($this->session->userdata['logged_in']['access'] == '17')
        {
                 
                 
                 
                $sales_team_id = array($this->userid);
                $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                foreach ($poin_to_member as $point) {
                    $sales_team_id[] = $point->id;
                }
                
                $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                $userslog = ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                
                
             
                
                
                $query = $this->db->query("SELECT a.*,c.name,b.company_name,b.sales_team_id,b.email,b.phone,b.sales_team_id,b.sales_team_sub_id,b.address1,b.address2,b.landmark,b.zone,b.pincode,b.state FROM $tablename  as a LEFT JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users as c ON a.user_id=c.id WHERE a.deleteid='0'  $userslog $where ORDER BY a.id,b.sales_team_id DESC");
                $result = $query->result();
           
            
            
        }elseif ($this->session->userdata['logged_in']['access'] == '20') {
            
            
        
            
            
            $query = $this->db->query("SELECT a.*,b.sales_team_id FROM $tablename as a LEFT JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users as c ON a.user_id=c.id WHERE a.deleteid='0'  AND a.user_id='" . $this->userid . "' $where ORDER BY a.id,b.sales_team_id DESC");
            $result = $query->result();
            
            
            if (count($result) == 0) {
                
              
                
                
                $query = $this->db->query("SELECT a.*,c.name,b.company_name,b.sales_team_id,b.email,b.phone,b.sales_team_id,b.sales_team_sub_id,b.address1,b.address2,b.landmark,b.zone,b.pincode,b.state FROM $tablename  as a LEFT JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users as c ON a.user_id=c.id WHERE a.deleteid='0'  AND a.entry_user_id='" . $this->userid . "' $where ORDER BY a.id,b.sales_team_id DESC");
                $result = $query->result();
            } 
            
            
        }
        elseif ($this->session->userdata['logged_in']['access'] == '11'  || $this->session->userdata['logged_in']['access'] == '12')
        {
            
         
            
            $sales_team_id = array($this->userid);
            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
            foreach ($resultsales_team as $values) {
                $sales_team_id[] = $values->sales_member_id;
            }
           
           
           
            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
            foreach ($poin_to_member as $point) {
                $sales_team_id[] = $point->id;
            }
            
            
           
         
           
            $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
            $userslog = ' AND  a.user_id IN (' . $sales_team_id . ')';
            
        
            
            $query = $this->db->query("SELECT a.*,c.name,b.company_name,b.sales_team_id,b.email,b.phone,b.sales_team_id,b.sales_team_sub_id,b.address1,b.address2,b.landmark,b.zone,b.pincode,b.state FROM $tablename as a LEFT JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users as c ON a.user_id=c.id WHERE a.deleteid='0'  $userslog $where ORDER BY a.id,b.sales_team_id DESC");
            $result = $query->result();
            
            
        }
        elseif ($this->session->userdata['logged_in']['access'] == '16') 
        {
           
           
            $sales_team_id = array($this->userid);
            $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='" . $this->userid . "'");
            $resultsales_team = $query->result();
            foreach ($resultsales_team as $values) {
                $sales_team_id[] = $values->id;
            }
            
            
            
            $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
            $userslog = ' AND  a.sales_group IN (' . $sales_team_id . ')';
           
       
            
            
            $query = $this->db->query("SELECT a.*,c.name,b.company_name,b.sales_team_id,b.email,b.phone,b.sales_team_id,b.sales_team_sub_id,b.address1,b.address2,b.landmark,b.zone,b.pincode,b.state FROM $tablename as a LEFT JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users as c ON a.user_id=c.id WHERE a.deleteid='0'  $userslog $where ORDER BY a.id,b.sales_team_id DESC");
            $result = $query->result();
        }
        else
        {
            
        
            
            $query = $this->db->query("SELECT a.*,c.name,b.sales_team_id,b.company_name,b.email,b.phone,b.sales_team_id,b.sales_team_sub_id,b.address1,b.address2,b.landmark,b.zone,b.pincode,b.state FROM $tablename as a LEFT JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users as c ON a.user_id=c.id  WHERE a.deleteid='0' $where ORDER BY a.id,b.sales_team_id DESC");
            $result = $query->result();


        }
        
        
        
        
        
        
        
      
        if ($tablename == 'orders_process') {
            $tablename_sub = "order_product_list_process";
        }


        $trip_id_array=array();
        foreach ($result as $value) {


            $order_by = $value->name;
           


            $trip_id_array[]=$value->sales_team_id;

            $company_name = $value->company_name;
            $email = $value->email;
            $phone = $value->phone;
        

            



            
            if ($value->reason == 1) {
                $value->reason = 'Moved';
            }
           
            if ($value->reason == '-2') {
                $value->reason = 'TL Re-Assigned';
            }
             if ($value->delivery_status == '1') {
                $value->delivery_status = 'Client Scope';
             }
             
             if ($value->delivery_status == '2') {
                $value->delivery_status = 'Own Scope';
             }






              


           $le_amount=$value->bill_total;
           $discountfulltotal=$value->bill_total;


            $pending_amount='';
            
          
            


          $commission=$value->commission_check+$value->commission_check_fact;



            $commision_value = 0;       
            if ($value->commission_check == 1) {
                $commision_value = $value->bill_total - $value->bill_total_rate;
            }

            if ($value->commission_check_fact == 1) {
                $commision_value_fact =
                    $value->bill_total - $value->bill_total_fact;
                $commision_value = $commision_value_fact;
            }

              $delivery_date_time=date('d-m-Y', strtotime($value->delivery_date_time));

            $array[] = array('no' => $i,'sales_team_id' => $value->sales_team_id,'delivery_date' => $delivery_date_time,'delivery_confirm_person' => $value->delivery_confirm_person,'delivery_confirm_date_time' => $value->delivery_confirm_date_time, 'finance_status' => $value->finance_status,'id' => $value->id,'pending_amount' => $pending_amount,'le_amount' => $le_amount,'payment_mode' => $value->payment_mode,'payment_mode_re' => $value->payment_mode_reconciliation, 'delivery_status' => $value->delivery_status, 'base_id' => base64_encode($value->id), 'order_no' => $value->order_no,'deleteid' => $value->deleteid, 'reason' => $value->reason, 'name' => $company_name, 'email' => $email, 'phone' => $phone, 'totalamount' => round($discountfulltotal,2), 'commission' => round($commision_value), 'delivery_charge' => $value->delivery_charge, 'address' => $address, 'order_by' => $order_by, 'order_base' => $value->order_base, 'create_date' => date('d-m-Y', strtotime($value->delivery_date)),'create_date_new' => date('d-m-Y', strtotime($value->create_date)), 'create_time' => $value->create_time);
            $i++;
        }



         $trip_id_array_data= array_unique($trip_id_array);
          $trip_array=array();



           foreach ($trip_id_array_data as  $tripid) 
         { 
        
            $arraysub=array();
            $payment_mode_arr=array();
            $status=0;
            foreach ($array as $value)
            {
              
                     

                     if($tripid==$value['sales_team_id'])
                     {


                        
                        $arraysub[] = array(

                        'no' => $value['no'],
                        'sales_team_id' => $value['sales_team_id'],
                        'delivery_date' => $value['delivery_date'],
                        'delivery_confirm_person' => $value['delivery_confirm_person'],
                        'delivery_confirm_date_time' => $value['delivery_confirm_date_time'], 
                        'finance_status' => $value['finance_status'],
                        'id' => $value['id'],
                        'pending_amount' => $value['pending_amount'],
                        'le_amount' => $value['le_amount'],
                        'payment_mode' => $value['payment_mode'],
                        'payment_mode_re' => $value['payment_mode_reconciliation'],
                         'delivery_status' => $value['delivery_status'],
                          'base_id' => $value['id'],
                           'order_no' => $value['order_no'],
                           'deleteid' => $value['deleteid'], 
                           'reason' => $value['reason'],
                            'name' => $value['name'],
                             'email' => $value['email'], 
                             'phone' => $value['phone'], 
                             'totalamount' => $value['totalamount'], 
                             'commission' => $value['commision_value'],
                              'delivery_charge' => $value['delivery_charge'],
                               'address' => $value['address'],
                                'order_by' => $value['order_by'],
                                 'order_base' => $value['order_base'],
                                  'create_date' => $value['create_date'],
                                  'create_date_new' => $value['create_date_new'], 
                                  'create_time' => $value['create_time']

                        );


                     }

                       
              }

                $poin_to_member = $this->Main_model->where_names('admin_users','id',$tripid);
                foreach ($poin_to_member as $point) {
                    $sales_team_name = $point->name;
                }
                

                 $trip_array[]=array("sales_team_name"=>$sales_team_name,"subarray"=>$arraysub);
          

          }




                       $myData = array('PortalActivity' => $trip_array);
                       $filename='order_date_confirmation_list_'.$from_date.'_TO_'.$to_date; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");

                      ?>
                                                                 <table style="width: 100%;colop" border="1" >
                                                                  <thead>
                                                                      <tr>
                                                                          <th colspan="11">Order Date Confirmation list </th>
                                                                        
                                                                      </tr>
                                                                      <tr><th>#</th>
                                                                          <th>Order No</th>
                                                                          <th>Order Date</th>
                                                                          <th>Client Name</th>
                                                                          <th>Phone No</th>
                                                                          <th>Bill Total</th>
                                                                          <th>Delivery Scope</th>
                                                                          <th>Payment Mode</th>
                                                                           <?php
                                                                          if($this->session->userdata['logged_in']['access']!='12')
                                                                          {
                                                                           ?>
                                                                           
                                                                           
                                                                           
                                                                          <th>Order By</th>
                                                                          
                                                                           
                                                                           <?php
                                                                              
                                                                          }
                                                                          
                                                                          ?>

                                                                          <th>Delivery_Date</th>
                                                                           <th>Confirm_By</th>
                                                                         
                                                                          <th>Status</th>
                                                                         
                                                                      </tr>
                                                                  </thead>
                                                                  <tbody>

                                                                    <?php

                                                                    $ww=1;

                                                                    foreach($trip_array as $vl)
                                                                    {
                                                                        ?>


                                                                    <tr>
                                                                        <td colspan="11"><b><?php echo $vl['sales_team_name']; ?></b></td>
                                                                    </tr>


                                                                      <?php

                                                                    foreach($vl['subarray'] as $vls)
                                                                    {
                                                                        ?>


                                                                    <tr>
                                                                        <td ><?php echo $ww; ?></td>
                                                                        <td >"<?php echo $vls['order_no']; ?>"</td>
                                                                        <td ><?php echo $vls['create_date']; ?></td>
                                                                        <td ><?php echo $vls['name']; ?></td>
                                                                        <td ><?php echo $vls['phone']; ?></td>
                                                                        <td ><?php echo $vls['totalamount']; ?></td>
                                                                        <td ><?php echo $vls['delivery_status']; ?></td>
                                                                        <td ><?php echo $vls['payment_mode']; ?></td>
                                                                        <td ><?php echo $vls['order_by']; ?></td>
                                                                        <td ><?php echo $vls['delivery_date']; ?></td>
                                                                        <td ><?php echo $vls['delivery_confirm_person']; ?> <?php echo $vls['delivery_confirm_date_time']; ?></td>
                                                                        <td ><?php echo $vls['reason']; ?><p>Date Confirmed</p></td>
                                                                       

                                                                    </tr>

                                                                        <?php
                                                                         $ww++;
                                                                    }

                                                                    ?>
                                                                      


                                                                        <?php
                                                                    }

                                                                    ?>

                                                                   

                                                                  </tbody>

                                                              </table>

                      <?php

    }
    
    
    
      public function dailysalesreport()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                           
                                             
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC');
                                             
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Daily Sales Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/dailysalesreport.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
     public function dailysalesreport_test()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                           
                                             
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC');
                                             
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Daily Sales Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/dailysalesreport_test.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
     public function order_balance_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Order Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/order_balance_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
    
    
     public function customer_balance_report()
    {
                 



 $poin_to_member = $this->db->query("SELECT id,order_no,deleteid,collection_remarks,collection_remarks_2,reason,count(order_id) as countorder_id FROM `order_delivery_order_status` WHERE finance_status=2 AND deleteid=0 GROUP BY order_id HAVING countorder_id>1");

 $poin_to_member = $poin_to_member->result();
 $deleteid_id=0;
 foreach($poin_to_member as $tcs)
 {
             $deleteid_id=$tcs->id;
             if($deleteid_id>0)
             {
                $this->db->query("DELETE FROM order_delivery_order_status  WHERE id='" . $deleteid_id . "'");
             }
 }




 // $customer_id=$_GET['customer_id'];




                   $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

                   $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");


        $this->db->query("UPDATE order_delivery_order_status SET  assign_status_0_date=create_date,assign_status_11_date=NULL WHERE finance_status =2");
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                                             
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }

















    
    public function customer_balance_report_new()
    {
                  

                   $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

                   $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                                             
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_new.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }

























  public function customer_balance_report_optimized()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                                             
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_optimized.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }




   public function customer_balance_report_beta_color()
    { 
                  
  $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

  $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                                             
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_stage.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    public function fetch_data_customer_balance_report_color()
    { 
        $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");


        $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
       
        $testMode = (isset($_GET['test']) && $_GET['test']);

        $checked120          = "checked";
        $checked17 = "checked";
        $checked16 = "checked";

        $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
        if (count($table_customize) > 0) {
            foreach ($table_customize as $vl) {
                $label_id       = $vl->label_id;
                $status         = $vl->status;
                if ($label_id   == 120) {
                    if ($status == 0) {
                        $checked120 = "unchecked";
                    }
                }
            }
        }
        $customer_id                 = $_GET['customer_id'];
        $cateid                      = $_GET['order_status'];
        $sales_group                 = $_GET['sales_group'];
        $productid                   = $_GET['productid'];
        $limit                       = $_GET['limit'];
        $formdate                    = $_GET['formdate'];
        $todate                      = $_GET['todate'];
        $order_status                = $_GET['order_status'];
        $payment_mode                = $_GET['payment_mode'];
        $pagenum                     = $_GET['page'];
        $pagesize                    = $_GET['size'];
        $offset                      = ($pagenum - 1) * $pagesize;
        $stat                        = ' ';
        $userslog                    = "";
        $usersgroup                  = "";
        if ($cateid != 'ALL') {
            $userslog .= ' AND b.sales_team_id="' . $cateid . '"';
        }
        if ($customer_id != '0') {
            $userslog .= ' AND b.id="' . $customer_id . '"';
        }
        if ($sales_group != 'ALL') {
            $usersgroup = ' AND ss.id="' . $sales_group . '"';
        }
        if ($this->session->userdata['logged_in']['access'] == '17') {
            $sales_team_id = [];
            $query = $this->db->query(
                "SELECT define_saleshd_id FROM `admin_users`  WHERE id='" . $this->userid . "'"
            );
            $resultsales_team = $query->result();
            foreach ($resultsales_team as $values) {
                $sales_team_id[] = $values->define_saleshd_id;
            }
            $poin_to_member = $this->Main_model->where_names(
                'admin_users',
                'mark_sales_member',
                $this->userid
            );
            foreach ($poin_to_member as $point) {
                $sales_team_id[] = $point->define_saleshd_id;
            }
            $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
            $userslog .= ' AND  b.sales_team_id IN (' . $sales_team_id . ')';
        }
        if (
            $this->session->userdata['logged_in']['access'] == '11' ||
            $this->session->userdata['logged_in']['access'] == '12'
        ) {
            $sales_team_id = [$this->userid];
            $resultsales_team = $this->Main_model->where_in_names(
                'sales_member_head',
                'sales_head_id',
                $sales_team_id
            );
            foreach ($resultsales_team as $values) {
                $sales_team_id[] = $values->sales_member_id;
            }
            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
            foreach ($poin_to_member as $point) {
                $sales_team_id[] = $point->id;
            }
            $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
            $userslog .= ' AND  b.sales_team_id IN (' . $sales_team_id . ')';
        }
        $search = $_GET['search'];
        $searchsql = "";
        $searchsql2 = "";
        if ($search != "") {
            $searchsql2 =
                " AND b.company_name LIKE'%" .
                $search .
                "%' OR b.phone LIKE'%" .
                $search .
                "%'";
        }
        $result = $this->db->query(
            "SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'     $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC"
        );
        $result = $result->result();
        $i                   = 1;
        $array               = [];
        foreach ($result as $valuessg) {
            $salesperson                 = [];
                     $invertsTotal = [];

            $debitssettotal              = 0;
            $creditssettotal             = 0;
            $closeingtotal               = 0;
            $productiontotal             = 0;
            $productiontotal_return      = 0;
            $sheet_in_factory_val        = 0;
            $transit                     = 0;
            $balancetoatal               = 0;
            $Tran_Dr                     = 0;
            $Tran_Cr                     = 0;
            $Tot_Dr                      = 0;
            $Tot_Cr                      = 0;
            $Open_Dr                     = 0;
            $Open_Cr                     = 0;
            $Open_Bal                    = 0;
            $sheettotal_sales_full = 0;
            $get_sales_person = $this->db->query(
                "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND aa.status = 1 AND ssg.sales_group_id='" .
                    $valuessg->sales_group_id .
                    "' AND aa.status=1 AND aa.deleteid=0 $userslog GROUP BY aa.id ORDER BY aa.username ASC"
            );
            $get_sales_person = $get_sales_person->result();
            foreach ($get_sales_person as $valueget) {
                $debitssettotal_sales                        = 0;
                $creditssettotal_sales                       = 0;
                $closeingtotal_sales                         = 0;
                $productiontotal_sales                       = 0;
                $productiontotal_return_sales                = 0;
                $sheet_in_factory_val_sales                  = 0;
                $transit_sales                               = 0;
                $balancetoatal_sales                         = 0;
                $Tran_Dr_sales                               = 0;
                $Tran_Cr_sales                               = 0;
                $Tot_Dr_sales                                = 0;
                $Tot_Cr_sales                                = 0;
                $Open_Dr_sales                               = 0;
                $Open_Cr_sales                               = 0;
                $Open_Bal_sales                              = 0;
                 $sheettotal_sales = 0;
                 $resultsubdata=$this->db->query("SELECT b.mark_vendor_id,a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");

                $resultsubdata = $resultsubdata->result();
                $subresult = [];
                $k = 1;
                foreach ($resultsubdata as $value) {
                    $sales_group = $value->sales_group;
                    $sales_groupexe = explode('|', $sales_group);
                    $route_name = "";
                    $result_account_head = $this->db->query(
                        "SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='" .
                            $value->locality .
                            "'"
                    );
                    $result_account_head_text = $result_account_head->result();
                    $open_dr_balance = $value->opening_balance_dr - $value->opening_balance_cr;
                    $total_open_dr_balance += $open_dr_balance;
                    foreach ($result_account_head_text as $ass) {
                        $route_name = $ass->name;
                    }
                    $tcs_status = 0;
                    $customers_data = $this->Main_model->where_names('customers', 'id', $value->id);
                    foreach ($customers_data as $csvalv) {
                        $tcs_status = $csvalv->tcs_status;
                    }
                   $discount1=0;
                                                                 if($testMode){

                                                                      $resultsub_production=$this->db->query("SELECT 
                                   b.total_picked_amount AS totalvalue,
                                   os.bill_total AS bill_total
                                   FROM 
                                        order_product_list_process AS a 
                                    JOIN order_delivery_order_status AS b ON a.order_id = b.order_id
                                    JOIN orders_process AS os ON a.order_id = os.id
                                         
                                        JOIN all_ledgers al ON al.order_id = b.order_id 
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid IN ('0','88')  AND b.return_status = 0
                                        AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$todate'  AND (b.assign_status_12_date > '$todate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$todate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    GROUP BY 
                                        b.id 
                                    ORDER BY 
                                        a.id DESC");
                                                                
                                                               }else{
                                                                $resultsub_production=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason != 'Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub_production=$resultsub_production->result();


                                                                 // echo "</br>"; 
                                                                 // echo "Query 5 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 
                                                                
  
                                                                 $production=0;
                                                                 foreach($resultsub_production as $val)
                                                                 { 
                                                                               
                                                                              if($val->totalvalue>0)
                                                                    {
                                                                       $totalvalue=$val->totalvalue;
                                                                       //$totalvalue=$val->bill_total;
                                                                    }
                                                                    else
                                                                    {
                                                                        $totalvalue=$val->bill_total;
                                                                    }
                                                                    


                                                                    $production+=round($totalvalue,2);
                                                     
                                                                 }
                                                                 
                                                               
                                                                  
                                                                  
                                                                 $discount2=0;
                                                                if($testMode){
                                                                      $resultsub=$this->db->query("SELECT 
                                                                      b.total_picked_amount AS totalvalue
                                                                FROM  order_product_list_process AS a 
                                                                    JOIN 
                                                                        order_delivery_order_status AS b ON a.order_id = b.order_id 
                                                                  WHERE 
                                                                      a.deleteid = 0 
                                                                      AND b.customer_id = '".$value->id."'  
                                                                      AND b.order_base > 0
                                         AND b.reason != 'Return To Re-sale' AND b.return_status=0
                                                                      AND b.deleteid = 0  
                                                                      AND (
                                                                           CASE
                                                                              WHEN (b.delivery_status = 2 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$todate' OR b.assign_status_2_date IS NULL)) OR (b.delivery_status = 1 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)) THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  
                                                                  GROUP BY 
                                                                      b.id 
                                                                  ORDER BY 
                                                                      a.id DESC
                                                                  ");
                                                               
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();


                                                                 // echo "</br>"; 
                                                                 // echo "Query 6 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                       $totalvalue=$val->totalvalue;
                                                                   
                                                                  
                                                                   $total+=round($totalvalue,2);


                                                                  
                                                     
                                                                 }
                                                                 
                                                                 
                                                               
                                                                           
                                                                  
                                                                 
                                                                      
                                                                
                                                                     if($testMode){  
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND date(b.create_date) <= '".$todate."'   AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub_inproduction=$resultsub_inproduction->result();
                                                                 $inproduction_total_return=0;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 7 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 foreach($resultsub_inproduction as $vals)
                                                                 { 
                                                                   
                                                                  
                                                                             $inproduction_total_return=round($vals->bill_total);
                                                     
                                                                 }
                                                                 
                                                                 
                                                                 //$production=$inproduction_total_return+$production;


                                                                 
                                                                 if($testMode){  
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0  AND b.create_date <= '".$todate."' ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0   ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 8 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 $total_return=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                  
                                                                             $total_return=round($val->bill_total);
                                                     
                                                                 }
                            
                                                               
                                                               
                                                               
                                                                  $discount3=0;
                                                                  if($testMode){ 
                                                                 $resultsub=$this->db->query("SELECT 
                                        b.total_picked_amount AS totalvalue
                                        FROM
                                   order_product_list_process AS a 
                                    JOIN 
                                        order_delivery_order_status AS b ON a.order_id = b.order_id 
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'
                                        AND b.order_base > 0
                                        AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0  AND b.return_status=0
                                        AND (
                                            CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$todate' AND ((b.trip_end_date >= '$todate' OR b.trip_end_date IS NULL) AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$todate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    GROUP BY 
                                        b.id 
                                    ORDER BY 
                                        a.id DESC");
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2') AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 9 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total_transit=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                   
                                                                           $totalvalue=$val->totalvalue;
                                                                           $total_transit+=round($totalvalue);
                                                     
                                                                }
                    
                    $total_credit_balance            = 0;
                    $total_debit_balance             = 0;
                    $total_credit_balance_new        = 0;
                    $total_debit_balance_new         = 0;
                    $opening_balance                 = 0;
                    $resultDRss = $this->db->query(
                        "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '" .
                            $formdate .
                            "'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status=0  AND a.customer_id='" .
                            $value->id .
                            "'"
                    );
                    $resultDRss = $resultDRss->result();
                    $old_date_opening_balance = $resultDRss[0]->credits - $resultDRss[0]->debits;
                    if ($old_date_opening_balance > 0) {
                        $total_credit_balance = $old_date_opening_balance;
                    } else {
                        $total_debit_balance = $old_date_opening_balance;
                    }

                    $resultDRsscurrentdate = $this->db->query(
                        "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1' AND a.cnn_status=0  AND a.customer_id='" .
                            $value->id .
                            "'"
                    );
                    $resultDRsscurrentdate = $resultDRsscurrentdate->result();
                    $opeinging_balance =
                        $resultDRsscurrentdate[0]->credits - $resultDRsscurrentdate[0]->debits;
                    if ($opeinging_balance > 0) {
                        $total_credit_balance_new = $opeinging_balance;
                    } else {
                        $total_debit_balance_new = $opeinging_balance;
                    }




                                             if($value->mark_vendor_id>0)
                                             {



                                               $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$value->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                $total_credit_balance_new=$total_credit_balance_new+$opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                $total_debit_balance_new=$total_debit_balance_new+$opeinging_balance_vendor;
                                              }






                                             }
                                             





                    $totalvaluecrited   = round($total_credit_balance + $total_credit_balance_new, 2);
                    $totalvaluedebit    = round($total_debit_balance + $total_debit_balance_new, 2);
                    $totalvaluecrited   = abs($totalvaluecrited);
                    $totalvaluedebit    = abs($totalvaluedebit);

                    $opening_balance_val = $totalvaluecrited - $totalvaluedebit;

                    $payment_status = "";
                    $opening_balance_cr = $totalvaluecrited;
                    $opening_balance_dr = $totalvaluedebit;
                    $opening_balance = abs($opening_balance_val);

                    if ($opening_balance_val > 0) {
                        $payment_status = 'CR';
                    } else {
                        $payment_status = 'DR';
                    }
                    $sheet_in_factory = round($total + $total_return, 2);
                    $resultDR = $this->db->query(
                        "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .
                            $formdate .
                            "' AND '" .
                            $todate .
                            "' AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status=0 AND a.customer_id='" .
                            $value->id .
                            "'"
                    );
                    $resultDR = $resultDR->result();
                    foreach ($resultDR as $vald) {
                        $trnDr = $vald->debits;
                        $trnCr = $vald->credits;
                    }





if($value->mark_vendor_id>0)
{

                                           // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->mark_vendor_id."'");
                                         $resultDR=$resultDR->result();

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$trnDr+$vald->debits;
                                             $trnCr=$trnCr+$vald->credits;
                                         }
                                         
}   
 







                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $Toatbalance                = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $TotalDr                    = $opening_balance_dr;
                    $TotalCr                    = $opening_balance_cr;
                    $totbalance                 = $trnCr - $trnDr;
                    $Total_trn_dr               = $opening_balance_dr + $trnDr;
                    $Total_trn_cr               = $opening_balance_cr + $trnCr;
                    if ($Total_trn_dr < $Total_trn_cr) {
                        $creditsset = $Total_trn_dr - $Total_trn_cr;
                        $creditsset = abs($creditsset);
                        $payment_status_bu_closeing = 'CR';
                        $closeing = $creditsset;
                    } else {
                        $debitsset = $Total_trn_cr - $Total_trn_dr;
                        $debitsset_val = $Total_trn_cr - $Total_trn_dr;
                        $debitsset = abs($debitsset);
                        $payment_status_bu_closeing = 'DR';
                        if ($debitsset == 0) {
                            $payment_status_bu_closeing = 'CR';
                        } else {
                            $payment_status_bu_closeing = 'DR';
                        }
                        $closeing = $debitsset;
                    }
                    if($payment_status_bu_closeing == 'DR')
                    {
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit;
                                             $Totaltranspotval= $closeing-$Totaltranspot;
                                             $Totaltranspotval= $Totaltranspotval-$inproduction_total_return;
                                             $Totaltranspotval_view= $Totaltranspotval-$inproduction_total_return;

                                             //$Totaltranspotval=abs($Totaltranspotval);
                                             if($closeing<$Totaltranspot)
                                             {
                                                 $getstatus=1;
                                                 if($closeing>0)
                                                 {
                                                      $getstatus=1;
                                                      //$Totaltranspotval=$closeing;
                                                 }
                                                 
                                             }
                                             else
                                             {
                                                   $getstatus=0;
                                                 
                                             }
                                             
                    }






                    if ($payment_status_bu_closeing == 'CR') 
                    {
                                           $Totaltranspot= $production+$sheet_in_factory+$total_transit+$inproduction_total_return;
                                             //$Totaltranspotval= $closeing-$Totaltranspot;
                                             if($closeing>0)
                                             {

                                                $Totaltranspotval=$closeing+$Totaltranspot;
                                                $Totaltranspotval_view= "-".$Totaltranspotval;
                                                
                                             }
                                             else
                                             {
                                                $Totaltranspotval_view= "-".$Totaltranspot;
                                                
                                             }
                                            
                                            $getstatus=1;
                    }





                    $debitssettotal                    += $debitsset;
                    $debitssettotal_sales              += $debitsset;
                    $creditssettotal                   += $creditsset;
                    $creditssettotal_sales             += $creditsset;
                    $closeingtotal                     += $closeing;
                    $closeingtotal_sales               += $closeing;
                    $productiontotal                   += $production;
                    $productiontotal_sales             += $production;
                    $productiontotal_return            += $inproduction_total_return;
                    $productiontotal_return_sales      += $inproduction_total_return;
                    $sheet_in_factory_val              += $sheet_in_factory;
                    $sheet_in_factory_val_sales        += round($total + $total_return, 2);
                    $transit                           += round($total_transit, 2);
                    $transit_sales                     += round($total_transit, 2);
                    $balancetoatal                     += $debitsset-$sheet;



                    $balancetoatal_sales               += $debitsset-$sheet;



                    $Tran_Dr                           += round($trnDr, 2);
                    $Tran_Dr_sales                     += round($trnDr, 2);
                    $Tran_Cr                           += round($trnCr, 2);
                    $Tran_Cr_sales                     += round($trnCr, 2);
                    $Tot_Dr                            += round($Total_trn_dr, 2);
                    $Tot_Dr_sales                      += round($Total_trn_dr, 2);
                    $Tot_Cr                            += round($Total_trn_cr, 2);
                    $Tot_Cr_sales                      += round($Total_trn_cr, 2);
                    $Open_Dr                           += round($opening_balance_dr, 2);
                    $Open_Dr_sales                     += round($opening_balance_dr, 2);
                    $Open_Cr                           += round($opening_balance_cr, 2);
                    $Open_Cr_sales                     += round($opening_balance_cr, 2);
                    $Open_Bal                          += round($opening_balance, 2);
                    $Open_Bal_sales                    += round($opening_balance, 2);

                    if ($getstatus == 0) {
                        $totalcheck = round(
                            $production + $sheet_in_factory + $total_transit + $Totaltranspotval + $inproduction_total_return,2);
                    } else {
                        $totalcheck = round(
                            $production + $closeing + $sheet_in_factory + $total_transit + $inproduction_total_return,2);
                    }
                    if ($totalcheck > 0) {
                        $hidestatus = "";
                    } else {
                        if ($checked120 == 'checked') {
                            $hidestatus = "shownullvalue getview";
                        } else {
                            $hidestatus = "getview";
                        }
                    }
                    if ($Totaltranspotval > 5) {
                        $Totaltranspotval = round($Totaltranspotval, 2);
                    } else {
                        $Totaltranspotval = '';
                    }
                    $disConditionVal =
                        $inproduction_total_return + $production + $total_transit + $sheet_in_factory;

                        $sheet=0;
                        $st=$production+$sheet_in_factory+$inproduction_total_return+$total_transit;
                        $totalcloseingbalance=$debitsset-$creditsset;
                        $netbalance_total_set=$totalcloseingbalance-$st;
                         if($getstatus==0)
                         {  

                             

                         }

                         if($netbalance_total_set>0)
                         {
                                $sheet=$st;
                         }
                         else
                         {
                                $sheet=$debitsset;
                         }


                        $sheettotal_sales+=round($sheet,2);
                        $sheettotal_sales_full+=round($sheet,2);
                        $totabetbalance+=$debitsset-$sheet;

                    $subresult[] = [
                        'no'                        => $k,
                        'id'                        => $value->id,
                        'payment_status'            => $payment_status,
                        'route_name'                => $route_name,
                        'sales_team_id'             => $value->sales_team_id,
                        'mark_vendor_id'             => $value->mark_vendor_id,
                        'customername'              => $value->company_name,
                        'customerphone'             => $value->phone,
                        'opening_balance_dr'        => $opening_balance_dr,
                        'opening_balance_cr'        => $opening_balance_cr,
                        'opening_balance'           => round($opening_balance),
                        'trnDr'                     => round($trnDr, 2),
                        'trnCr'                     => round($trnCr, 2),
                        'trnDrtotal'                => round($Total_trn_dr, 2),
                        'trnCrtotal'                => round($Total_trn_cr, 2),
                        'debit'                     => round($debitsset, 2),
                        'credit'                    => round($creditsset, 2),
                        'closeing'                  => round($closeing, 2),
                        'payment_status_bu_closeing'=> $payment_status_bu_closeing,
                        'production'                => round($production, 2),
                        'inproduction_total_return' => round($inproduction_total_return, 2),
                        'sheet_in_factory'          => $sheet_in_factory,
                        'transit'                   => round($total_transit, 2),
                        'getstatus'                 => $getstatus,
                        'dis_condition_val'         => $disConditionVal,
                        'balance'                   => round($debitsset-$sheet, 2),
                        'feedback_details'          => $value->feedback_details,
                        'phone'                     => $value->phone,
                        'hidestatus'                => $hidestatus,
                        'sheet'                     => $sheet,
                    ];
                    $k++;


 if($checked120 == 'checked' && $hidestatus != ''){
// exit;

                                        $Tran_Dr_sales  = $Tran_Dr_sales - $trnDr;
                                        $Tran_Cr_sales  =  $Tran_Cr_sales - $trnCr;
                                        $Tot_Dr_sales  = $Tot_Dr_sales - $Total_trn_dr;
                                        $Tot_Cr_sales  = $Tot_Cr_sales - $Total_trn_cr;
                                        $Open_Dr_sales  = $Open_Dr_sales - $opening_balance_dr;
                                        $Open_Cr_sales = $Open_Cr_sales - $opening_balance_cr;
                                        $Open_Bal_sales  = $Open_Bal_sales - $opening_balance;


                $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                $invertsTotal['opening_balance']               += round($opening_balance);
                $invertsTotal['trnDr']                         += round($trnDr, 2);
                $invertsTotal['trnCr']                         += round($trnCr, 2);
                $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                            }



                }
                //sales person
                $myid                               = $valueget->sales_team_id;
                $debit_sales                        = $debitssettotal_sales != 0 ? $debitssettotal_sales : '';
                $credit_sales                       = $creditssettotal_sales != 0 ? $creditssettotal_sales : '';
                $closeing_sales                     = $closeingtotal_sales != 0 ? $closeingtotal_sales : '';
                $production_sales                   = $productiontotal_sales != 0 ? $productiontotal_sales : '';
                $production_return_sales            = $productiontotal_return_sales != 0 ? $productiontotal_return_sales : '';
                $sheet_in_factory_sales             = $sheet_in_factory_val_sales != 0 ? $sheet_in_factory_val_sales : '';
                $transittotal_sales                 = $transit_sales != 0 ? $transit_sales : '';
                $net_balance_sales                  = $balancetoatal_sales != 0 ? $balancetoatal_sales : '';
                $Tran_DrTotal_sales                 = $Tran_Dr_sales != 0 ? $Tran_Dr_sales : '';
                $Tran_CrTotal_sales                 = $Tran_Cr_sales != 0 ? $Tran_Cr_sales : '';
                $Tot_DrTotal_sales                  = $Tot_Dr_sales != 0 ? $Tot_Dr_sales : '';
                $Tot_CrTotal_sales                  = $Tot_Cr_sales != 0 ? $Tot_Cr_sales : '';
                $Open_DrTotal_sales                 = $Open_Dr_sales != 0 ? $Open_Dr_sales : '';
                $Open_CrTotal_sales                 = $Open_Cr_sales != 0 ? $Open_Cr_sales : '';
                $Open_BalTotal_sales                = $Open_Bal_sales != 0 ? $Open_Bal_sales : '';
                
                $closeing_sales = round($debitssettotal_sales - $creditssettotal_sales, 2);
                $closeing_sales = abs($closeing_sales);
                $balancetoatal_sales = abs($balancetoatal_sales);



 

                $salesperson[]                      = [
                    'id'                            => $myid,
                    'sales_team_id'                 => $valueget->sales_team_id,
                    'sales_person_name'             => $valueget->sales_person_name,
                    'subarray'                      => $subresult,
                    'Open_Dr'                       => is_numeric($Open_DrTotal_sales) ? round(floatval($Open_DrTotal_sales), 2): '',
                    'Open_Cr'                       => is_numeric($Open_CrTotal_sales) ? round(floatval($Open_CrTotal_sales), 2): '',
                    'Open_Bal'                      => is_numeric($Open_BalTotal_sales) ? round(floatval($Open_BalTotal_sales), 2): '',
                    'Tran_Dr'                       => is_numeric($Tran_DrTotal_sales) ? round(floatval($Tran_DrTotal_sales), 2): '',
                    'Tot_Dr'                        => is_numeric($Tot_DrTotal_sales) ? round(floatval($Tot_DrTotal_sales), 2): '',
                    'Tran_Cr'                       => is_numeric($Tran_CrTotal_sales) ? round(floatval($Tran_CrTotal_sales), 2): '',
                    'Tot_Cr'                        => is_numeric($Tot_CrTotal_sales) ? round(floatval($Tot_CrTotal_sales), 2): '',
                    'debit'                         => is_numeric($debit_sales) ? round(floatval($debit_sales), 2) : '',
                    'credit'                        => is_numeric($credit_sales) ? round(floatval($credit_sales), 2) : '',
                    'closeing'                      => is_numeric($closeing_sales)? round(floatval($closeing_sales), 2): '',
                    'production'                    => is_numeric($production_sales)? round(floatval($production_sales), 2): '',
                    'production_return'             => is_numeric($production_return_sales)? round(floatval($production_return_sales), 2): '',
                    'sheet_in_factory'              => is_numeric($sheet_in_factory_sales)? round(floatval($sheet_in_factory_sales), 2): '',
                    'transit'                       => is_numeric($transittotal_sales)? round(floatval($transittotal_sales), 2): '',
                    'net_balance'                   => is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): '',
                    'showInProductionCustomers'     => true,
                    'sheet'                         => $sheettotal_sales,
                ];
            }

            $totalcloseing = round($debitssettotal - $creditssettotal, 2);
            $totalcloseing = abs($totalcloseing);
            $balancetoatal = abs($balancetoatal);

            if($checked120 == 'checked'){
// exit;     
                                          // $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                          //   $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                          //   $invertsTotal['opening_balance']               += round($opening_balance);
                                          //   $invertsTotal['trnDr']                         += round($trnDr, 2);
                                          //   $invertsTotal['trnCr']                         += round($trnCr, 2);
                                          //   $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                          //   $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                  $Open_Dr =  $Open_Dr -   $invertsTotal['opening_balance_dr'] ;  
                                  $Open_Cr =   $Open_Cr  -  $invertsTotal['opening_balance_cr'];   
                                  $Open_Bal =  $Open_Bal       - $invertsTotal['opening_balance'];    
                                  $Tran_Dr =   $Tran_Dr      - $invertsTotal['trnDr']   ;     
                                  $Tran_Cr =   $Tran_Cr     -  $invertsTotal['trnCr'] ;     
                                  $Tot_Dr  =   $Tot_Dr     - $invertsTotal['trnDrtotal'];     
                                  $Tot_Cr =    $Tot_Cr    -  $invertsTotal['trnCrtotal'];     
                                            }

            $array[] = [
                'no' => $i,
                'id' => $valuessg->id,
                'sales_group_name' => $valuessg->sales_group_name,
                'debit' => round($debitssettotal, 2),
                'credit' => round($creditssettotal, 2),
                'closeing' => round($totalcloseing, 2),
                'production' => round($productiontotal, 2),
                'production_return' => round($productiontotal_return, 2),
                'sheet_in_factory' => round($sheet_in_factory_val, 2),
                'sheet'=>round($sheettotal_sales_full,2),
                'transit' => round($transit, 2),
                'net_balance' => round($balancetoatal, 2),
                'Tran_Dr' => round($Tran_Dr, 2),
                'Tran_Cr' => round($Tran_Cr, 2),
                'Tot_Dr' => round($Tot_Dr, 2),
                'Tot_Cr' => round($Tot_Cr, 2),
                'Open_Dr' => round($Open_Dr, 2),
                'Open_Cr' => round($Open_Cr, 2),
                'Open_Bal' => round($Open_Bal, 2),
                'salesperson' => $salesperson,
            ];
            $i++;
        }
        echo json_encode($array);
    }



         public function customer_balance_report_outstanding()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                                             
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Outstanding Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_outstanding.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
    
     public function customer_balance_report_beta()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                          $data['last']='';
                          $query = $this->db->query("SELECT update_date,update_time FROM `customer_balance_report_beta1` ORDER BY id DESC LIMIT 0,1");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              $data['last']=date('d-m-Y',strtotime($values->update_date)).' '.$values->update_time;
                              
                              
                          }
                          
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_beta.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }





    
     public function customer_balance_report_custome_table()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {




                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize_new','user_id',$this->userid);



                                        
                                             
                                             
                          $data['last']='';
                          $query = $this->db->query("SELECT update_date,update_time FROM `customer_balance_report_beta1` ORDER BY id DESC LIMIT 0,1");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              $data['last']=date('d-m-Y',strtotime($values->update_date)).' '.$values->update_time;
                              
                              
                          }
                          
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_custome_table.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }



   
     public function customer_balance_report_beta_group()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                          $data['last']='';
                          $query = $this->db->query("SELECT update_date,update_time FROM `customer_balance_report_beta1` ORDER BY id DESC LIMIT 0,1");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              $data['last']=date('d-m-Y',strtotime($values->update_date)).' '.$values->update_time;
                              
                              
                          }
                          
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report Group';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_beta_group.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }



     public function customer_balance_report_beta_group_sales()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                          $data['last']='';
                          $query = $this->db->query("SELECT update_date,update_time FROM `customer_balance_report_beta1` ORDER BY id DESC LIMIT 0,1");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              $data['last']=date('d-m-Y',strtotime($values->update_date)).' '.$values->update_time;
                              
                              
                          }
                          

                          $data['sales_group_id']=$_GET['sales_group_id'];
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Balance Report Group Group Sales';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_beta_group_sales.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }



        public function fetch_data_customer_balance_report_export_beta()
    {

                    
                  
  $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
  $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                    
                     $cateid=$_GET['cate_id'];
                     $customer_id=$_GET['customer_id'];
                     //$customer_id=31804;
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     //$todate=$_GET['todate'];
                     $todate=$_GET['formdate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     $sales_group=$_GET['sales_group'];
                     
                    
                    
                     $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                     
                     $checked1="checked";
  $checked2="checked";
   $checked3="checked";
    $checked4="checked";
     $checked5="checked";
      $checked6="checked";
       $checked7="checked";
        $checked8="checked";
         $checked9="checked";
         $checked10="checked";
          $checked11="checked";
           $checked12="checked";
            $checked13="checked";
            $checked120="checked";
 $checked14="checked";
 $checkdata_1_hide="0";
 $checkdata_2_hide="0";
 $checkdata_3_hide="0";
 $checkdata_4_hide="0";
 $checkdata_5_hide="0";
 $checkdata_6_hide="0";
 $checkdata_7_hide="0";
 $checkdata_8_hide="0";
 $checkdata_9_hide="0";
 $checkdata_10_hide="0";
  $checkdata_14_hide="0";
 $checkdata_11_hide="0";
 $checkdata_12_hide="0";
 $checkdata_13_hide="0";
 $checkdata_120_hide="style='display:none'";
if(count($table_customize)>0)
{
   
   
   foreach($table_customize as $vl)
   {
       
       $label_id=$vl->label_id;
       $status=$vl->status;
       
       
       if($label_id==1)
       {
           if($status==0)
           {
               $checkdata_1_hide="1";
               $checked1="";
           }
       }
       
       if($label_id==2)
       {
           if($status==0)
           {
               $checkdata_2_hide="1";
                $checked2="";
           }
       }
       
       if($label_id==3)
       {
           if($status==0)
           {
               $checkdata_3_hide="1";
                $checked3="";
           }
       }
       
       if($label_id==4)
       {
           if($status==0)
           {
               $checkdata_4_hide="1";
                $checked4="";
           }
       }
       
       if($label_id==5)
       {
           if($status==0)
           {
               $checkdata_5_hide="1";
                $checked5="";
           }
       }
       
       if($label_id==6)
       {
           if($status==0)
           {
               $checkdata_6_hide="1";
                $checked6="";
           }
       }
       
       if($label_id==7)
       {
           if($status==0)
           {
               $checkdata_7_hide="1";
                $checked7="";
           }
       }
       
       if($label_id==8)
       {
           if($status==0)
           {
               $checkdata_8_hide="1";
                $checked8="";
           }
       }
       
       if($label_id==9)
       {
           if($status==0)
           {
               $checkdata_9_hide="1";
                $checked9="";
           }
       }
       
       if($label_id==10)
       {
           if($status==0)
           {
               $checkdata_10_hide="1";
                $checked10="";
           }
       }
       
       if($label_id==11)
       {
           if($status==0)
           {
               $checkdata_11_hide="1";
                $checked11="";
           }
       }
       
       if($label_id==12)
       {
           if($status==0)
           {
               $checkdata_12_hide="1";
                $checked12="";
           }
       }
       
       if($label_id==13)
       {
           if($status==0)
           {
               $checkdata_13_hide="1";
                $checked13="";
           }
       }
       
      
       
       if($label_id==14)
       {
           if($status==0)
           {
                $checkdata_14_hide="1";
                $checked14="";
           }
       }
       
       
        if($label_id==120)
       {
           if($status==0)
           {
                $checkdata_120_hide="";
                $checked120="unchecked";
           }
       }
       
       
   }
   
    
}
                     
                     
                     
                     
                     
                     
                     
                 
                    
                    $stat=' ';
                    $userslog="";
                    $userslog1="";
                    $usersgroup="";
                    if($cateid>0)
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';
                         $userslog1.=' AND b.customer_id="'.$customer_id.'"';       
                    } 
                    
                    
                    if($sales_group!='ALL')
                    {
                         $usersgroup=' AND ss.id="'.$sales_group.'"';       
                    } 
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';       
                                 
                    }
                     
                    
                  
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                   
                    
                     
                     
                                              $filterdata=" AND a.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     $filterdata2=" AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     
                   $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0       $stat $userslog $usersgroup $searchsql $searchsql2 $filterdata GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                   
                   
                         $i=1;
                     $array=array();
                    
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                  
                                     $salesperson=array();
                                     $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $balanceset_total=0;
                                     $transit=0;
                                     $balancetoatal=0;
                                    $sheettotal=0;
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;

                                     $totgetde=0;
                                     
                                     $totgetce=0;
                                         $balance=0;
                                     
                                    $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0  AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog $filterdata GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                     
                       
                                     
                       
                             


 $result=$this->db->query("SELECT b.customername,b.phone,b.feedback_details,b.route_name,b.customerphone,b.production,b.inproduction_total_return,b.sheet_in_factory,b.customer_id,b.total_transit,b.sales_team_id,b.payment_status,b.opening_balance_dr,b.opening_balance_cr,b.opening_balance,b.trnDr,b.trnCr,b.trnDrtotal,b.trnCrtotal,b.closeing,b.payment_status_bu_closeing,b.getstatus,b.balance,b.sheet,b.hidestatus,b.debit,b.credit
 FROM customer_balance_report_beta1 as b WHERE  b.sales_team_id='".$valueget->sales_team_id."' $userslog1 $searchsql2 $filterdata2 GROUP BY b.customer_id ORDER BY b.customername ASC");
                     $resultsubdata=$result->result();
                     


                                     $subresult=array();
                                     
                                     
                                     $k=1;
                                      $balanceset_total_sales=0;
                                     $sheettotal_sales=0;
                                     foreach ($resultsubdata as  $value) 
                                     {
                                         
                                    
                                                               
                                              
                                         
                                           
                                         
                                         
                                         
                                         
                                         
                                       
                                         if($value->getstatus==0)
                                         { 
                                             
                    $totalcheck=round($value->production+$value->closeing+$value->sheet_in_factory+$value->total_transit+$value->balance+$value->inproduction_total_return,2);
                                          
                                         }
                                         else
                                         {
                                            

                   $totalcheck=round($value->production+$value->closeing+$value->sheet_in_factory+$value->total_transit+$value->inproduction_total_return,2);
                                         
                                         }

                                      
                                     
                                          
                                          if($totalcheck>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                  $hidestatus="style='display:none'";
                                                  
                                              }
                                              else
                                              {
                                                  $hidestatus="";
                                              }
                                             
                                          }
                                          
                                          
                                          
                                          
                                         if($value->getstatus==0)
                                         {


                                               $balanceset=$value->balance;
                                               $st=$value->production+$value->sheet_in_factory+$value->inproduction_total_return+$value->total_transit;
                                               $setvalue=$value->debit-$st;
                                               if($setvalue<0)
                                               {

                                                 
                                                  $balanceset=$setvalue;
                                                  $value->balance=0;
                                                  $value->sheet=$value->debit;

                                               }
                                               else
                                               {
                                                  $value->sheet=$st;
                                               }

   
                                               
                                         }
                                         else
                                         {
                                             
                                             $st=$value->production+$value->sheet_in_factory+$value->inproduction_total_return+$value->total_transit;
                                             
                                             $value->sheet=0; 
                                             $balanceset='-'.$st;
                                             if($st>0)
                                             {
                                                $value->getstatus=0;
                                             }
                                             
                                             
                                         }   


                                           $st=$value->production+$value->sheet_in_factory+$value->inproduction_total_return+$value->total_transit;
                                           $totalcloseingbalance=$value->debit-$value->credit;
                                           $netbalance_total_set=$totalcloseingbalance-$st;
                                            
                                           if($value->getstatus==0)
                                           {  

                                               if($netbalance_total_set>0)
                                               {
                                                   $balanceset_total+=$netbalance_total_set;
                                                   $balanceset_total_sales+=$netbalance_total_set;
                                               }

                                           }

                                           if($netbalance_total_set>0)
                                           {
                                                  $sheet=$st;
                                           }
                                           else
                                           {
                                                   $sheet=$value->debit;
                                           }
                                          

                                           $balanceset=$netbalance_total_set;  
                                        
                                       


                                      
                                        
                                           
                                         $subresult[] = array(
                                            
                                            
                                            'no' => $k, 
                                            'id' => $value->customer_id, 
                                            'payment_status' => $payment_status, 
                                            'route_name'=>$value->route_name,
                                            'sales_team_id' => $value->sales_team_id, 
                                            'customername' => $value->customername, 
                                            'customerphone' => $value->customerphone,
                                            'opening_balance_dr' =>  $value->opening_balance_dr,
                                            'opening_balance_cr' =>  $value->opening_balance_cr,
                                            'opening_balance' => round($value->opening_balance),
                                            'trnDr' => round($value->trnDr,2),
                                            'trnCr' => round($value->trnCr,2),
                                            'trnDrtotal' => round($value->trnDrtotal,2),
                                            'trnCrtotal' => round($value->trnCrtotal,2),
                                            'debit' => round($value->debit,2),
                                            'credit' => round($value->credit,2),
                                            'closeing' => round($value->closeing,2),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'production' => round($value->production,2),
                                            'inproduction_total_return'=>round($value->inproduction_total_return,2),
                                            'sheet_in_factory' => $value->sheet_in_factory,
                                            'transit'=>round($value->total_transit,2),
                                            'getstatus'=>$value->getstatus,
                                            'balance' => $balanceset,
                                            'sheet' => $sheet,
                                            'feedback_details' => $value->feedback_details, 
                                            'phone' => $value->phone,
                                            'hidestatus' => $hidestatus
                
                                        );
                                        
                                     $sheettotal+=round($sheet,2);  
                                     $sheettotal_sales+=round($sheet,2);
                                     $debitssettotal+=$value->debit;
                                     $creditssettotal+=$value->credit;
                                     $totalcloseing+=$value->closeing;
                                     $productiontotal+=$value->production;
                                     $productiontotal_return+=$value->inproduction_total_return;
                                     $sheet_in_factory_val+=$value->sheet_in_factory;
                                     $transit+=$value->total_transit;
                                     $balancetoatal+=$value->balance;
                                     $Tran_Dr+=$value->trnDr;
                                     $Tran_Cr+=$value->trnCr;
                                     $Tot_Dr+=$value->trnDrtotal;
                                     $Tot_Cr+=$value->trnCrtotal;
                                     $Open_Dr+=$value->opening_balance_dr;
                                     $Open_Cr+=$value->opening_balance_cr;
                                     $Open_Bal+=$value->opening_balance;


                                     if($value->getstatus==0)
                                     {
                                        $totgetde+=round($value->balance,2);
                                          $balance+=$value->balance;
                                     }


                                     if($value->getstatus==1)
                                     {
                                        $totgetce+=0;
                                     }


                                   
                                     


                                   
                                       
                                           
                                           
                                       
                                           
                                        
                                     $k++;
                                     
                                     }
                                     
                                     
                                     
                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                             'sheet'=>$sheettotal_sales+$balanceset_total_sales,
                                             'subarray'=>$subresult,
                                            
                                        );
                                      
                                      
                                     }
                                      
                                      
                                      
                                      
                                      
                                      $totalcloseing= round($creditssettotal-$debitssettotal,2);


                                     if($totalcloseing>0)
                                     {
                                        $totalcloseing_status=1;
                                     }
                                     else
                                     {

                                        $totalcloseing_status=0;

                                     }


                                     $totalcloseing=abs($totalcloseing);


                                  
                                      
                                      
                                     
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'debit' => round($debitssettotal,2),
                                            'credit' => round($creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'totalcloseing_status' =>  round($totalcloseing_status,2),
                                            'stt' =>  round($stt,2),
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val),
                                            'transit'=>round($transit,2),
                                            'net_balance'=>round($balanceset_total,2),
                                            'sheettotal'=>$sheettotal,
                                            'Tran_Dr'=>round($Tran_Dr,2),
                                            'Tran_Cr'=>round($Tran_Cr,2),
                                            'Tot_Dr'=>round($Tot_Dr,2),
                                            'Tot_Cr'=>round($Tot_Cr,2),
                                            'Open_Dr'=>round($Open_Dr,2),
                                            'Open_Cr'=>round($Open_Cr,2),
                                            'Open_Bal'=>round($Open_Bal,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                        $i++;

                     }
                 
                 
                         //echo "<pre>";print_r($array);
                        //exit;
                       $filename='Customer_balance_report_'.$formdate.'_TO_'.$todate; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");
                         
                         
                      
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="17"><h3>Customer Balance Report <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                    <tr style="text-align: left;background: #dfdfdf;">

                                       <th>No</th>
                                      <th >Customer_Name</th>
                                      <th >Area</th>
                                      
                                    <?php if($checkdata_1_hide=='0'){ ?>  <th>Open Dr</th>  <?php } ?>
                                      
                                      <?php if($checkdata_2_hide=='0'){ ?> <th>Open Cr</th><?php } ?>
                                      <?php if($checkdata_3_hide=='0'){ ?> <th>Open Bal</th><?php } ?>
                                      <?php if($checkdata_4_hide=='0'){ ?> <th>Tran Dr</th><?php } ?>
                                       <?php if($checkdata_5_hide=='0'){ ?><th>Tot Dr</th><?php } ?>
                                       <?php if($checkdata_6_hide=='0'){ ?><th>Tran Cr</th><?php } ?>
                                      <?php if($checkdata_7_hide=='0'){ ?> <th>Tot Cr</th><?php } ?>
                                     <?php if($checkdata_8_hide=='0'){ ?>  <th>Debit</th><?php } ?>
                                      <?php if($checkdata_9_hide=='0'){ ?> <th>Credit</th><?php } ?>
                                      <?php if($checkdata_10_hide=='0'){ ?> <th>Closing</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production Return</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production</th><?php } ?>
                                      <?php if($checkdata_11_hide=='0'){ ?> <th>Sheet_in_Factory</th><?php } ?>
                                      <?php if($checkdata_12_hide=='0'){ ?> <th>Transit</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Net_Balance</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Sheet</th><?php } ?>
                                      <th >Remarks</th>
                                      <th >Phone No</th>
                                     
                        
                                    </tr>
                                  
                                  
                                  
                                  
                                  
                                  <?php
                                  $i=1;
                                   foreach($array as $val)
                                   { 
                                       
                                  ?>
                                  <tr style="text-align: right;">
                                   <th style="text-align: left;"><?php echo $i; ?></th>
                                   <th style="text-align: left;"><?php echo $val['sales_group_name']; ?></th>
                                   <th> </th>
                                   
                                   <?php if($checkdata_1_hide=='0'){ ?><th > <?php  if($val['Open_Dr']>0) { echo $val['Open_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><th> <?php  if($val['Open_Cr']>0) { echo $val['Open_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><th> <?php  if($val['Open_Bal']>0) { echo $val['Open_Bal'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><th> <?php  if($val['Tran_Dr']>0) { echo $val['Tran_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><th> <?php  if($val['Tot_Dr']>0) { echo $val['Tot_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><th> <?php  if($val['Tran_Cr']>0) { echo $val['Tran_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><th> <?php  if($val['Tot_Cr']>0) { echo $val['Tot_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><th> <?php  if($val['debit']>0) { echo $val['debit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><th> <?php  if($val['credit']>0) { echo $val['credit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><th> <?php  if($val['closeing']>0) { echo $val['closeing'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?><th> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><th> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['net_balance']; ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['sheettotal']; ?></th><?php } ?>
                                   <th> </th>
                                   <th> </th>
                                   </tr>
                                   
                                   
                                   <?php
                                    foreach($val['salesperson'] as $valsales)
                                   { 
                                       
                                    ?>
                                   <tr style="text-align: left;">
                                   <td></td>
                                   <td style="color:red;"><?php echo $valsales['sales_person_name']; ?></td>
                                  
                                   <td> </td>
                                   <?php if($checkdata_1_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><td></td><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><td></td><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><td></td><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><td></td><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?> <td> </td><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><td> </td><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><td><b><?php //echo $valsales['sheet']; ?></b></td><?php } ?>
                                   <td> </td>
                                   <td> </td>
                                   </tr>
                                   
                                   
                                     <?php
                                    foreach($valsales['subarray'] as $value)
                                   {
                                       if($valsales['sales_team_id']=$value['sales_team_id'])
                                       { 
                                           
                                           if($value['payment_status']=='CR')
                                           {
                                               $color="green";
                                           }
                                           else
                                           {
                                               $color="red";
                                           }
                                           
                                           if($value['payment_status_bu_closeing']=='CR')
                                           {
                                               $color1="green";
                                           }
                                           else
                                           {
                                               $color1="red";
                                           }
                                           
                                           
                                       ?>
                                                   <tr <?php echo  $value['hidestatus']; ?> >
                                                   <td><?php echo $value['no']; ?>   </td>
                                                   <td><?php echo $value['customername']; ?></td>
                                                   <td><?php echo $value['route_name']; ?> </td>
                                                   <?php if($checkdata_1_hide=='0'){ ?><td> <?php  if($value['opening_balance_dr']>0) { echo $value['opening_balance_dr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_2_hide=='0'){ ?><td> <?php  if($value['opening_balance_cr']>0) { echo $value['opening_balance_cr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_3_hide=='0'){ ?><td> <span style="color:<?php echo $color; ?>"><?php  if($value['opening_balance']>0) { echo $value['opening_balance'];   }   ?></span></td><?php } ?>
                                                   <?php if($checkdata_4_hide=='0'){ ?><td> <?php  if($value['trnDr']>0) { echo $value['trnDr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_5_hide=='0'){ ?><td> <?php  if($value['trnDrtotal']>0) { echo $value['trnDrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_6_hide=='0'){ ?><td> <?php  if($value['trnCr']>0) { echo $value['trnCr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_7_hide=='0'){ ?><td> <?php  if($value['trnCrtotal']>0) { echo $value['trnCrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_8_hide=='0'){ ?><td> <?php  if($value['debit']>0) { echo $value['debit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_9_hide=='0'){ ?><td> <?php  if($value['credit']>0) { echo $value['credit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_10_hide=='0'){ ?><td>  <span style="color:<?php echo $color1; ?>"><?php  if($value['closeing']>0) { echo $value['closeing'];  }   ?></span></td><?php } ?>
                                                  <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($value['inproduction_total_return']>0) { echo $value['inproduction_total_return'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($value['production']>0) { echo $value['production'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_11_hide=='0'){ ?><td> <?php  if($value['sheet_in_factory']>0) { echo $value['sheet_in_factory'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_12_hide=='0'){ ?><td> <?php  if($value['transit']>0) { echo $value['transit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_13_hide=='0'){ ?><td> 
                                                    
                                                     <?php  if($value['getstatus']==0) { echo $value['balance'];  }   ?>
                                                     <?php  if($value['getstatus']==1) { echo '<span style="color:green;">'.$value['balance'].'<span>';  }   ?>
                                                        
                                                    </td><?php } ?>
                                                   <?php if($checkdata_13_hide=='0'){ ?><td> <?php  if($value['sheet']!=0) { echo $value['sheet'];  }   ?></td><?php } ?>
                                                   <td> <?php echo $value['feedback_details']; ?></td>
                                                   <td><?php echo $value['customerphone']; ?> </td>
                                                   </tr>
                                       
                                       <?php
                                       }
                                       
                                   }
                                       
                                    ?>
                                    
                                    
                                    
                                    <?php
                                       
                                       
                                   }
                                     
                                   
                                   ?>
                                   
                                  
                                    
                                   
                                   
                                  <?php
                                  
                                  
                                  $i++;
                                   }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  
                    <?php

                
                

    }










































        public function fetch_data_customer_balance_report_export_beta_sales_team()
    {

                    
                  

                    
                     $cateid=$_GET['cate_id'];
                     $customer_id=$_GET['customer_id'];
                     //$customer_id=31804;
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     //$todate=$_GET['todate'];
                     $todate=$_GET['formdate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     $sales_group=$_GET['sales_group'];
                     
                    
                    
                     $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                     
                     $checked1="checked";
  $checked2="checked";
   $checked3="checked";
    $checked4="checked";
     $checked5="checked";
      $checked6="checked";
       $checked7="checked";
        $checked8="checked";
         $checked9="checked";
         $checked10="checked";
          $checked11="checked";
           $checked12="checked";
            $checked13="checked";
            $checked120="checked";
 $checked14="checked";
 $checkdata_1_hide="0";
 $checkdata_2_hide="0";
 $checkdata_3_hide="0";
 $checkdata_4_hide="0";
 $checkdata_5_hide="0";
 $checkdata_6_hide="0";
 $checkdata_7_hide="0";
 $checkdata_8_hide="0";
 $checkdata_9_hide="0";
 $checkdata_10_hide="0";
  $checkdata_14_hide="0";
 $checkdata_11_hide="0";
 $checkdata_12_hide="0";
 $checkdata_13_hide="0";
 $checkdata_120_hide="style='display:none'";
if(count($table_customize)>0)
{
   
   
   foreach($table_customize as $vl)
   {
       
       $label_id=$vl->label_id;
       $status=$vl->status;
       
       
       if($label_id==1)
       {
           if($status==0)
           {
               $checkdata_1_hide="1";
               $checked1="";
           }
       }
       
       if($label_id==2)
       {
           if($status==0)
           {
               $checkdata_2_hide="1";
                $checked2="";
           }
       }
       
       if($label_id==3)
       {
           if($status==0)
           {
               $checkdata_3_hide="1";
                $checked3="";
           }
       }
       
       if($label_id==4)
       {
           if($status==0)
           {
               $checkdata_4_hide="1";
                $checked4="";
           }
       }
       
       if($label_id==5)
       {
           if($status==0)
           {
               $checkdata_5_hide="1";
                $checked5="";
           }
       }
       
       if($label_id==6)
       {
           if($status==0)
           {
               $checkdata_6_hide="1";
                $checked6="";
           }
       }
       
       if($label_id==7)
       {
           if($status==0)
           {
               $checkdata_7_hide="1";
                $checked7="";
           }
       }
       
       if($label_id==8)
       {
           if($status==0)
           {
               $checkdata_8_hide="1";
                $checked8="";
           }
       }
       
       if($label_id==9)
       {
           if($status==0)
           {
               $checkdata_9_hide="1";
                $checked9="";
           }
       }
       
       if($label_id==10)
       {
           if($status==0)
           {
               $checkdata_10_hide="1";
                $checked10="";
           }
       }
       
       if($label_id==11)
       {
           if($status==0)
           {
               $checkdata_11_hide="1";
                $checked11="";
           }
       }
       
       if($label_id==12)
       {
           if($status==0)
           {
               $checkdata_12_hide="1";
                $checked12="";
           }
       }
       
       if($label_id==13)
       {
           if($status==0)
           {
               $checkdata_13_hide="1";
                $checked13="";
           }
       }
       
      
       
       if($label_id==14)
       {
           if($status==0)
           {
                $checkdata_14_hide="1";
                $checked14="";
           }
       }
       
       
        if($label_id==120)
       {
           if($status==0)
           {
                $checkdata_120_hide="";
                $checked120="unchecked";
           }
       }
       
       
   }
   
    
}
                     
                     
                     
                     
                     
                     
                     
                 
                    
                 
                     $stat=' ';
                     $userslog="";
                     $userslog1="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"'; 
                         $userslog1.=' AND b.customer_id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                      
                     $filterdata=" AND a.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     $filterdata2=" AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.customername LIKE'%".$search."%' OR b.customerphone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                    $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name
                        ,SUM(a.debit) as debitssettotal
                        ,SUM(a.credit) as creditssettotal
                        ,SUM(a.closeing) as totalcloseing
                        ,SUM(a.production) as productiontotal
                        ,SUM(a.inproduction_total_return) as productiontotal_return
                        ,SUM(a.sheet_in_factory) as sheet_in_factory_val
                        ,SUM(a.total_transit) as transit
                        ,SUM(a.sheet) as sheettotal
                        ,SUM(a.trnDr) as Tran_Dr
                        ,SUM(a.trnCr) as Tran_Cr
                        ,SUM(a.trnDrtotal) as Tot_Dr
                        ,SUM(a.trnCrtotal) as Tot_Cr
                        ,SUM(a.opening_balance_dr) as Open_Dr
                        ,SUM(a.opening_balance_cr) as Open_Cr
                        ,SUM(a.opening_balance) as Open_Bal
                        ,SUM(if(a.getstatus = '1',a.balance,0)) as TotalbalanceCR
                        ,SUM(if(a.getstatus = '0',a.balance,0)) as TotalbalanceDR
                        ,SUM(a.sheet) as sheet_total  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0       $stat $userslog $usersgroup $searchsql $searchsql2 $filterdata GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                       
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                   
                                     
                                    $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,ssg.sales_group_id,aa.username as sales_person_name
                                            ,SUM(a.debit) as debitssettotal
                                            ,SUM(a.credit) as creditssettotal
                                            ,SUM(a.closeing) as totalcloseing
                                            ,SUM(a.production) as productiontotal
                                            ,SUM(a.inproduction_total_return) as productiontotal_return
                                            ,SUM(a.sheet_in_factory) as sheet_in_factory_val
                                            ,SUM(a.total_transit) as transit
                                            ,SUM(a.sheet) as sheettotal
                                            ,SUM(a.trnDr) as Tran_Dr
                                            ,SUM(a.trnCr) as Tran_Cr
                                            ,SUM(a.trnDrtotal) as Tot_Dr
                                            ,SUM(a.trnCrtotal) as Tot_Cr
                                            ,SUM(a.opening_balance_dr) as Open_Dr
                                            ,SUM(a.opening_balance_cr) as Open_Cr
                                            ,SUM(a.opening_balance) as Open_Bal
                                            ,SUM(if(a.getstatus = '1',a.balance,0)) as TotalbalanceCR
                                            ,SUM(if(a.getstatus = '0',a.balance,0)) as TotalbalanceDR
                                            ,SUM(a.sheet) as sheet_total  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0  AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog $filterdata GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {



                                   
                                      $totalcloseing_ss= round($valueget->creditssettotal-$valueget->debitssettotal,2);
                                     if($totalcloseing_ss>0)
                                     {
                                        $closeing_status=1;
                                     }
                                     else
                                     {
                                        $closeing_status=0;
                                     }
                                     $totalcloseing_ss=abs($totalcloseing_ss);




                                      $net_balance_ss= round($valueget->debitssettotal-$valueget->sheettotal,2);
                                      //$sstotal=   $valueget->productiontotal_return+$valueget->sheet_in_factory_val+$valueget->transit+$valueget->productiontotal;
                                      //$net_balance_ss=$net_balance_ss-$sstotal+$valueget->sheettotal;

                                         if($net_balance_ss>0)
                                         {
                                            $net_balance_status=0;
                                         }
                                         else
                                         {
                                            $net_balance_status=0;
                                         }
                                      $net_balance_ss=abs($net_balance_ss);




                                         
                                       
                                    
                                    
                                     
                                        $salesperson[]=array(
                                                'sales_team_id'=>$valueget->sales_team_id,
                                                'sales_group_id'=>$valueget->sales_group_id,
                                                'sales_person_name'=>$valueget->sales_person_name,
                                                'debit' => round($valueget->debitssettotal,2),
                                                'credit' => round($valueget->creditssettotal,2),
                                                'closeing' =>  round($totalcloseing_ss,2),
                                                'closeing_status' =>  round($closeing_status,2),
                                                'production'=>round($valueget->productiontotal,2),
                                                'production_return'=>round($valueget->productiontotal_return,2),
                                                'sheet_in_factory'=>round($valueget->sheet_in_factory_val,2),
                                                'transit'=>round($valueget->transit,2),
                                                'net_balance'=>round($net_balance_ss,2),
                                                'net_balance_status' =>  round($net_balance_status,2),
                                                'sheet_total'=>round($valueget->sheettotal,2),
                                                'Tran_Dr'=>round($valueget->Tran_Dr,2),
                                                'Tran_Cr'=>round($valueget->Tran_Cr,2),
                                                'Tot_Dr'=>round($valueget->Tot_Dr,2),
                                                'Tot_Cr'=>round($valueget->Tot_Cr,2),
                                                'Open_Dr'=>round($valueget->Open_Dr,2),
                                                'Open_Cr'=>round($valueget->Open_Cr,2),
                                                'Open_Bal'=>round($valueget->Open_Bal,2),
                                                 
                                            
                                        );
                                      
                                      
                                     }
                                      
                                  



                                     $totalcloseing= round($valuessg->creditssettotal-$valuessg->debitssettotal,2);
                                     if($totalcloseing>0)
                                     {
                                        $closeing_status=1;
                                     }
                                     else
                                     {
                                        $closeing_status=0;
                                     }
                                     $totalcloseing=abs($totalcloseing);




                                     
                                         $net_balance= round($valuessg->debitssettotal-$valuessg->sheettotal,2);
                                        // $sstotalss=   $valuessg->productiontotal_return+$valuessg->sheet_in_factory_val+$valuessg->transit+$valuessg->productiontotal;
                                        // $net_balance=$net_balance-$sstotalss+$valuessg->sheettotal;
                                         if($net_balance>0)
                                         {
                                            $net_balance_status=0;
                                         }
                                         else
                                         {
                                            $net_balance_status=0;
                                         }
                                         $net_balance=abs($net_balance);



                                    
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'sales_group_id' => $valuessg->sales_group_id,
                                            'debit' => round($valuessg->debitssettotal,2),
                                            'credit' => round($valuessg->creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'closeing_status' =>  round($closeing_status,2),
                                            'production'=>round($valuessg->productiontotal,2),
                                            'production_return'=>round($valuessg->productiontotal_return,2),
                                            'sheet_in_factory'=>round($valuessg->sheet_in_factory_val,2),
                                            'transit'=>round($valuessg->transit,2),
                                           
                                             'net_balance'=>round($net_balance,2),
                                            'net_balance_status' =>  round($net_balance_status,2),
                                            'sheet_total'=>round($valuessg->sheettotal,2),
                                            'Tran_Dr'=>round($valuessg->Tran_Dr,2),
                                            'Tran_Cr'=>round($valuessg->Tran_Cr,2),
                                            'Tot_Dr'=>round($valuessg->Tot_Dr,2),
                                            'Tot_Cr'=>round($valuessg->Tot_Cr,2),
                                            'Open_Dr'=>round($valuessg->Open_Dr,2),
                                            'Open_Cr'=>round($valuessg->Open_Cr,2),
                                            'Open_Bal'=>round($valuessg->Open_Bal,2),
                                            'salesperson'=>$salesperson
                                           
                
                                        );   
                                    
                                        
                                     
                       
                        $i++;

                     }
                     
                     
                 
                 
                         //echo "<pre>";print_r($array);
                        //exit;
                       $filename='Customer_balance_report__sales_team_'.$formdate.'_TO_'.$todate; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");
                         
                         
                      
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="11"><h3>Customer Balance Report Sales Team <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                    <tr style="text-align: left;background: #dfdfdf;">

                                       <th>No</th>
                                      <th >Group_Name</th>
                                     
                                      
                                    <?php if($checkdata_1_hide=='0'){ ?>  <th>Open Dr</th>  <?php } ?>
                                      
                                      <?php if($checkdata_2_hide=='0'){ ?> <th>Open Cr</th><?php } ?>
                                      <?php if($checkdata_3_hide=='0'){ ?> <th>Open Bal</th><?php } ?>
                                      <?php if($checkdata_4_hide=='0'){ ?> <th>Tran Dr</th><?php } ?>
                                       <?php if($checkdata_5_hide=='0'){ ?><th>Tot Dr</th><?php } ?>
                                       <?php if($checkdata_6_hide=='0'){ ?><th>Tran Cr</th><?php } ?>
                                      <?php if($checkdata_7_hide=='0'){ ?> <th>Tot Cr</th><?php } ?>
                                     <?php if($checkdata_8_hide=='0'){ ?>  <th>Debit</th><?php } ?>
                                      <?php if($checkdata_9_hide=='0'){ ?> <th>Credit</th><?php } ?>
                                      <?php if($checkdata_10_hide=='0'){ ?> <th>Closing</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production Return</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production</th><?php } ?>
                                      <?php if($checkdata_11_hide=='0'){ ?> <th>Sheet_in_Factory</th><?php } ?>
                                      <?php if($checkdata_12_hide=='0'){ ?> <th>Transit</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Net_Balance</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Sheet</th><?php } ?>
                                     
                        
                                    </tr>
                                  
                                  
                                  
                                  
                                  
                                  <?php
                                  $i=1;
                                   foreach($array as $val)
                                   { 
                                       
                                  ?>
                                  <tr style="text-align: right;">
                                   <th style="text-align: left;"></th>
                                   <th style="text-align: left;"><?php echo $val['sales_group_name']; ?></th>
                                   
                                   
                                   <?php if($checkdata_1_hide=='0'){ ?><th > <?php  if($val['Open_Dr']>0) { echo $val['Open_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><th> <?php  if($val['Open_Cr']>0) { echo $val['Open_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><th> <?php  if($val['Open_Bal']>0) { echo $val['Open_Bal'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><th> <?php  if($val['Tran_Dr']>0) { echo $val['Tran_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><th> <?php  if($val['Tot_Dr']>0) { echo $val['Tot_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><th> <?php  if($val['Tran_Cr']>0) { echo $val['Tran_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><th> <?php  if($val['Tot_Cr']>0) { echo $val['Tot_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><th> <?php  if($val['debit']>0) { echo $val['debit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><th> <?php  if($val['credit']>0) { echo $val['credit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><th> <?php  if($val['closeing']>0) { echo $val['closeing'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?><th> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><th> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['net_balance']; ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['sheet_total']; ?></th><?php } ?>
                                   
                                   </tr>
                                   
                                   
                                   <?php
                                    foreach($val['salesperson'] as $valsales)
                                   { 
                                       
                                    ?>
                                <tr style="text-align: right;">
                                   <th style="text-align: left;"><?php echo $i; ?></th>
                                   <th style="text-align: left;"><?php echo $valsales['sales_person_name']; ?></th>
                                   
                                   
                                   <?php if($checkdata_1_hide=='0'){ ?><th > <?php  if($valsales['Open_Dr']>0) { echo $valsales['Open_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><th> <?php  if($valsales['Open_Cr']>0) { echo $valsales['Open_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><th> <?php  if($valsales['Open_Bal']>0) { echo $valsales['Open_Bal'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><th> <?php  if($valsales['Tran_Dr']>0) { echo $valsales['Tran_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><th> <?php  if($valsales['Tot_Dr']>0) { echo $valsales['Tot_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><th> <?php  if($valsales['Tran_Cr']>0) { echo $valsales['Tran_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><th> <?php  if($valsales['Tot_Cr']>0) { echo $valsales['Tot_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><th> <?php  if($valsales['debit']>0) { echo $valsales['debit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><th> <?php  if($valsales['credit']>0) { echo $valsales['credit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><th> <?php  if($valsales['closeing']>0) { echo $valsales['closeing'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($valsales['production_return']>0) { echo $valsales['production_return'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($valsales['production']>0) { echo $valsales['production'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?><th> <?php  if($valsales['sheet_in_factory']>0) { echo $valsales['sheet_in_factory'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><th> <?php  if($valsales['transit']>0) { echo $valsales['transit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $valsales['net_balance']; ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $valsales['sheet_total']; ?></th><?php } ?>
                                   
                                   </tr>
                                   
                                  
                                    
                                    
                                    
                                    <?php
                                       
                                       
                                   }
                                     
                                   
                                   ?>
                                   
                                  
                                    
                                   
                                   
                                  <?php
                                  
                                  
                                  $i++;
                                   }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  
                    <?php

                
                

    }






































 public function fetch_data_customer_balance_report_export_beta_group()
    {

                    
                  

                    
                     $cateid=$_GET['cate_id'];
                     $customer_id=$_GET['customer_id'];
                     //$customer_id=31804;
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     //$todate=$_GET['todate'];
                     $todate=$_GET['formdate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     $sales_group=$_GET['sales_group'];
                     
                    
                    
                     $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                     
                     $checked1="checked";
  $checked2="checked";
   $checked3="checked";
    $checked4="checked";
     $checked5="checked";
      $checked6="checked";
       $checked7="checked";
        $checked8="checked";
         $checked9="checked";
         $checked10="checked";
          $checked11="checked";
           $checked12="checked";
            $checked13="checked";
            $checked120="checked";
 $checked14="checked";
 $checkdata_1_hide="0";
 $checkdata_2_hide="0";
 $checkdata_3_hide="0";
 $checkdata_4_hide="0";
 $checkdata_5_hide="0";
 $checkdata_6_hide="0";
 $checkdata_7_hide="0";
 $checkdata_8_hide="0";
 $checkdata_9_hide="0";
 $checkdata_10_hide="0";
  $checkdata_14_hide="0";
 $checkdata_11_hide="0";
 $checkdata_12_hide="0";
 $checkdata_13_hide="0";
 $checkdata_120_hide="style='display:none'";
if(count($table_customize)>0)
{
   
   
   foreach($table_customize as $vl)
   {
       
       $label_id=$vl->label_id;
       $status=$vl->status;
       
       
       if($label_id==1)
       {
           if($status==0)
           {
               $checkdata_1_hide="1";
               $checked1="";
           }
       }
       
       if($label_id==2)
       {
           if($status==0)
           {
               $checkdata_2_hide="1";
                $checked2="";
           }
       }
       
       if($label_id==3)
       {
           if($status==0)
           {
               $checkdata_3_hide="1";
                $checked3="";
           }
       }
       
       if($label_id==4)
       {
           if($status==0)
           {
               $checkdata_4_hide="1";
                $checked4="";
           }
       }
       
       if($label_id==5)
       {
           if($status==0)
           {
               $checkdata_5_hide="1";
                $checked5="";
           }
       }
       
       if($label_id==6)
       {
           if($status==0)
           {
               $checkdata_6_hide="1";
                $checked6="";
           }
       }
       
       if($label_id==7)
       {
           if($status==0)
           {
               $checkdata_7_hide="1";
                $checked7="";
           }
       }
       
       if($label_id==8)
       {
           if($status==0)
           {
               $checkdata_8_hide="1";
                $checked8="";
           }
       }
       
       if($label_id==9)
       {
           if($status==0)
           {
               $checkdata_9_hide="1";
                $checked9="";
           }
       }
       
       if($label_id==10)
       {
           if($status==0)
           {
               $checkdata_10_hide="1";
                $checked10="";
           }
       }
       
       if($label_id==11)
       {
           if($status==0)
           {
               $checkdata_11_hide="1";
                $checked11="";
           }
       }
       
       if($label_id==12)
       {
           if($status==0)
           {
               $checkdata_12_hide="1";
                $checked12="";
           }
       }
       
       if($label_id==13)
       {
           if($status==0)
           {
               $checkdata_13_hide="1";
                $checked13="";
           }
       }
       
      
       
       if($label_id==14)
       {
           if($status==0)
           {
                $checkdata_14_hide="1";
                $checked14="";
           }
       }
       
       
        if($label_id==120)
       {
           if($status==0)
           {
                $checkdata_120_hide="";
                $checked120="unchecked";
           }
       }
       
       
   }
   
    
}
                     
                     
                     
                     
                     
                     
                     
                 
                    
                       $stat=' ';
                     $userslog="";
                     $userslog1="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"'; 
                         $userslog1.=' AND b.customer_id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                   
                  
                    
                   
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                      
                     $filterdata=" AND a.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     $filterdata2=" AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.customername LIKE'%".$search."%' OR b.customerphone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                     $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name
                        ,SUM(a.debit) as debitssettotal
                        ,SUM(a.credit) as creditssettotal
                        ,SUM(a.closeing) as totalcloseing
                        ,SUM(a.production) as productiontotal
                        ,SUM(a.inproduction_total_return) as productiontotal_return
                        ,SUM(a.sheet_in_factory) as sheet_in_factory_val
                        ,SUM(a.total_transit) as transit
                        ,SUM(a.sheet) as sheettotal
                        ,SUM(a.trnDr) as Tran_Dr
                        ,SUM(a.trnCr) as Tran_Cr
                        ,SUM(a.trnDrtotal) as Tot_Dr
                        ,SUM(a.trnCrtotal) as Tot_Cr
                        ,SUM(a.opening_balance_dr) as Open_Dr
                        ,SUM(a.opening_balance_cr) as Open_Cr
                        ,SUM(a.opening_balance) as Open_Bal
                        ,SUM(if(a.getstatus = '1',a.balance,0)) as TotalbalanceCR
                        ,SUM(if(a.getstatus = '0',a.balance,0)) as TotalbalanceDR
                        ,SUM(a.sheet) as sheet_total  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0       $stat $userslog $usersgroup $searchsql $searchsql2 $filterdata GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();


                      $debitssettotal_tot=0;
                                        $creditssettotal_tot=0;
                                        $totalcloseing_tot=0;
                                        $productiontotal_tot=0;
                                        $productiontotal_return_tot=0;
                                        $sheet_in_factory_val_tot=0;
                                        $transit_tot=0;
                                        $net_balance_tot=0;
                                        $sheettotal_tot=0;

                                        $Tran_Dr_tot=0;
                                        $Tran_Cr_tot=0;
                                        $Tot_Cr_tot=0;
                                        $Tot_Dr_tot=0;
                                        $Open_Dr_tot=0;
                                        $Open_Cr_tot=0;
                                        $Open_Bal_tot=0;
                       
                     foreach ($result as  $valuessg) 
                     {



                       
                                     $totalcloseing= round($valuessg->creditssettotal-$valuessg->debitssettotal,2);
                                     if($totalcloseing>0)
                                     {
                                        $closeing_status=1;
                                     }
                                     else
                                     {
                                        $closeing_status=0;
                                     }
                                     $totalcloseing=abs($totalcloseing);




                                      
                                         $net_balance= round($valuessg->debitssettotal-$valuessg->sheettotal,2);
                                         //$sstotalss=   $valuessg->productiontotal_return+$valuessg->sheet_in_factory_val+$valuessg->transit+$valuessg->productiontotal;
                                         //$net_balance=$net_balance-$sstotalss+$valuessg->sheettotal;

                                         if($net_balance>0)
                                         {
                                            $net_balance_status=0;
                                         }
                                         else
                                         {
                                            $net_balance_status=0;
                                         }
                                         $net_balance=abs($net_balance);





                                          if($net_balance>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                   $hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                   $hidestatus="getview";
                                              }
                                             
                                          }




                                            
                                    
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'hidestatus' => $hidestatus, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'sales_group_id' => $valuessg->sales_group_id,
                                            'debit' => round($valuessg->debitssettotal,2),
                                            'credit' => round($valuessg->creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'closeing_status' =>  round($closeing_status,2),
                                            'production'=>round($valuessg->productiontotal,2),
                                            'production_return'=>round($valuessg->productiontotal_return,2),
                                            'sheet_in_factory'=>round($valuessg->sheet_in_factory_val,2),
                                            'transit'=>round($valuessg->transit,2),
                                            'net_balance'=>round($net_balance,2),
                                            'net_balance_status' =>  round($net_balance_status,2),
                                            'sheet_total'=>round($valuessg->sheettotal,2),
                                            'Tran_Dr'=>round($valuessg->Tran_Dr,2),
                                            'Tran_Cr'=>round($valuessg->Tran_Cr,2),
                                            'Tot_Dr'=>round($valuessg->Tot_Dr,2),
                                            'Tot_Cr'=>round($valuessg->Tot_Cr,2),
                                            'Open_Dr'=>round($valuessg->Open_Dr,2),
                                            'Open_Cr'=>round($valuessg->Open_Cr,2),
                                            'Open_Bal'=>round($valuessg->Open_Bal,2),
                                           
                
                                        );



                                        $debitssettotal_tot+=$valuessg->debitssettotal;
                                        $creditssettotal_tot+=$valuessg->creditssettotal;
                                        $totalcloseing_tot+=$totalcloseing;
                                        $productiontotal_tot+=$valuessg->productiontotal;
                                        $productiontotal_return_tot+=$valuessg->productiontotal_return;
                                        $sheet_in_factory_val_tot+=$valuessg->sheet_in_factory_val;
                                        $transit_tot+=$valuessg->transit;  
                                        $net_balance_tot+=$net_balance;
                                        $sheettotal_tot+=$valuessg->sheettotal;

                                        $Tran_Dr_tot+=$valuessg->Tran_Dr;
                                        $Tran_Cr_tot+=$valuessg->Tran_Cr;
                                        $Tot_Cr_tot+=$valuessg->Tot_Cr;
                                        $Tot_Dr_tot+=$valuessg->Tot_Dr;
                                        $Open_Dr_tot+=$valuessg->Open_Dr;
                                        $Open_Cr_tot+=$valuessg->Open_Cr;
                                        $Open_Bal_tot+=$valuessg->Open_Bal;
                                        
                       
                        $i++;

                     }



                      $array[] = array(
                                            
                                            'no' => 0, 
                                            'id' => "", 
                                            'hidestatus' => "SS", 
                                            'sales_group_name' => "", 
                                            'sales_group_id' => "",
                                            'debit' => round($debitssettotal_tot,2),
                                            'credit' => round($creditssettotal_tot,2),
                                            'closeing' =>  round($totalcloseing_tot,2),
                                            'closeing_status' =>  0,
                                            'production'=>round($productiontotal_tot,2),
                                            'production_return'=>round($productiontotal_return_tot,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val_tot,2),
                                            'transit'=>round($transit_tot,2),
                                            'net_balance'=>round($net_balance_tot,2),
                                            'net_balance_status' =>  0,
                                            'sheet_total'=>round($sheettotal_tot,2),
                                            'Tran_Dr'=>round($Tran_Dr_tot,2),
                                            'Tran_Cr'=>round($Tran_Cr_tot,2),
                                            'Tot_Dr'=>round($Tot_Dr_tot,2),
                                            'Tot_Cr'=>round($Tot_Cr_tot,2),
                                            'Open_Dr'=>round($Open_Dr_tot,2),
                                            'Open_Cr'=>round($Open_Cr_tot,2),
                                            'Open_Bal'=>round($Open_Bal_tot,2),
                                           
                
                   );   




                                        
                     sort($array);
                     
                  
                    

                 
                         //echo "<pre>";print_r($array);
                        //exit;
                       $filename='Customer_balance_report_group_'.$formdate.'_TO_'.$todate; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");
                         
                         
                      
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="11"><h3>Customer Balance Report Sales Group <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                    <tr style="text-align: left;background: #dfdfdf;">

                                       <th>No</th>
                                      <th >Group_Name</th>
                                     
                                      
                                     <?php if($checkdata_1_hide=='0'){ ?>  <th>Open Dr</th>  <?php } ?>
                                      
                                      <?php if($checkdata_2_hide=='0'){ ?> <th>Open Cr</th><?php } ?>
                                      <?php if($checkdata_3_hide=='0'){ ?> <th>Open Bal</th><?php } ?>
                                      <?php if($checkdata_4_hide=='0'){ ?> <th>Tran Dr</th><?php } ?>
                                       <?php if($checkdata_5_hide=='0'){ ?><th>Tot Dr</th><?php } ?>
                                       <?php if($checkdata_6_hide=='0'){ ?><th>Tran Cr</th><?php } ?>
                                      <?php if($checkdata_7_hide=='0'){ ?> <th>Tot Cr</th><?php } ?>
                                     <?php if($checkdata_8_hide=='0'){ ?>  <th>Debit</th><?php } ?>
                                      <?php if($checkdata_9_hide=='0'){ ?> <th>Credit</th><?php } ?>
                                      <?php if($checkdata_10_hide=='0'){ ?> <th>Closing</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production Return</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production</th><?php } ?>
                                      <?php if($checkdata_11_hide=='0'){ ?> <th>Sheet_in_Factory</th><?php } ?>
                                      <?php if($checkdata_12_hide=='0'){ ?> <th>Transit</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Net_Balance</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Sheet</th><?php } ?>
                                    
                        
                                    </tr>
                                  
                                  
                                  
                                  
                                  
                                  <?php
                                  $i=1;
                                   foreach($array as $val)
                                   { 

                                   if($val['hidestatus']=='SS')
                                   {
                                    ?>


                                     <tr style="text-align: right;">
                                   <th style="text-align: left;">Total</th>
                                   <th style="text-align: left;"></th>
                                   
                                   
                                   <?php if($checkdata_1_hide=='0'){ ?><th > <?php  if($val['Open_Dr']>0) { echo $val['Open_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><th> <?php  if($val['Open_Cr']>0) { echo $val['Open_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><th> <?php  if($val['Open_Bal']>0) { echo $val['Open_Bal'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><th> <?php  if($val['Tran_Dr']>0) { echo $val['Tran_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><th> <?php  if($val['Tot_Dr']>0) { echo $val['Tot_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><th> <?php  if($val['Tran_Cr']>0) { echo $val['Tran_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><th> <?php  if($val['Tot_Cr']>0) { echo $val['Tot_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><th> <?php  if($val['debit']>0) { echo $val['debit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><th> <?php  if($val['credit']>0) { echo $val['credit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><th> <?php  if($val['closeing']>0) { echo $val['closeing'];  }   ?></th><?php } ?>
                                 <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?><th> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><th> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['net_balance']; ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['sheet_total']; ?></th><?php } ?>
                                
                                   </tr>
                                   
                                 

                                    <?php
                                   } 
                                       
                                



                                   if($val['hidestatus']!='SS')
                                   {
                                    ?>


                                     <tr style="text-align: right;">
                                   <th style="text-align: left;"><?php echo $i; ?></th>
                                   <th style="text-align: left;"><?php echo $val['sales_group_name']; ?></th>
                                   
                                   
                                   <?php if($checkdata_1_hide=='0'){ ?><th > <?php  if($val['Open_Dr']>0) { echo $val['Open_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><th> <?php  if($val['Open_Cr']>0) { echo $val['Open_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><th> <?php  if($val['Open_Bal']>0) { echo $val['Open_Bal'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><th> <?php  if($val['Tran_Dr']>0) { echo $val['Tran_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><th> <?php  if($val['Tot_Dr']>0) { echo $val['Tot_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><th> <?php  if($val['Tran_Cr']>0) { echo $val['Tran_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><th> <?php  if($val['Tot_Cr']>0) { echo $val['Tot_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><th> <?php  if($val['debit']>0) { echo $val['debit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><th> <?php  if($val['credit']>0) { echo $val['credit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><th> <?php  if($val['closeing']>0) { echo $val['closeing'];  }   ?></th><?php } ?>
                                <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?><th> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><th> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['net_balance']; ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php echo $val['sheet_total']; ?></th><?php } ?>
                                
                                   </tr>
                                   
                                 

                                    <?php
                                   } 
                                       
                                  ?>
                                 
                                 
                                    
                                   
                                   
                                  <?php
                                  
                                  
                                  $i++;
                                   }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  
                    <?php

                
                

    }

















    
        public function fetch_data_customer_balance_report_beta()
    {

                    
                    
                       
                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     

                     //$formdate=date('Y-m-d');
                     //$todate=$_GET['todate'];
                     //$todate=date('Y-m-d');


                       $formdate=$_GET['formdate'];
                     //$todate=$_GET['todate'];
                     $todate=$_GET['formdate'];


                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                     $userslog1="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"'; 
                         $userslog1.=' AND b.customer_id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                      
                     $filterdata=" AND a.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     $filterdata2=" AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.customername LIKE'%".$search."%' OR b.customerphone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                     $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0       $stat $userslog $usersgroup $searchsql $searchsql2 $filterdata GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                       
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                     // date removed 
                                     $salesperson=array();
                                     $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                     $balancetoatal=0;
                                     $balanceset_total=0;
                                     $sheet_total=0;
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     $totgetde=0;
                                     $totgetce=0;
                                     $balance=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT b.mark_vendor_id,aa.id as sales_team_id,aa.username as sales_person_name FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0  AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog $filterdata GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                     
                                           $mark_vendor_id=$valueget->mark_vendor_id;
        

  $result=$this->db->query("SELECT b.customername,b.phone,b.feedback_details,b.route_name,b.customerphone,b.production,b.inproduction_total_return,b.sheet_in_factory,b.customer_id,b.total_transit,b.sales_team_id,b.payment_status,b.opening_balance_dr,b.opening_balance_cr,b.opening_balance,b.trnDr,b.trnCr,b.trnDrtotal,b.trnCrtotal,b.closeing,b.payment_status_bu_closeing,b.getstatus,b.balance,b.sheet,b.hidestatus,b.debit,b.credit
 FROM customer_balance_report_beta1 as b WHERE  b.sales_team_id='".$valueget->sales_team_id."' $userslog1 $searchsql2 $filterdata2  GROUP BY b.customer_id ORDER BY b.customername ASC");
                     $resultsubdata=$result->result();
                     


                                     $subresult=array();
                                    
                                    
                                     $k=1;
                                     $balanceset_total_sales=0;
                                     $sheettotal_sales=0;
                                     foreach ($resultsubdata as  $value) 
                                     {




                                         if($value->getstatus==0)
                                         { 
                                             
                    $totalcheck=round($value->production+$value->closeing+$value->sheet_in_factory+$value->total_transit+$value->balance+$value->inproduction_total_return,2);
                                          
                                         }
                                         else
                                         {
                                            

                   $totalcheck=round($value->production+$value->closeing+$value->sheet_in_factory+$value->total_transit+$value->inproduction_total_return,2);
                                         
                                         }





                                          if($totalcheck>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                   $hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                   $hidestatus="getview";
                                              }
                                             
                                          }






   // $resultDR=$this->db->query("SELECT SUM(a.trnDr) as debits,SUM(a.trnCr) as credits,SUM(a.trnDr+a.trnCr) as totalval FROM customer_balance_report_beta1 as a   WHERE   a.update_date BETWEEN '".$formdate1."' AND '".$todate1."'    AND a.customer_id='".$value->customer_id."' HAVING totalval>0");
   //   $resultDR=$resultDR->result();

   //                                       if(count($resultDR)>0)
   //                                       {


   //                                           foreach($resultDR as $vald)
   //                                           { 
   //                                               $value->trnDr=$vald->debits;
   //                                               $value->trnCr=$vald->credits;

   //                                               $value->debit=$vald->debits;
   //                                               $value->credit=$vald->credits;

   //                                           }

   //                                       }





                                        

                                         if($value->getstatus==0)
                                         {


                                               $balanceset=$value->balance;
                                               $st=$value->production+$value->sheet_in_factory+$value->inproduction_total_return+$value->total_transit;
                                               $setvalue=$value->debit-$st;
                                               if($setvalue<0)
                                               {

                                                 
                                                  $balanceset=$setvalue;
                                                  $value->balance=0;
                                                  $value->sheet=$value->debit;

                                               }
                                               else
                                               {
                                                  $value->sheet=$st;
                                               }

   
                                               
                                         }
                                         else
                                         {


                                            $st=$value->production+$value->sheet_in_factory+$value->inproduction_total_return+$value->total_transit;
                                             
                                             $value->sheet=0; 
                                             $balanceset='-'.$st;
                                             if($st>0)
                                             {
                                                $value->getstatus=0;
                                             }
                                             
                                         }

                                           $st=$value->production+$value->sheet_in_factory+$value->inproduction_total_return+$value->total_transit;
                                           $totalcloseingbalance=$value->debit-$value->credit;
                                           $netbalance_total_set=$totalcloseingbalance-$st;
                                            
                                           if($value->getstatus==0)
                                           {  

                                               if($netbalance_total_set>0)
                                               {
                                                   $balanceset_total+=$netbalance_total_set;
                                                   $balanceset_total_sales+=$netbalance_total_set;
                                               }

                                           }

                                           if($netbalance_total_set>0)
                                           {
                                                  $sheet=$st;
                                           }
                                           else
                                           {
                                                   $sheet=$value->debit;
                                           }
                                          

                                           $balanceset=$netbalance_total_set;








                                      




                                         if($value->getstatus==0)
                                         {
                                            $totgetde+=round($value->balance,2);
                                         }


                                         if($value->getstatus==1)
                                         {
                                            $totgetce+=0;
                                            $value->balance=0;
                                         }
                                         

                                                               
                                         $subresult[] = array(
                                            
                                            
                                            'no' => $k, 
                                            'id' => $value->customer_id, 
                                            'payment_status' => $value->payment_status, 
                                            'route_name'=>$value->route_name,
                                            'sales_team_id' => $value->sales_team_id, 
                                            'customername' => $value->customername, 
                                            'customerphone' => $value->customerphone,
                                            'mark_vendor_id'=>$mark_vendor_id,
                                            'opening_balance_dr' =>  $value->opening_balance_dr,
                                            'opening_balance_cr' =>  $value->opening_balance_cr,
                                            'opening_balance' => round($value->opening_balance),
                                            'trnDr' => round($value->trnDr,2),
                                            'trnCr' => round($value->trnCr,2),
                                            'trnDrtotal' => round($value->trnDrtotal,2),
                                            'trnCrtotal' => round($value->trnCrtotal,2),
                                            'debit' => round($value->debit,2),
                                            'credit' => round($value->credit,2),
                                            'closeing' => round($value->closeing,2),
                                            'payment_status_bu_closeing' => $value->payment_status_bu_closeing,
                                            'production' => round($value->production,2),
                                            'inproduction_total_return'=>round($value->inproduction_total_return,2),
                                            'sheet_in_factory' => $value->sheet_in_factory,
                                            'transit'=>round($value->total_transit,2),
                                            'getstatus'=>$value->getstatus,
                                            'balance' => $balanceset,
                                            'sheet' => $sheet,
                                            'feedback_details' => $value->feedback_details, 
                                            'phone' => $value->phone,
                                            'hidestatus' => $hidestatus
                
                                        );
                                       
                                     $debitssettotal+=$value->debit;
                                     $creditssettotal+=$value->credit;


                                     $totalcloseing+=$value->closeing;
                                     $productiontotal+=$value->production;
                                     $productiontotal_return+=$value->inproduction_total_return;
                                     $sheet_in_factory_val+=$value->sheet_in_factory;
                                     $transit+=$value->total_transit;
                                     $balance+=$value->balance;






                                    






                                     
                                     $Tran_Dr+=$value->trnDr;
                                     $Tran_Cr+=$value->trnCr;
                                     $Tot_Dr+=$value->trnDrtotal;
                                     $Tot_Cr+=$value->trnCrtotal;
                                     $Open_Dr+=$value->opening_balance_dr;
                                     $Open_Cr+=$value->opening_balance_cr;
                                     $Open_Bal+=$value->opening_balance;
                                     $sheet_total+=$sheet;
                                     $sheettotal_sales+=$sheet;
                                       
                                           
                                        
                                      $k++; 
                                     
                                     }
                                     
                                     
                                     
                                        $salesperson[]=array(
                                             
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                             'sheet'=>$sheettotal_sales+$balanceset_total_sales,
                                             'subarray'=>$subresult,
                                            
                                        );
                                      
                                      
                                     }
                                      
                                     $totalcloseing= round($creditssettotal-$debitssettotal,2);


                                     if($totalcloseing>0)
                                     {
                                        $totalcloseing_status=1;
                                     }
                                     else
                                     {

                                        $totalcloseing_status=0;

                                     }


                                     $totalcloseing=abs($totalcloseing);


                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'debit' => round($debitssettotal,2),
                                            'credit' => round($creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'closeing_status' =>  round($totalcloseing_status,2),
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val,2),
                                            'transit'=>round($transit,2),
                                            'net_balance'=>round($balanceset_total,2),
                                            'net_balance_status'=>round($stt,2),
                                            'sheet_total'=>round($sheet_total,2),
                                            'Tran_Dr'=>round($Tran_Dr,2),
                                            'Tran_Cr'=>round($Tran_Cr,2),
                                            'Tot_Dr'=>round($Tot_Dr,2),
                                            'Tot_Cr'=>round($Tot_Cr,2),
                                            'Open_Dr'=>round($Open_Dr,2),
                                            'Open_Cr'=>round($Open_Cr,2),
                                            'Open_Bal'=>round($Open_Bal,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                        $i++;

                     }
                     
                     
                  
                    

                    echo json_encode($array);
                   

    }
    
    
























    
        public function fetch_data_customer_balance_report_beta_sales_group()
    {

                    
                    
                       
                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     //$todate=$_GET['todate'];
                     $todate=$_GET['formdate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                     $userslog1="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"'; 
                         $userslog1.=' AND b.customer_id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                      
                     $filterdata=" AND a.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     $filterdata2=" AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.customername LIKE'%".$search."%' OR b.customerphone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                    $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name
                        ,SUM(a.debit) as debitssettotal
                        ,SUM(a.credit) as creditssettotal
                        ,SUM(a.closeing) as totalcloseing
                        ,SUM(a.production) as productiontotal
                        ,SUM(a.inproduction_total_return) as productiontotal_return
                        ,SUM(a.sheet_in_factory) as sheet_in_factory_val
                        ,SUM(a.total_transit) as transit
                        ,SUM(a.sheet) as sheettotal
                        ,SUM(a.trnDr) as Tran_Dr
                        ,SUM(a.trnCr) as Tran_Cr
                        ,SUM(a.trnDrtotal) as Tot_Dr
                        ,SUM(a.trnCrtotal) as Tot_Cr
                        ,SUM(a.opening_balance_dr) as Open_Dr
                        ,SUM(a.opening_balance_cr) as Open_Cr
                        ,SUM(a.opening_balance) as Open_Bal
                        ,SUM(if(a.getstatus = '1',a.balance,0)) as TotalbalanceCR
                        ,SUM(if(a.getstatus = '0',a.balance,0)) as TotalbalanceDR
                        ,SUM(a.sheet) as sheet_total  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0       $stat $userslog $usersgroup $searchsql $searchsql2 $filterdata GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                       
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                   
                                     
                                    $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,ssg.sales_group_id,aa.username as sales_person_name
                                            ,SUM(a.debit) as debitssettotal
                                            ,SUM(a.credit) as creditssettotal
                                            ,SUM(a.closeing) as totalcloseing
                                            ,SUM(a.production) as productiontotal
                                            ,SUM(a.inproduction_total_return) as productiontotal_return
                                            ,SUM(a.sheet_in_factory) as sheet_in_factory_val
                                            ,SUM(a.total_transit) as transit
                                            ,SUM(a.sheet) as sheettotal
                                            ,SUM(a.trnDr) as Tran_Dr
                                            ,SUM(a.trnCr) as Tran_Cr
                                            ,SUM(a.trnDrtotal) as Tot_Dr
                                            ,SUM(a.trnCrtotal) as Tot_Cr
                                            ,SUM(a.opening_balance_dr) as Open_Dr
                                            ,SUM(a.opening_balance_cr) as Open_Cr
                                            ,SUM(a.opening_balance) as Open_Bal
                                            ,SUM(if(a.getstatus = '1',a.balance,0)) as TotalbalanceCR
                                            ,SUM(if(a.getstatus = '0',a.balance,0)) as TotalbalanceDR
                                            ,SUM(a.sheet) as sheet_total  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0  AND ssg.sales_group_id='".$valuessg->sales_group_id."'  $userslog $filterdata GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {



                                   
                                      $totalcloseing_ss= round($valueget->creditssettotal-$valueget->debitssettotal,2);
                                     if($totalcloseing_ss>0)
                                     {
                                        $closeing_status=1;
                                     }
                                     else
                                     {
                                        $closeing_status=0;
                                     }
                                     $totalcloseing_ss=abs($totalcloseing_ss);




                                        $net_balance_ss= round($valueget->debitssettotal-$valueget->sheettotal,2);
                                       

                                         if($net_balance_ss>0)
                                         {
                                            $net_balance_status=0;
                                         }
                                         else
                                         {
                                            $net_balance_status=0;
                                         }
                                         $net_balance_ss=abs($net_balance_ss);



                                         
                                       
                                    
                                    
                                     
                                        $salesperson[]=array(
                                                'sales_team_id'=>$valueget->sales_team_id,
                                                'sales_group_id'=>$valueget->sales_group_id,
                                                'sales_person_name'=>$valueget->sales_person_name,
                                                'debit' => round($valueget->debitssettotal,2),
                                                'credit' => round($valueget->creditssettotal,2),
                                                'closeing' =>  round($totalcloseing_ss,2),
                                                'closeing_status' =>  round($closeing_status,2),
                                                'production'=>round($valueget->productiontotal,2),
                                                'production_return'=>round($valueget->productiontotal_return,2),
                                                'sheet_in_factory'=>round($valueget->sheet_in_factory_val,2),
                                                'transit'=>round($valueget->transit,2),
                                                'net_balance'=>round($net_balance_ss,2),
                                                'net_balance_status' =>  round($net_balance_status,2),
                                                'sheet_total'=>round($valueget->sheettotal,2),
                                                'Tran_Dr'=>round($valueget->Tran_Dr,2),
                                                'Tran_Cr'=>round($valueget->Tran_Cr,2),
                                                'Tot_Dr'=>round($valueget->Tot_Dr,2),
                                                'Tot_Cr'=>round($valueget->Tot_Cr,2),
                                                'Open_Dr'=>round($valueget->Open_Dr,2),
                                                'Open_Cr'=>round($valueget->Open_Cr,2),
                                                'Open_Bal'=>round($valueget->Open_Bal,2),
                                                 
                                            
                                        );
                                      
                                      
                                     }
                                      
                                  



                                     $totalcloseing= round($valuessg->creditssettotal-$valuessg->debitssettotal,2);
                                     if($totalcloseing>0)
                                     {
                                        $closeing_status=1;
                                     }
                                     else
                                     {
                                        $closeing_status=0;
                                     }
                                     $totalcloseing=abs($totalcloseing);


                                      

                                         $net_balance= round($valuessg->debitssettotal-$valuessg->sheettotal,2);
                                         //$sstotalss=   $valuessg->productiontotal_return+$valuessg->sheet_in_factory_val+$valuessg->transit+$valuessg->productiontotal;
                                         //$net_balance=$net_balance-$sstotalss+$valuessg->sheettotal;
                                         if($net_balance>0)
                                         {
                                            $net_balance_status=0;
                                         }
                                         else
                                         {
                                            $net_balance_status=0;
                                         }
                                         $net_balance=abs($net_balance);



                                         



                                    
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'sales_group_id' => $valuessg->sales_group_id,
                                            'debit' => round($valuessg->debitssettotal,2),
                                            'credit' => round($valuessg->creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'closeing_status' =>  round($closeing_status,2),
                                            'production'=>round($valuessg->productiontotal,2),
                                            'production_return'=>round($valuessg->productiontotal_return,2),
                                            'sheet_in_factory'=>round($valuessg->sheet_in_factory_val,2),
                                            'transit'=>round($valuessg->transit,2),
                                           
                                            'net_balance'=>round($net_balance,2),
                                            'net_balance_status' =>  round($net_balance_status,2),
                                            'sheet_total'=>round($valuessg->sheettotal,2),
                                            'Tran_Dr'=>round($valuessg->Tran_Dr,2),
                                            'Tran_Cr'=>round($valuessg->Tran_Cr,2),
                                            'Tot_Dr'=>round($valuessg->Tot_Dr,2),
                                            'Tot_Cr'=>round($valuessg->Tot_Cr,2),
                                            'Open_Dr'=>round($valuessg->Open_Dr,2),
                                            'Open_Cr'=>round($valuessg->Open_Cr,2),
                                            'Open_Bal'=>round($valuessg->Open_Bal,2),
                                            'salesperson'=>$salesperson
                                           
                
                                        );   
                                    
                                        
                                     
                       
                        $i++;

                     }
                     
                     
                  
                    

                    echo json_encode($array);
                   

    }
    


    
        public function fetch_data_customer_balance_report_beta_group()
    {

$testMode = (isset($_GET['test']) && $_GET['test']);
                    
  $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
  $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                   
                    
                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     //$todate=$_GET['todate'];
                     $todate=$_GET['formdate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                     $userslog1="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"'; 
                         $userslog1.=' AND b.customer_id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                      
                     $filterdata=" AND a.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     $filterdata2=" AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.customername LIKE'%".$search."%' OR b.customerphone LIKE'%".$search."%'";
                     }
                     $array=array();
                     
                     if($testMode){
  $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 $usersgroup $slCond  GROUP BY a.id ORDER BY a.name ASC")->result();
                        // date removed 
 $i = 1;
foreach($result as $valuessg){
  
                $salesperson                 = [];
                $get_sales_person = $this->db->query(
                    "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND aa.status = 1 AND a.party_type='1' $slCond AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 GROUP BY aa.id ORDER BY aa.username ASC"
                );
                $get_sales_person = $get_sales_person->result();
                $balanceLedgerSl = 0;
                $sheettotal_sales_master = 0;
                $grpBalance = 0;
 
                // print_r($get_sales_person);
                // exit;
                foreach ($get_sales_person as $valueget) {
                    $overAllBal = 0;
                    $sheettotal_sales = 0;
                    $balanceLedger = 0;
                    $balancetoatal_sales = 0;
                    $net_balance_sales = 0;


                    $limitExtend = " SET SESSION group_concat_max_len = 999999 ";
                    $setLimit = $this->db->query($limitExtend);
            

                                // $resultsubdata=$this->db->query("SELECT a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."' AND b.mark_vendor_id IN ('0','1','-1')  $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");



                                      $resultsubdata=$this->db->query(" SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id'  ORDER BY b.company_name ASC")->result();


                     $resultsubdataArray=$this->db->query(" SELECT b.id, b.mark_vendor_id, b.company_name  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id' and a.deleteid = 0  GROUP BY b.id")->result();
                     
                    // print_r($resultsubdataArray);
                    // exit;
                    $customerData = $resultsubdata[0]->customersList;
                    $customerIds = explode(",", $customerData);
                    $customerIdsFromated = [];
                   foreach ($customerIds as $key => $value) {
                       if (is_numeric($value)) {
                           $customerIdsFromated[$key] = "'" . $value . "'";
                       }
                   }
                   $customerData = implode(",", $customerIdsFromated);
                   // $overallProduction = array();
   

                   if($testMode){
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0') AND b.assign_status_0_date <=  '".$loopDate."'  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }else{
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                   
            
                      if($testMode){
                   $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND b.assign_status_1_date <=  '".$loopDate."' AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }else{
                    $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                  if($testMode){
                     $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC" )->result();
                   }else{
                     $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0  GROUP BY b.customer ORDER BY b.id DESC" )->result();
                   }
                     
                  if($testMode){
                     $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC")->result();
                   }else{
                     $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 GROUP BY b.customer ORDER BY b.id DESC")->result();
                   }
              
               if($testMode){
                      $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2') AND b.assign_status_2_date <=  '".$loopDate."' AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                    }else{
                       $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                    }
     
                     $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
                            
                     $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                            
                     $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   




                      $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   

    
                $masterData = [];
                $custData = [];
 
        foreach ($overallProduction as $item) {
            $custData[$item->customer_id]['production'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['production'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallTotal as $item) {
            $custData[$item->customer_id]['total'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallInproduction as $item) {
            $custData[$item->customer_id]['inproduction_total_return']= 0;
            $custData[$item->customer_id]['inproduction_total_return']= round($item->bill_total,2);
        }
        foreach($overallReturn as $item) {
            $custData[$item->customer_id]['total_return'] = 0;
            $custData[$item->customer_id]['total_return'] = round($item->bill_total,2);
        }
       foreach($overallTransit as $item) {
            $custData[$item->customer_id]['total_transit'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total_transit'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallOld as $item){
            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
               
        }
        foreach($overallOpeningBal as $item) {
            $custData[$item->customer_id]['opeinging_balance'] = 0;
            $custData[$item->customer_id]['opeinging_balance'] = $item->credits - $item->debits;
        }
        foreach($overallCurrentBal as $item){
            $custData[$item->customer_id]['trnDr'] = 0;
            $custData[$item->customer_id]['trnCr'] = 0;
            $custData[$item->customer_id]['trnDr'] = $item->debits;
            $custData[$item->customer_id]['trnCr'] = $item->credits;
        }
       

        foreach ($resultsubdataArray as $customerId){
                        // $masterData[$customerId] = $customerId;
                        $masterData[$customerId->id]['production'] = 0;
                        $masterData[$customerId->id]['total'] = 0;
                        $masterData[$customerId->id]['inproduction_total_return'] = 0;
                        $masterData[$customerId->id]['total_return'] = 0;
                        $masterData[$customerId->id]['total_transit'] = 0;

                        $masterData[$customerId->id]['production'] = $custData[$customerId->id]['production'];
                        $masterData[$customerId->id]['total'] = $custData[$customerId->id]['total'];
                        $masterData[$customerId->id]['inproduction_total_return']= ($custData[$customerId->id]['inproduction_total_return']);
                        $masterData[$customerId->id]['total_return'] = $custData[$customerId->id]['total_return'];
                        $masterData[$customerId->id]['total_transit']  = ($custData[$customerId->id]['total_transit']);

                        $masterData[$customerId->id]['total_credit_balance'] = 0;
                        $masterData[$customerId->id]['total_debit_balance']           = 0;
                        $masterData[$customerId->id]['total_credit_balance_new']       = 0;
                        $masterData[$customerId->id]['total_debit_balance_new']        = 0;
                        $masterData[$customerId->id]['opening_balance']                = 0;

                        $masterData[$customerId->id]['old_date_opening_balance'] =  $custData[$customerId->id]['old_date_opening_balance'];
                        if ($masterData[$customerId->id]['old_date_opening_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        }

                        $masterData[$customerId->id]['opeinging_balance'] = $custData[$customerId->id]['opeinging_balance'];
                        if ($masterData[$customerId->id]['opeinging_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        }
                       if($customerId->mark_vendor_id > 0){


                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = '119' THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$customerId->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $opeinging_balance_vendor;
                                              }





                          // if( $custData[$item->customer_id]['opeinging_balance_vendor'] > 0){
                          //  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }else{
                          //    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }
                        }
                               
                               
                                

                        $masterData[$customerId->id]['totalvaluecrited']   = round($masterData[$customerId->id]['total_credit_balance'] + $masterData[$customerId->id]['total_credit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluedebit']    = round($masterData[$customerId->id]['total_debit_balance'] + $masterData[$customerId->id]['total_debit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluecrited']   = abs($masterData[$customerId->id]['totalvaluecrited']);
                        $masterData[$customerId->id]['totalvaluedebit']    = abs($masterData[$customerId->id]['totalvaluedebit']);
                        $masterData[$customerId->id]['opening_balance_val'] = $masterData[$customerId->id]['totalvaluecrited'] - $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance_cr'] = $masterData[$customerId->id]['totalvaluecrited'];
                        $masterData[$customerId->id]['opening_balance_dr'] = $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance'] = abs($masterData[$customerId->id]['opening_balance_val']);
                        $masterData[$customerId->id]['sheet_in_factory'] = ($masterData[$customerId->id]['total'] + $masterData[$customerId->id]['total_return']);

                        
                        $masterData[$customerId->id]['trnDr'] = 0;
                        $masterData[$customerId->id]['trnCr'] = 0;
                        $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr'];
                        $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr'];
                        


                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $Totaltranspotval=0;
                    $TotalDr=$masterData[$customerId->id]['opening_balance_dr'];
                    $TotalCr=$masterData[$customerId->id]['opening_balance_cr'];
                    $totbalance=  $masterData[$customerId->id]['trnCr']-$masterData[$customerId->id]['trnDr'];
                    $Total_trn_dr               = $masterData[$customerId->id]['opening_balance_dr'] + $masterData[$customerId->id]['trnDr'];
                    $Total_trn_cr               = $masterData[$customerId->id]['opening_balance_cr'] + $masterData[$customerId->id]['trnCr'];
 //Vendor
                      
                    //  echo $Total_trn_dr."====".$Total_trn_cr.'<br/>';
                     if ($Total_trn_dr < $Total_trn_cr) {
                         $creditsset = $Total_trn_dr - $Total_trn_cr;
                         $creditsset = abs($creditsset);
                         $payment_status_bu_closeing = 'CR';
                         $closeing = $creditsset;
                     } else {
                         $debitsset = $Total_trn_cr - $Total_trn_dr;
                         $debitsset = abs($debitsset);
                         $payment_status_bu_closeing = 'DR';
                         if ($debitsset == 0) {
                             $payment_status_bu_closeing = 'CR';
                         } else {
                             $payment_status_bu_closeing = 'DR';
                         }
                         $closeing = $debitsset;
                     }
                    // if($masterData[$customerId]['production'] || $masterData[$customerId]['sheet_in_factory'] || $masterData[$customerId]['total_transit'] || $masterData[$customerId]['inproduction_total_return']){
                    //   echo "<tr><td>" . $cusNames[$customerId]."</td><td> ".$masterData[$customerId]['production']."</td><td> ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['total_transit']."</td><td> ".$masterData[$customerId]['inproduction_total_return']."</td></tr>";
                    // }
                     $Totaltranspot = 0;
                         if($payment_status_bu_closeing=='DR')
                         {
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit'];
                             $Totaltranspotval= $closeing-$Totaltranspot;
                             $Totaltranspotval= $Totaltranspotval-$masterData[$customerId->id]['inproduction_total_return'];
                         }
 
 
                          if($payment_status_bu_closeing=='CR')
                         {
                             
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit']+$masterData[$customerId->id]['inproduction_total_return'];
                             //$Totaltranspotval= $closeing-$Totaltranspot;
                             if($closeing>0)
                             {
                                $Totaltranspot=$closeing+$Totaltranspot;
                         

                                $Totaltranspotval= '-'.$Totaltranspot;
                             }
                             else
                             {
                                $Totaltranspotval= '-'.$Totaltranspot;
 
                             }
                         }
 
                         
                         



                      

                          $sheet=0;
                          $st=0;
                          $st=$masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['inproduction_total_return']+$masterData[$customerId->id]['total_transit'];

                        //   echo $masterData[$customerId]['production']." ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['inproduction_total_return']." ".$masterData[$customerId]['total_transit'].'<br/>';;
                          $totalcloseingbalance=$debitsset-$creditsset;
                          $netbalance_total_set=$totalcloseingbalance-$st;
                          
                           if($netbalance_total_set>0)
                           {
                                  $sheet=$st;
                           }
                           else
                           {
                                  $sheet=$debitsset;
                           }

                        //    $sheet = round($sheet,2);
                          $sheettotal_sales+=round($sheet,2);
                          $sheettotal_sales_master+=$sheet;
                        //   $totabetbalance+=$debitsset-$sheet;
                          $net_balance_sales +=$debitsset-$sheet;
                          $grpBalance +=$debitsset-$sheet;
                        if($Totaltranspotval > 0 && $Totaltranspotval != 0){
                            $balanceLedger = $balanceLedger + 1;
                            $balanceLedgerSl = $balanceLedgerSl + 1;
                        }elseif($Totaltranspotval < 0 && $Totaltranspotval != 0){
                            $creditLedger = $creditLedger + 1;
                            $creditLedgerSl = $creditLedgerSl + 1;
                        }
                        
                         if($sheet > 0){
                             $sheetLedger = $sheetLedger + 1;
                             $sheetLedgerSl = $sheetLedgerSl + 1;
                         }
                
                    }
               
                   $updatedBalLed = [];
                   $updatedActBal = [];
                   $updatedSheet = [];
                   $updatedBalLed = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'bal_led');
                   $updatedActBal = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'act_bal');
                   $updatedSheet = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'sheet');

                   if($updatedBalLed[0] && count($updatedBalLed) > 0){
                    $balanceLedger = $updatedBalLed[0]->value;
                   }
                   if($updatedActBal[0] && count($updatedActBal) > 0){
                    $net_balance_sales = $updatedActBal[0]->value;
                   }
                   if($updatedSheet[0] && count($updatedSheet) > 0){
                    $sheettotal_sales = $updatedSheet[0]->value;
                   }

                   $spSerialNo = $spSerialNo + 1;
                   $salesperson[]=array(
                       'no' => $spSerialNo,
                       'sales_person_id'=>$valueget->sales_team_id,
                       'sales_team_id'=>$valueget->sales_team_id,
                       'id'=>$valueget->sales_team_id,
                       'sales_person_name'=>$valueget->sales_person_name,
                       'sheet' => divideVal($sheettotal_sales ),
                       'sheet_nd' => round($sheettotal_sales,2),
                       'balance' =>  divideVal(is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'balance_nd' =>    (is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'total'=>divideVal($sheettotal_sales+$net_balance_sales),
                       'total_nd'=> ($sheettotal_sales+$net_balance_sales),
                       'balance_ledger' =>$balanceLedger,
                       'credit_ledger' =>$creditLedger,
                       'sheet_ledger' =>$sheetLedger,
                        'updates_bal_led' => $updatedBalLed,
                        'updates_act_bal' => $updatedActBal,
                        'updates_sheet' => $updatedSheet
                  );
               }

               $totalcloseing = round($debitssettotal - $creditssettotal, 2);
               $totalcloseing = abs($totalcloseing);
               $balancetoatal = abs($balancetoatal);
               $array[] = array(


                   'no' => $i,
                   'id' => $valuessg->sales_group_id,
                   // 'sales_team_id'=>$valuessg->sales_group_id,
                   'sales_group_name' => $valuessg->sales_group_name,
                   'balance_ledger'=> $balanceLedgerSl,
                   'credit_ledger' =>$creditLedgerSl,
                    'sheet_ledger' =>$sheetLedgerSl,
                   'net_balance' => divideVal(round($grpBalance, 2)),
                   'net_balance_nd' =>  (round($grpBalance, 2)),
                   'sheet_total'=> divideVal(round($sheettotal_sales_master,2)),
                   'sheet_total_nd'=>  (round($sheettotal_sales_master,2)),
                   'total_nd'=>  (round($grpBalance,2)+round($sheettotal_sales_master,2)),
                   'total'=>  divideVal(round($grpBalance,2)+round($sheettotal_sales_master,2)),
                   'salesperson'=>$salesperson

               );
               $i++;
   $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'hidestatus' => $hidestatus, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'sales_group_id' => $valuessg->sales_group_id,
                                            'debit' => round($valuessg->debitssettotal,2),
                                            'credit' => round($valuessg->creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'closeing_status' =>  round($closeing_status,2),
                                            'production'=>round($valuessg->productiontotal,2),
                                            'production_return'=>round($valuessg->productiontotal_return,2),
                                            'sheet_in_factory'=>round($valuessg->sheet_in_factory_val,2),
                                            'transit'=>round($valuessg->transit,2),
                                            'net_balance'=>round($net_balance,2),
                                            'net_balance_status' =>  round($net_balance_status,2),
                                            'sheet_total'=>round($valuessg->sheettotal,2),
                                            'Tran_Dr'=>round($valuessg->Tran_Dr,2),
                                            'Tran_Cr'=>round($valuessg->Tran_Cr,2),
                                            'Tot_Dr'=>round($valuessg->Tot_Dr,2),
                                            'Tot_Cr'=>round($valuessg->Tot_Cr,2),
                                            'Open_Dr'=>round($valuessg->Open_Dr,2),
                                            'Open_Cr'=>round($valuessg->Open_Cr,2),
                                            'Open_Bal'=>round($valuessg->Open_Bal,2),
                                           
                
                                        );
   $i++;
}
 
 $array[] = array(
                                            
                                            'no' => 0, 
                                            'id' => "", 
                                            'hidestatus' => "SS", 
                                            'sales_group_name' => "", 
                                            'sales_group_id' => "",
                                            'debit' => round($debitssettotal_tot,2),
                                            'credit' => round($creditssettotal_tot,2),
                                            'closeing' =>  round($totalcloseing_tot,2),
                                            'closeing_status' =>  0,
                                            'production'=>round($productiontotal_tot,2),
                                            'production_return'=>round($productiontotal_return_tot,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val_tot,2),
                                            'transit'=>round($transit_tot,2),
                                            'net_balance'=>round($net_balance_tot,2),
                                            'net_balance_status' =>  0,
                                            'sheet_total'=>round($sheettotal_tot,2),
                                            'Tran_Dr'=>round($Tran_Dr_tot,2),
                                            'Tran_Cr'=>round($Tran_Cr_tot,2),
                                            'Tot_Dr'=>round($Tot_Dr_tot,2),
                                            'Tot_Cr'=>round($Tot_Cr_tot,2),
                                            'Open_Dr'=>round($Open_Dr_tot,2),
                                            'Open_Cr'=>round($Open_Cr_tot,2),
                                            'Open_Bal'=>round($Open_Bal_tot,2),
                                           
                
                   );  


                     }else{
                       $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name
                        ,SUM(a.debit) as debitssettotal
                        ,SUM(a.credit) as creditssettotal
                        ,SUM(a.closeing) as totalcloseing
                        ,SUM(a.production) as productiontotal
                        ,SUM(a.inproduction_total_return) as productiontotal_return
                        ,SUM(a.sheet_in_factory) as sheet_in_factory_val
                        ,SUM(a.total_transit) as transit
                        ,SUM(a.sheet) as sheettotal
                        ,SUM(a.trnDr) as Tran_Dr
                        ,SUM(a.trnCr) as Tran_Cr
                        ,SUM(a.trnDrtotal) as Tot_Dr
                        ,SUM(a.trnCrtotal) as Tot_Cr
                        ,SUM(a.opening_balance_dr) as Open_Dr
                        ,SUM(a.opening_balance_cr) as Open_Cr
                        ,SUM(a.opening_balance) as Open_Bal
                        ,SUM(if(a.getstatus = '1',a.balance,0)) as TotalbalanceCR
                        ,SUM(if(a.getstatus = '0',a.balance,0)) as TotalbalanceDR
                        ,SUM(a.sheet) as sheet_total  FROM customer_balance_report_beta1 as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0       $stat $userslog $usersgroup $searchsql $searchsql2 $filterdata GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                    
                    //  if($testMode){
                    //   exit;
                    // }
                     
                     
                     $i=1;


                      $debitssettotal_tot=0;
                                        $creditssettotal_tot=0;
                                        $totalcloseing_tot=0;
                                        $productiontotal_tot=0;
                                        $productiontotal_return_tot=0;
                                        $sheet_in_factory_val_tot=0;
                                        $transit_tot=0;
                                        $net_balance_tot=0;
                                        $sheettotal_tot=0;

                                        $Tran_Dr_tot=0;
                                        $Tran_Cr_tot=0;
                                        $Tot_Cr_tot=0;
                                        $Tot_Dr_tot=0;
                                        $Open_Dr_tot=0;
                                        $Open_Cr_tot=0;
                                        $Open_Bal_tot=0;
                       
                     foreach ($result as  $valuessg) 
                     {



                       
                                     $totalcloseing= round($valuessg->creditssettotal-$valuessg->debitssettotal,2);
                                     if($totalcloseing>0)
                                     {
                                        $closeing_status=1;
                                     }
                                     else
                                     {
                                        $closeing_status=0;
                                     }
                                     $totalcloseing=abs($totalcloseing);




                                      
                                         $net_balance= round($valuessg->debitssettotal-$valuessg->sheettotal,2);
                                         //$sstotalss=   $valuessg->productiontotal_return+$valuessg->sheet_in_factory_val+$valuessg->transit+$valuessg->productiontotal;
                                         //$net_balance=$net_balance-$sstotalss+$valuessg->sheettotal;

                                         if($net_balance>0)
                                         {
                                            $net_balance_status=0;
                                         }
                                         else
                                         {
                                            $net_balance_status=0;
                                         }
                                         $net_balance=abs($net_balance);





                                          if($net_balance>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                   $hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                   $hidestatus="getview";
                                              }
                                             
                                          }




                                            
                                    
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'hidestatus' => $hidestatus, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'sales_group_id' => $valuessg->sales_group_id,
                                            'debit' => round($valuessg->debitssettotal,2),
                                            'credit' => round($valuessg->creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'closeing_status' =>  round($closeing_status,2),
                                            'production'=>round($valuessg->productiontotal,2),
                                            'production_return'=>round($valuessg->productiontotal_return,2),
                                            'sheet_in_factory'=>round($valuessg->sheet_in_factory_val,2),
                                            'transit'=>round($valuessg->transit,2),
                                            'net_balance'=>round($net_balance,2),
                                            'net_balance_status' =>  round($net_balance_status,2),
                                            'sheet_total'=>round($valuessg->sheettotal,2),
                                            'Tran_Dr'=>round($valuessg->Tran_Dr,2),
                                            'Tran_Cr'=>round($valuessg->Tran_Cr,2),
                                            'Tot_Dr'=>round($valuessg->Tot_Dr,2),
                                            'Tot_Cr'=>round($valuessg->Tot_Cr,2),
                                            'Open_Dr'=>round($valuessg->Open_Dr,2),
                                            'Open_Cr'=>round($valuessg->Open_Cr,2),
                                            'Open_Bal'=>round($valuessg->Open_Bal,2),
                                           
                
                                        );



                                        $debitssettotal_tot+=$valuessg->debitssettotal;
                                        $creditssettotal_tot+=$valuessg->creditssettotal;
                                        $totalcloseing_tot+=$totalcloseing;
                                        $productiontotal_tot+=$valuessg->productiontotal;
                                        $productiontotal_return_tot+=$valuessg->productiontotal_return;
                                        $sheet_in_factory_val_tot+=$valuessg->sheet_in_factory_val;
                                        $transit_tot+=$valuessg->transit;  
                                        $net_balance_tot+=$net_balance;
                                        $sheettotal_tot+=$valuessg->sheettotal;

                                        $Tran_Dr_tot+=$valuessg->Tran_Dr;
                                        $Tran_Cr_tot+=$valuessg->Tran_Cr;
                                        $Tot_Cr_tot+=$valuessg->Tot_Cr;
                                        $Tot_Dr_tot+=$valuessg->Tot_Dr;
                                        $Open_Dr_tot+=$valuessg->Open_Dr;
                                        $Open_Cr_tot+=$valuessg->Open_Cr;
                                        $Open_Bal_tot+=$valuessg->Open_Bal;
                                        
                       
                        $i++;

                     }



                      $array[] = array(
                                            
                                            'no' => 0, 
                                            'id' => "", 
                                            'hidestatus' => "SS", 
                                            'sales_group_name' => "", 
                                            'sales_group_id' => "",
                                            'debit' => round($debitssettotal_tot,2),
                                            'credit' => round($creditssettotal_tot,2),
                                            'closeing' =>  round($totalcloseing_tot,2),
                                            'closeing_status' =>  0,
                                            'production'=>round($productiontotal_tot,2),
                                            'production_return'=>round($productiontotal_return_tot,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val_tot,2),
                                            'transit'=>round($transit_tot,2),
                                            'net_balance'=>round($net_balance_tot,2),
                                            'net_balance_status' =>  0,
                                            'sheet_total'=>round($sheettotal_tot,2),
                                            'Tran_Dr'=>round($Tran_Dr_tot,2),
                                            'Tran_Cr'=>round($Tran_Cr_tot,2),
                                            'Tot_Dr'=>round($Tot_Dr_tot,2),
                                            'Tot_Cr'=>round($Tot_Cr_tot,2),
                                            'Open_Dr'=>round($Open_Dr_tot,2),
                                            'Open_Cr'=>round($Open_Cr_tot,2),
                                            'Open_Bal'=>round($Open_Bal_tot,2),
                                           
                
                   );   



                     }
                    

                                        
                     sort($array);
                     
                  
                    

                    echo json_encode($array);
                   

    }
    
    














    
    
    
      public function customer_balance_report_production()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                                             
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'In production & Sheet in factory report (customer wise data)';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_production.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
      public function customer_balance_report_order()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
                                             
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             
                                             
                                             
                                             
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                           
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'In production & Sheet in factory report (order wise data)';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_balance_report_order.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
      public function profit_and_loss()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Profit And Loss Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/profit_and_loss.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
      public function trial_balance()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Balance Sheet Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
      public function trial_balance_full()
    {
                  


 $resultloop = $this->db->query("SELECT a.id,a.order_no,b.deleteid FROM `orders_process` as a JOIN all_ledgers as b ON a.order_no=b.order_no WHERE a.order_base=-1 AND a.deleteid='0' AND b.deleteid=0 ORDER BY `b`.`deleteid` DESC");
$resultloop = $resultloop->result();
if(count($resultloop)>0)
{


foreach ($resultloop as $loop) 
{
      $order_no= $loop->order_no;
      $id= $loop->id;


  $this->db->query("UPDATE all_ledgers SET deleteid='1',notes='Cancel Approved' WHERE order_id='".$id."' AND  order_no='".$order_no."' AND deleteid=0");



    $this->db->query("UPDATE order_delivery_order_status SET reason='Cancel Approved',order_base='-1' WHERE order_id='".$id."' AND  order_no='".$order_no."'");

$newModOrderNo=$order_no;

  $autoroundoff_deletemod='AUTOROUND-'.$newModOrderNo;
  $this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE order_no='".$newModOrderNo."' AND customer_id='372' AND deletemod='".$autoroundoff_deletemod."' AND party_type=5");



  $autoroundoff_deletemod1='ROUND-'.$newModOrderNo;
  $this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE order_no='".$newModOrderNo."' AND customer_id='372' AND deletemod='".$autoroundoff_deletemod1."' AND party_type=5");
  

  $DISCOUNT_DELETEMOD='DISCOUNT-'.$newModOrderNo;
  $this->db->query("UPDATE all_ledgers SET  deleteid=13 WHERE order_no='".$newModOrderNo."' AND customer_id='220' AND deletemod='".$DISCOUNT_DELETEMOD."' AND party_type=5");

   $tcsset='TCS-'.$newModOrderNo;
$this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE customer_id='166'  AND order_no='".$newModOrderNo."' AND party_type=5  AND deletemod='".$tcsset."'");
$this->db->query("UPDATE all_ledgers SET deleteid='102' WHERE customer_id='166' AND debits='0' AND credits='0' AND party_type='5'  AND deleteid='0'");

                   
   $sgstOut='SGST OUT - '.$newModOrderNo;
$this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE customer_id='585'  AND order_no='".$newModOrderNo."' AND party_type=5  AND deletemod='".$sgstOut."'");


    $cgstOut='CGST OUT - '.$newModOrderNo;
$this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE customer_id='586'  AND order_no='".$newModOrderNo."' AND party_type=5  AND deletemod='".$cgstOut."'");

   $igstOut='IGST OUT - '.$newModOrderNo;
$this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE customer_id='587'  AND order_no='".$newModOrderNo."' AND party_type=5  AND deletemod='".$igstOut."'");

   $sgstIn='SGST IN - '.$newModOrderNo;
$this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE customer_id='588'  AND order_no='".$newModOrderNo."' AND party_type=5  AND deletemod='".$sgstIn."'");

   $cgstIn='CGST IN - '.$newModOrderNo;
$this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE customer_id='589'  AND order_no='".$newModOrderNo."' AND party_type=5  AND deletemod='".$cgstIn."'");

   $igstIn='IGST IN - '.$newModOrderNo;
$this->db->query("UPDATE all_ledgers SET deleteid=13 WHERE customer_id='590'  AND order_no='".$newModOrderNo."' AND party_type=5  AND deletemod='".$igstIn."'");
      
   
}


}        

                 
//$this->db->query("UPDATE accountheads SET  op_status =2,payment_status=2,op=0,opening_balance=0 WHERE id = 720"); 
//$this->db->query("UPDATE all_ledgers SET  debits=0,credits=0 WHERE customer_id='720' AND party_type='5' AND opening_balance_status='1'  AND deleteid=0"); 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {



                                             $this->db->query("DELETE FROM table_customize_new  WHERE user_id='".$this->userid."'");



                                            
                                          $column_enable = [8,9,10];
                                          $column_disable = [1,2,3,4,5,6,7,11,12,13,14];
                                          foreach($column_disable as $Key => $val){
                                              $basedata['user_id'] = $this->userid;
                                              $basedata['label_id'] = $val;
                                              $basedata['status'] = 0;
                                              $this->Main_model->insert_commen($basedata, 'table_customize_new');
                                                 }
                                     
                                          foreach($column_enable as $Key => $val){
                                             $basedata['user_id'] = $this->userid;
                                             $basedata['label_id'] = $val;
                                             $basedata['status'] = 1;
                                             $this->Main_model->insert_commen($basedata, 'table_customize_new');

                                                 }

                                            $checkop = $this->Main_model->where_names('accountheads','id','720');
                                            foreach ($checkop as  $value) {
                                                $op=$value->op;
                                                $op_status=$value->op_status;
                                            }
                                            $data['op']=$op;
                                            $data['op_status']=$op_status;
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             
                                             $data['accountstypename']="";
                                             if(isset($_GET['accountstype']))
                                             {
                                                 
                                                  $accounttype= $this->Main_model->where_names('accounttype','id',$_GET['accountstype']);
                                                  foreach($accounttype as $vl)
                                                  {
                                                      $accountstypename=$vl->name;
                                                  }
                                                 $data['accountstypename']=$accountstypename;
                                             }
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Trial Balance';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance_full_beta1.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }

    public function weighted_average()
    {

                                        if(isset($this->session->userdata['logged_in']))
                                        {

                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');

                                             $data['accountstypename']="";
                                             if(isset($_GET['accountstype']))
                                             {

                                                  $accounttype= $this->Main_model->where_names('accounttype','id',$_GET['accountstype']);
                                                  foreach($accounttype as $vl)
                                                  {
                                                      $accountstypename=$vl->name;
                                                  }
                                                 $data['accountstypename']=$accountstypename;
                                             }

                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Weighted Average';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/weighted_average.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




    }

     public function trial_balance_full_beta()
    {
                  

                        


                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             
                                             $data['accountstypename']="";
                                             if(isset($_GET['accountstype']))
                                             {
                                                 
                                                  $accounttype= $this->Main_model->where_names('accounttype','id',$_GET['accountstype']);
                                                  foreach($accounttype as $vl)
                                                  {
                                                      $accountstypename=$vl->name;
                                                  }
                                                 $data['accountstypename']=$accountstypename;
                                             }
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Trial Balance';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/trial_balance_full_beta1.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
     public function salse_group_order_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                             $data['sales_team'] = $this->Main_model->where_names_three_order_by('admin_users','access',12,'deleteid','0','status','1','id','ASC');
                                             $data['sales_head'] = $this->Main_model->where_names_three_order_by('admin_users','access',11,'deleteid','0','status','1','id','ASC');
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Sales Group Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/salse_group_order_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }






    
    
         public function enquiry_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                              $data['sales_team'] = $this->Main_model->where_names_three_order_by('admin_users','access',12,'deleteid','0','status','1','id','ASC');
                                             $data['sales_head'] = $this->Main_model->where_names_three_order_by('admin_users','access',11,'deleteid','0','status','1','id','ASC');
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Enquiry Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/enquiry_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }

   public function enquiry_report_a()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                                             
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                              $data['sales_team'] = $this->Main_model->where_names_three_order_by('admin_users','access',12,'deleteid','0','status','1','id','ASC');
                                             $data['sales_head'] = $this->Main_model->where_names_three_order_by('admin_users','access',11,'deleteid','0','status','1','id','ASC');
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Enquiry Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/enquiry_report_a.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }

        public function enquiry_report_export()
    {

  $customer_id=$_GET['customer_id'];
                     $cateid=$_GET['sales_group'];
                    //  $sales_group=$_GET['sales_group'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";
                    if($order_status>0)
                    {
                         $userslog.=' AND b.sales_member_id="'.$order_status.'"';
                    }
                    if($cateid>0)
                    {
                         $userslog.=' AND a.id="'.$cateid.'"';
                    }

                        if($this->session->userdata['logged_in']['access']=='17')
                    {
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {

                              $sales_team_id[]=$values->define_saleshd_id;

                          }

                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }

                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';

                    }


                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }


                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }

                          $sales_team_id="'".implode("','", $sales_team_id)."'";

                          $userslog.=' AND  b.sales_member_id IN ('.$sales_team_id.')';
                    }



                    function refineValue($value){
                        if($value != 0 && $value != ''){
                            return floatval(round($value,2));
                        }else{
                            return 0;
                        }
            
                     }

               



                     $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 $userslog $usersgroup GROUP BY a.id ORDER BY a.name ASC");
                     $result=$result->result();

                     $i=1;
                     $array=array();
                     $totals = array();
                     foreach ($result as  $valuessg){
                                 $resultsubdata=$this->db->query("SELECT aa.username,aa.id ,aa.status  FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND a.id='".$valuessg->sales_group_id."' $userslog $usersgroup GROUP BY aa.id ORDER BY aa.name ASC");
                                 $resultsubdata=$resultsubdata->result();
                                 $subresult=array();
                                 $old_total_count_G = 0;
                                $old_total_convert_G = 0;
                                $old_total_missed_G = 0;
                                $old_total_billing_G = 0;
                                $old_total_pending_G = 0;
                                $old_total_cancel_G = 0;

                                $today_count_G = 0;
                                $today_convert_G = 0;
                                $today_missed_G = 0;
                                $today_billing_G = 0;
                                $today_pending_G = 0;
                                $today_pending_missed_G = 0;
                                $today_cancel_G = 0;
                                $today_pending_cancel_G = 0;
                                $today_converted_cancel_G = 0;
                                $today_old_convert_G = 0;


                                $total_count_G = 0;
                                $total_convert_G = 0;
                                $total_missed_G = 0;
                                $total_pending_G = 0;
                                $total_billing_G = 0;
                                $total_cancel_G = 0;
                                foreach ($resultsubdata as  $val)
                                {

                                    $old_total_count = 0;
                                    $old_total_convert = 0;
                                    $old_total_billing = 0;
                                    $old_total_missed  = 0;
                                    $old_total_pending = 0;
                                    $old_total_cancel = 0;


                                    $today_count = 0;
                                    $today_convert = 0;
                                    $today_missed = 0;
                                    $today_billing = 0;
                                    $today_pending = 0;
                                    $today_pending_missed = 0;
                                    $today_cancel = 0;
                                    $today_pending_cancel = 0;
                                    $today_converted_cancel = 0;
                                    $today_old_convert = 0;
                                    // $today_old_converted = 0;


                                    $dateCondLess = " AND a.create_date < '".$formdate."' ";
                                    $dateCondOrdersLess = " AND o.create_date < '".$formdate."' ";

                                    $dateCondEquals = " AND a.create_date = '".$formdate."' ";
                                    $dateCondOrdersEquals = " AND o.create_date = '".$formdate."' ";

                                    if($formdate != $todate ){
                                        $dateCond = " AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ";
                                        $dateCondOrders = " AND o.create_date BETWEEN '".$formdate."' AND '".$todate."' ";
                                    }
                                    //old_total_count
                                    // $resultoverall=$this->db->query("SELECT COUNT(a.id) as totalcount  FROM orders as a  WHERE a.deleteid='0' AND a.user_id='".$val->id."' $dateCondLess");
                                    $resultoverall=$this->db->query("SELECT  COUNT(a.id) as totalcount  FROM orders as a   WHERE a.deleteid IN ('0','1000','2024-12-01')  AND a.order_base  IN ('0','1','-1','3','-2','-4') AND a.create_date < '".$formdate."'  AND a.user_id='".$val->id."' ");

                  
                  $resultoverall=$resultoverall->row();

                  $old_total_count=$resultoverall->totalcount;
                  $old_total_count_G += $old_total_count;

                  

                  //old_total_cancel
                  $resultoverallCancel=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.cancelled_date < '".$formdate."'  AND a.user_id = '".$val->id."' ")->row();

                  $resultoverallCancel2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.cancelled_date < '".$formdate."'  AND a.user_id = '".$val->id."' ")->row();

                  $old_total_cancel=$resultoverallCancel->totalcount + $resultoverallCancel2->totalcount;
                  $old_total_cancel_G += $old_total_cancel;

                  //old_total_convert
                  $convetedtotal=$this->db->query("SELECT COUNT(op.id) as totalcount  FROM orders_process op WHERE op.deleteid IN ('0','1000','2024-12-01') AND op.user_id='".$val->id."' AND   op.order_base = 1 AND  op.create_date < '".$formdate."'  ");
                  $convetedtotal=$convetedtotal->row();
                  $old_total_convert=$convetedtotal->totalcount;
                  $old_total_convert_G += $old_total_convert;
                  //old_total_billing
                  $old_total_billing=$convetedtotal->totalcount;
                  $old_total_billing_G += $old_total_billing;

                  //old_total_missed
                   $missedtotal = $this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.missed_date < '".$formdate."' AND a.create_date <  '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();

                  $missedtotal2 = $this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.missed_date < '".$formdate."'  AND a.create_date <  '".$formdate."'  AND a.deleteid IN ('0','1000','2024-12-01')")->row();
               
                  $old_total_missed=$missedtotal->totalcount + $missedtotal2->totalcount;
                  $old_total_missed_G += $old_total_missed;

                  //old_total_pending
                  $billingpending=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid IN ('0','1000','2024-12-01') AND create_date <'".$formdate."'")->row();

                  $billingpending2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid IN ('0','1000','2024-12-01') AND create_date <'".$formdate."'")->row();


                  $old_total_pending=$billingpending->totalcount + $billingpending2->totalcount;
                  $old_total_pending_G += $old_total_pending;

                  ///Today's - today_count
                  $today_resultoverall=$this->db->query("SELECT COUNT(a.id) as totalcount FROM orders as a WHERE a.deleteid IN ('0','1000','2024-12-01') AND a.user_id='".$val->id."'  AND a.order_base  IN ('0','1','-1','3','-2','-4') AND a.create_date = '".$formdate."' ");
                  $today_resultoverall=$today_resultoverall->row();
                  $today_count=$today_resultoverall->totalcount ;
                  $today_count_G += $today_count;


                 

                  //today_old_convert
                  $today_oldconverttotal=$this->db->query("SELECT COUNT(o.id) as totalcount  FROM orders_process op LEFT JOIN orders_quotation o ON o.id = op.move_id WHERE o.user_id='".$val->id."' AND o.order_base > 0 AND op.order_base > 0 AND o.deleteid IN ('0','1000','2024-12-01') AND op.create_date = '".$formdate."' AND o.create_date < '".$formdate."'  ");
                  $today_oldconverttotal=$today_oldconverttotal->row();
                  $today_old_convert=$today_oldconverttotal->totalcount;
                  $today_old_convert_G += $today_old_convert;

                   //today_convert
                  $today_convetedtotal=$this->db->query("SELECT COUNT(op.id) as totalcount  FROM orders_process op WHERE op.deleteid = 0 AND  op.user_id='".$val->id."'  AND  op.create_date = '".$formdate."'  ");
                  $today_convetedtotal=$today_convetedtotal->row();
                  $today_convert=$today_convetedtotal->totalcount - $today_old_convert;
                  $today_convert_G += $today_convert;



                  $today_billing=$today_convert + $today_old_convert;
                  $today_billing_G += $today_billing;

                  
                     
                  //today_pending
                  $today_billingpending=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid IN ('0','1000','2024-12-01') AND create_date = '".$formdate."'")->row();

                  $today_billingpending2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid IN ('0','1000','2024-12-01') AND create_date = '".$formdate."'")->row();
                   $today_pending=$today_billingpending->totalcount + $today_billingpending2->totalcount;
                  $today_pending_G += $today_pending;

                  //today_missed
                  $today_totalmissedQuery=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND  a.order_base = '-2' AND a.deleteid IN ('0','1000','2024-12-01') AND a.missed_date = '".$formdate."' AND a.create_date = '".$formdate."' ")->row();


                  $today_totalmissedQuery2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND  a.order_base = '-2' AND a.deleteid IN ('0','1000','2024-12-01') AND a.missed_date = '".$formdate."' AND a.create_date = '".$formdate."'  ")->row();
                  $today_missed=$today_totalmissedQuery->totalcount + $today_totalmissedQuery2->totalcount;
                  $today_missed_G += $today_missed;

                //today_cancel
                $today_totalcancelQuery=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND  a.order_base = '-1' AND a.cancelled_date = '".$formdate."' AND a.create_date ='".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01')")->row();


                $today_totalcancelQuery2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND  a.order_base = '-1' AND a.cancelled_date = '".$formdate."'  AND a.create_date ='".$formdate."'  AND a.deleteid IN ('0','1000','2024-12-01')")->row();
                $today_cancel=$today_totalcancelQuery->totalcount + $today_totalcancelQuery2->totalcount;
                $today_cancel_G += $today_cancel;


                  //today old pendings -> missing
                  $today_totaloldmissedQuery=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.create_date < '".$formdate."' AND  a.missed_date = '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();


                  $today_totaloldmissedQuery2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.create_date < '".$formdate."' AND  a.missed_date = '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();
                  $today_pending_missed=$today_totaloldmissedQuery->totalcount + $today_totaloldmissedQuery2->totalcount;
                  $today_pending_missed_G += $today_pending_missed;

                   //today old pendings -> cancel
                   $today_totaloldcancelQuery= $this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.create_date < '".$formdate."' AND  a.cancelled_date = '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();


                   $today_totaloldcancelQuery2= $this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.create_date < '".$formdate."' AND  a.cancelled_date = '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();
                   $today_pending_cancel=$today_totaloldcancelQuery->totalcount + $today_totaloldcancelQuery2->totalcount;
                   $today_pending_cancel_G += $today_pending_cancel;


                     //today order convert -> cancel
                    $today_totalordercancelQuery=$this->db->query("SELECT COUNT(o.id) as totalcount  FROM orders_process op LEFT JOIN orders_quotation o ON o.id = op.move_id WHERE op.user_id='".$val->id."' AND op.order_base = -1 AND o.deleteid IN ('0','1000','2024-12-01')  AND op.cancelled_date = '".$formdate."' ");
                     $today_totalordercancelQuery=$today_totalordercancelQuery->row();
                     $today_converted_cancel=$today_totalordercancelQuery->totalcount;
                     $today_converted_cancel_G += $today_converted_cancel;


                                    //Total & Overall Total column calculations 
                                    $total_count= $old_total_count+$today_count;
                                    $total_count_G += $total_count;

                                    $total_convert= $old_total_convert+$today_convert + $today_old_convert;
                                    $total_convert_G += $total_convert;

                                    $total_missed= $old_total_missed+$today_missed;
                                    $total_missed_G += $total_missed;

                                    $total_billing= $old_total_billing+$today_billing;
                                    $total_billing_G += $total_billing;

                                    $total_pending= $old_total_pending - $today_old_convert + $today_pending;
                                    $total_pending_G += $total_pending;

                                    $total_cancel = $today_cancel + $old_total_cancel + $today_converted_cancel + $today_pending_cancel;
                                    $total_cancel_G += $total_cancel;



                                    $convertion=0;
                                    $missed=0;
                                    $pending=0;
                                    $billing=0;
                                    $cancel = 0;



                                    if($total_count!=0 && $total_convert!=0)
                                    {
                                        $convertion=round(($total_convert/$total_count)*100,1);
                                    }

                                    if($total_missed!=0 && $total_count!=0)
                                    {
                                        $missed=round($total_missed/$total_count*100,1);
                                    }

                                    if($total_pending!=0 && $total_count!=0)
                                    {
                                    $pending=round($total_pending/$total_count*100,1);
                                    }

                                    if($total_billing!=0 && $total_count!=0)
                                    {
                                    $billing=round($total_billing/$total_count*100,1);
                                    }

                                    if($total_cancel!=0 && $total_count!=0)
                                    {
                                    $cancel=round($total_cancel/$total_count*100,1);
                                    }

                                    $subresult[] = array(
                                        'id' => $val->id,
                                        'sales_team' => $val->username,

                                        'old_total_count'=>$old_total_count,
                                        'old_total_convert'=>$old_total_convert,
                                        'old_total_missed'=>$old_total_missed,
                                        'old_total_billing'=>$old_total_billing,
                                        'old_total_pending'=>$old_total_pending,
                                        'old_total_cancel' => $old_total_cancel,

                                        'today_count'=>$today_count,
                                        'today_convert'=>$today_convert,
                                        'today_missed'=>$today_missed,
                                        'today_billing'=>$today_billing,
                                        'today_pending'=>$today_pending,
                                        'today_old_convert'=>$today_old_convert,
                                        'today_pending_missed'=>$today_pending_missed,
                                        'today_cancel'=>$today_cancel,
                                        'today_converted_cancel'=> $today_converted_cancel,
                                        'today_pending_cancel' => $today_pending_cancel,
                                        


                                        'total_count'=>$total_count,
                                        'total_cancel'=>$total_cancel,
                                        'total_convert'=>$total_convert,
                                        'total_missed'=>$total_missed,
                                        'total_billing'=>$total_billing,
                                        'total_pending'=>$total_pending,

                                        'convertion'=>$convertion,
                                        'missed'=>$missed,
                                        'pending'=>$pending,
                                        'billing'=>$billing,
                                        'cancel'=>$cancel


                                    );
                                    
                                }

                                //  $convertionPerc = $total_convert_G/$total_count_G * 100;
                                  
                                 if ($total_count_G != 0) {
                                    $convertionPerc = $total_convert_G / $total_count_G * 100;
                                    $missedPerc = $total_missed_G / $total_count_G * 100;
                                    $pendingPerc = $total_pending_G / $total_count_G * 100;
                                    $billingPerc = $total_billing_G / $total_count_G * 100;
                                    $cancelPerc = $total_cancel_G / $total_count_G * 100;
                                } else {
                                    $convertionPerc = 0;
                                    $missedPerc = 0;
                                    $pendingPerc = 0;
                                    $billingPerc = 0;
                                    $cancelPerc = 0;
                                }
                                 $totals['old_total_count'] += $old_total_count_G;
                                 $totals['old_total_convert'] += $old_total_convert_G;
                                 $totals['old_total_missed'] += $old_total_missed_G;
                                 $totals['old_total_billing'] += $old_total_billing_G;
                                 $totals['old_total_pending'] += $old_total_pending_G;
                                 $totals['old_total_cancel'] += $old_total_cancel_G;


                                 $totals['today_count'] += $today_count_G;
                                 $totals['today_convert'] += $today_convert_G;
                                 $totals['today_missed'] += $today_missed_G;
                                 $totals['today_billing'] += $today_billing_G;
                                 $totals['today_pending'] += $today_pending_G;
                                 $totals['today_old_convert'] += $today_old_convert_G;
                                 $totals['today_pending_missed'] += $today_pending_missed_G;
                                 $totals['today_cancel'] += $today_cancel_G;
                                 $totals['today_converted_cancel'] += $today_converted_cancel_G;
                                 $totals['today_pending_cancel'] += $today_pending_cancel_G;


                                 $totals['total_count'] += $total_count_G;
                                 $totals['total_convert'] += $total_convert_G;
                                 $totals['total_missed'] += $total_missed_G;
                                 $totals['total_billing'] += $total_billing_G;
                                 $totals['total_pending'] += $total_pending_G;
                                 $totals['total_cancel'] += $total_cancel_G;
                                
                                 
                                  $array[] = array(


                                        'no' => $i,
                                        'id' => $valuessg->sales_group_id,
                                        'sales_group_name' => $valuessg->sales_group_name,
                                        'old_total_count'=>$old_total_count_G,
                                        'old_total_convert'=>$old_total_convert_G,
                                        'old_total_missed'=>$old_total_missed_G,
                                        'old_total_billing'=>$old_total_billing_G,
                                        'old_total_pending'=>$old_total_pending_G,
                                        'old_total_cancel' => $old_total_cancel_G,

                                        'today_count'=>$today_count_G,
                                        'today_convert'=>$today_convert_G,
                                        'today_missed'=>$today_missed_G,
                                        'today_billing'=>$today_billing_G,
                                        'today_pending'=>$today_pending_G,
                                        'today_old_convert'=>$today_old_convert_G,
                                        'today_pending_missed'=>$today_pending_missed_G,
                                        'today_cancel' => $today_cancel_G,
                                        'today_converted_cancel' => $today_converted_cancel_G,
                                        'today_pending_cancel' => $today_pending_cancel_G,

                                        'total_count'=>$total_count_G,
                                        'total_cancel'=>$total_cancel_G,
                                        'total_convert'=>$total_convert_G,
                                        'total_missed'=>$total_missed_G,
                                        'total_billing'=>$total_billing_G,
                                        'total_pending'=>$total_pending_G,

                                        'convertion'=> refineValue($convertionPerc),
                                        'missed'=>refineValue($missedPerc),
                                        'pending'=>refineValue($pendingPerc),
                                        'billing'=>refineValue($billingPerc),
                                        'cancel'=>refineValue($cancelPerc),
                                        'subarray'=>$subresult

                                    );


                    $i++;

                 }
                 
                 $totals['convertion'] = $totals['total_convert'] ? refineValue(($totals['total_convert']/$totals['total_count']) * 100) : 0;
                 $totals['missed'] =  $totals['total_missed'] ? refineValue(($totals['total_missed']/$totals['total_count']) * 100) : 0;
                 $totals['pending'] =  $totals['total_pending'] ? refineValue(($totals['total_pending']/$totals['total_count']) * 100) : 0;
                 $totals['cancel'] =  $totals['total_cancel'] ? refineValue(($totals['total_cancel']/$totals['total_count']) * 100) : 0;
                 $totals['billing'] =  $totals['total_billing'] ? refineValue(($totals['total_billing']/$totals['total_count']) * 100) : 0;
                //  $totals['missed'] = $missedG;
                //  $totals['pending'] = $pendingG;
                //  $totals['billing'] = $billingG;
                //  echo "<pre>";echo json_encode($array);
                //  exit;
                 $arrayMain = [];
                 $arrayMain['values'] = $array;
                 $arrayMain['totals'] = $totals;
                                             
                                            
                                            $filename = 'enquiry_report_' . $formdate;
                                            header("Content-Type: application/xls");
                                            header("Content-Disposition: attachment; filename=$filename.xls");
                                            header("Pragma: no-cache");
                                            header("Expires: 0");
                                            ?>
                                            
                                            <style>
                                                .bordered{
                                                    border:1px solid #000;
                                                }
                                            </style>
                                              <table id="datatable"  border="1">
                                              <thead style="border: #000 solid 1px;  font-family:sans-serif;font-size:14px;">
                                                
                                              <tr style="text-align: center;font-weight:bold;background-color:#cfcfcf;" >
                                                  <th colspan="8"></th>
                                                    <th colspan="6">ENQUIRY REPORT   <?php echo date('d/m/Y',strtotime($formdate)); ?></th>
                                                    <th colspan="8"></th>
                                                </tr>
                                              <tr>
                                                  <th></th>
                                                  <th></th>
                                                  <th style="text-align: center;" colspan="6">OLD</th>
                                                  <th style="text-align: center;" colspan="10">TODAY - <?php echo date('d/m/Y',strtotime($formdate)); ?></th>
                                                  <th style="text-align: center;" colspan="6">TOTAL</th>
                                                  <th style="text-align: center;" colspan="5">PERCENTAGE</th>
                                                </tr>
                                                <tr style="font-size: 13px;line-height:30px;">
                                                  <th style="width:25px;">No</th>
                                                  <th style="width:120px;text-align:start;">Name</th>


                                                  <th style="width:80px;">Enquiry</th>
                                                  <th style="width:80px;">Converted </th>
                                                  <th style="width:80px;">Pending</th>
                                                  <th style="width:80px;">Missing </th>
                                                  <th style="width:80px;">Cancel </th>
                                                  <th style="width:80px;">Bills</th>



                                                  <th style="width:80px;">Enquiry</th>
                                                  <th style="width:80px;">Converted </th>
                                                  <th style="width:80px;">Old Converted </th>
                                                  <th style="width:80px;">Bills</th>
                                                  <th style="width:80px;">Pending</th>
                                                  <th style="width:80px;">Old pending Missing </th>
                                                  <th style="width:80px;">Missing </th>
                                                  <th style="width:80px;">Cancel </th>
                                                  <th style="width:80px;">Pending Cancel </th>
                                                  <th style="width:80px;">Order Converted Cancel </th>


                                                  <th style="width:80px;">Enquiry</th>
                                                  <th style="width:80px;">Converted </th>
                                                  <th style="width:80px;">Pending</th>
                                                  <th style="width:80px;">Missing </th>
                                                  <th style="width:80px;">Bills</th>
                                                  <th style="width:80px;">Cancel</th>


                                                  <th style="width:80px;">Convertion %</th>
                                                  <th style="width:80px;">Pending %</th>
                                                  <th style="width:80px;">Cancel %</th>
                                                  <th style="width:80px;">Missed %</th>
                                                  <th style="width:80px;">Billing %</th>
                                                </tr>
                                            
                                              </thead>
                                            
                                            
                                            <tbody>
                                                <?php
                                                foreach($arrayMain['values'] as $entry){
                                                    
                                              ?>
                                            <tr border="1" style="font-size: 13px;">
                                                  <td style="width:25px;"><?=$entry['i']?></td>
                                                  <td style="width:120px;font-weight:bold;"><?=$entry['sales_group_name']?></td>

                                                  <td style="width:80px;font-weight:bold;"><?=$entry['old_total_count']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['old_total_convert']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['old_total_pending']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['old_total_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['old_total_cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['old_total_billing']?> </td>


                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_count']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_convert']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_old_convert']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_billing']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_pending']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_pending_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['today_pending_cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"> <?=$entry['today_converted_cancel']?> </td>



                                                  <td style="width:80px;font-weight:bold;"><?=$entry['total_count']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['total_convert']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['total_pending']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['total_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['total_billing']?> </td>

                                                  <td style="width:80px;font-weight:bold;"><?=$entry['total_cancel']?> </td>


                                                  <td style="width:80px;font-weight:bold;"><?=$entry['convertion']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['pending']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$entry['billing']?> </td>
                                                </tr>
                                                    <?php 
                                                    if($entry['subarray']){
                                                        foreach($entry['subarray'] as $subentry){

                                                          
                                                    ?>
                                                <tr border="1" style="font-size: 13px;">
                                                  <td style="width:25px;"><?=$subentry['i']?></td>
                                                  <td style="width:120px;"><?=$subentry['sales_team']?></td>
                                                  <td style="width:80px;"><?=$subentry['old_total_count']?></td>
                                                  <td style="width:80px;"><?=$subentry['old_total_convert']?> </td>
                                                  <td style="width:80px;"><?=$subentry['old_total_pending']?></td>
                                                  <td style="width:80px;"><?=$subentry['old_total_missed']?> </td>
                                                  <td style="width:80px;"><?=$subentry['old_total_cancel']?> </td>
                                                  <td style="width:80px;"><?=$subentry['old_total_billing']?> </td>


                                                  <td style="width:80px;"><?=$subentry['today_count']?> </td>
                                                  <td style="width:80px;"><?=$subentry['today_convert']?> </td>
                                                  <td style="width:80px;"><?=$subentry['today_old_convert']?></td>
                                                  <td style="width:80px;"><?=$subentry['today_billing']?></td>
                                                  <td style="width:80px;"><?=$subentry['today_pending']?> </td>
                                                  <td style="width:80px;"><?=$subentry['today_pending_missed']?> </td>
                                                  <td style="width:80px;"><?=$subentry['today_missed']?> </td>
                                                  <td style="width:80px;"><?=$subentry['today_cancel']?> </td>
                                                  <td style="width:80px;"><?=$subentry['today_pending_cancel']?> </td>
                                                  <td style="width:80px;"> <?=$subentry['today_converted_cancel']?> </td>



                                                  <td style="width:80px;"><?=$subentry['total_count']?></td>
                                                  <td style="width:80px;"><?=$subentry['total_convert']?> </td>
                                                  <td style="width:80px;"><?=$subentry['total_pending']?> </td>
                                                  <td style="width:80px;"><?=$subentry['total_missed']?> </td>
                                                  <td style="width:80px;"><?=$subentry['total_billing']?> </td>
                                                  <td style="width:80px;"><?=$subentry['total_cancel']?> </td>


                                                  <td style="width:80px;"><?=$subentry['convertion']?> </td>
                                                  <td style="width:80px;"><?=$subentry['pending']?> </td>
                                                  <td style="width:80px;"><?=$subentry['cancel']?> </td>
                                                  <td style="width:80px;"><?=$subentry['missed']?> </td>
                                                  <td style="width:80px;"><?=$subentry['billing']?> </td>
                                                </tr>

<?php
                                    }

                                    ?>
  
                                             <tr border="1" style="font-size: 13px;">
                                                  <td colspan="29"> </td>
                                                </tr>
<?php
                                }
} 
 
?>
 </tbody>
 <tfoot>


                                        <tr border="1" style="background: #fff;font-size: 13px;line-height:30px;">
                                                  <td style="width:25px;background: #fff;"></td>
                                                  <td style="width:100px;background: #fff;font-weight:bold;">TOTALS</td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['old_total_count']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['old_total_convert']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['old_total_pending']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['old_total_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['old_total_cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['old_total_billing']?> </td>


                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_count']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_convert']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_old_convert']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_billing']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_pending']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_pending_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['today_pending_cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"> <?=$totals['today_converted_cancel']?> </td>


                                                  <td style="width:80px;font-weight:bold;"><?=$totals['total_count']?></td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['total_convert']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['total_pending']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['total_missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['total_billing']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['total_cancel']?> </td>


                                                  <td style="width:80px;font-weight:bold;"><?=$totals['convertion']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['pending']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['cancel']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['missed']?> </td>
                                                  <td style="width:80px;font-weight:bold;"><?=$totals['billing']?> </td>
                                                </tr>

                                           
</tfoot>
                                            
                                            
                                            
                                            </table>


 

<?php

 

                                        

                                                        


    }




  public function sales_team_order_report()
    {




                                        if(isset($this->session->userdata['logged_in']))
                                        {


                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                               $data['sales_team'] = $this->Main_model->where_names_three_order_by('admin_users','access',12,'deleteid','0','status','1','id','ASC');
                                            $data['sales_head'] = $this->Main_model->where_names_three_order_by('admin_users','access',11,'deleteid','0','status','1','id','ASC');

                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Sales Team Target Sheet';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/sales_team_order_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }




    }

    // gg changes sales_team_order_report test
    
  public function sales_team_order_report_testing()
  {




                                      if(isset($this->session->userdata['logged_in']))
                                      {


                                           $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                           $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
                                             $data['sales_team'] = $this->Main_model->where_names_three_order_by('admin_users','access',12,'deleteid','0','status','1','id','ASC');
                                          $data['sales_head'] = $this->Main_model->where_names_three_order_by('admin_users','access',11,'deleteid','0','status','1','id','ASC');

                                           $data['active_base']='route';
                                           $data['active']='route';
                                           $data['title']    = 'Sales Team Target Sheet';
                                           $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                           $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                           $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                           $this->load->view('report/sales_team_order_report_testing.php',$data);


                                      }
                                      else
                                      {

                                            redirect('index.php/adminmain');

                                      }




  }






    
       public function api_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                               $data['sales_team'] = $this->Main_model->where_names_three_order_by('admin_users','access',12,'deleteid','0','status','1','id','ASC');
                                             $data['sales_head'] = $this->Main_model->where_names_three_order_by('admin_users','access',11,'deleteid','0','status','1','id','ASC');
                                             
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'API Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/api_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
     public function sales_product_report()
    {
                  

                 
                                        if(isset($this->session->userdata['logged_in']))
                                        {

                                            $data['uom'] = $this->Main_model->where_names_order_by('uom','deleteid','0','id','ASC');
                                            $data['brand'] = $this->Main_model->where_names_order_by('brand','deleteid','0','id','ASC');

                                            $resultmain = $this->db->query("SELECT * FROM `layout_plan` WHERE deleteid=0 GROUP BY name ORDER BY `layout_plan`.`id` DESC");
                                            $data['layout_plan'] = $resultmain->result();

                                            $data['price_master'] = $this->Main_model->where_names_order_by('price_master','deleteid','0','id','ASC');
                                            $data['grouping'] = $this->Main_model->where_names_order_by('grouping','deleteid','0','id','ASC');

                                            $data['additional_information'] =$this->Main_model->where_names_three_order_by_new('additional_information','grouping','1','deleteid','0','category_id','0','sort_order_id','ASC');
                                            $data['additional_information2'] =$this->Main_model->where_names_three_order_by_new('additional_information','grouping','1','deleteid','0','category_id!=','0','sort_order_id','ASC');
                                            $data['additional_information1'] =$this->Main_model->where_names_three_order_by_new('additional_information','grouping','1','deleteid','0','category_id=',$categories_id,'sort_order_id','ASC');

                                            $data['ys'] = $this->Main_model->where_names_order_by('ys','deleteid','0','id','ASC');
                                            $data['brand'] = $this->Main_model->where_names_order_by('brand','deleteid','0','id','ASC');
                                            $data['product'] = $this->Main_model->where_names_order_by('product_list','deleteid','0','id','ASC');
                                            $data['color'] = $this->Main_model->where_names_order_by('color','deleteid','0','id','ASC');
                                            $data['gsm'] = $this->Main_model->where_names_order_by('gsm','deleteid','0','id','ASC');
                                            $data['thickness'] = $this->Main_model->where_names_order_by('thickness','deleteid','0','id','ASC');
                                            $data['material_type'] = $this->db->query("SELECT DISTINCT id, SUBSTRING_INDEX(SUBSTRING_INDEX(`option`, ',', n), ',', -1) AS `option`
                                            FROM additional_information
                                            JOIN (
                                                SELECT 1 AS n UNION ALL
                                                SELECT 2 UNION ALL
                                                SELECT 3 UNION ALL
                                                SELECT 4
                                            ) AS numbers
                                            ON CHAR_LENGTH(`option`)
                                                -CHAR_LENGTH(REPLACE(`option`, ',', '')) >= n - 1
                                            WHERE label_name = 'material_type'
                                            ORDER BY id, n;");

                                          // Fetch options where label_name is 'categorie_type' directly through query
                                          $query = $this->db->query("SELECT `option` FROM `additional_information` WHERE `label_name` = 'categorie_type' AND `deleteid` = '0'");
                                          $result = $query->row();
                                          if ($result) {
                                            $categorie_type_option = $result->option;
                                           // Split the string into an array using a comma as the delimiter
                                                $optionsArray = array_map('trim', explode(",", $categorie_type_option));

                                                // Create an array of objects with the "option" key
                                                $optionObjects = array();
                                                foreach ($optionsArray as $option) {
                                                    if (!empty($option)) {
                                                        $optionObjects[] = $option;
                                                    }
                                                }
                                        } 
// echo "SELECT * FROM `additional_information` WHERE `label_name` = 'categorie_type' AND `deleteid` = '0'";
                                        // print_r($optionObjects ); exit();
                                            // $categorie_type_options = $query->result_array();

                                            // Pass the options to the view
                                            $data['categorie_type_options'] = $optionObjects;
                                            
                                            $data['active_base']='customer_1';
                                            $data['active'] ='customer_1';
                                            $data['title'] = 'Products Edit';
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Sales Product Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/salesproductreport.php',$data);

                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }    
    
       public function sheet_in_factory_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Sheet in factory report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/sheet_in_factory_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
     
      public function vendor_purchase_product_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Purchase Product Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/vendor_purchase_product_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
      public function customer_order_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer Order Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_order_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
     public function customer_yes_or_no_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['sales_team'] = $this->Main_model->where_names_three_order_by('admin_users','access',12,'deleteid','0','status','1','id','ASC');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Customer YES OR NO Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/customer_yes_or_no_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
     public function vendor_purchase_report()
    {
                  

                 
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                            
                                             $data['vendor'] = $this->Main_model->where_names('vendor','deleteid','0');
                                             $data['active_base']='route';
                                             $data['active']='route';
                                             $data['title']    = 'Purchase Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/vendor_purchase_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
       public function balancereport()
    {
                  

                                         ini_set('memory_limit', '4400M');
 
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                             
                                              $data['partytype'] = $this->Main_model->where_names('partytype','deleteid','0');
                                              $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                              $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                              $data['bankaccount'] = $this->Main_model->where_names('bankaccount','deleteid','0');
                                              $data['active_base']='customer_1';
                                              $data['active']='customer_1';
                                              $data['title']    = 'Balance Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/balancereport.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
      public function day_book_report()
    {
                  

                                         ini_set('memory_limit', '4400M');
 
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                             
                                              $data['partytype'] = $this->Main_model->where_names('partytype','deleteid','0');
                                              $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                              $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                              $data['bankaccount'] = $this->Main_model->where_names('bankaccount','deleteid','0');
                                              $data['active_base']='customer_1';
                                              $data['active']='customer_1';
                                              $data['title']    = 'Day Book Report';
                                              $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                              $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                              $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                              $this->load->view('report/day_book_report.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
         public function day_book_report_cash()
    {
                  

                                         ini_set('memory_limit', '4400M');
 
                                        if(isset($this->session->userdata['logged_in']))
                                        {

                                                     $data['accounthead_check']=0;
                                                   if(isset($_GET['accounthead_check']))
                                                   {
                                                      $data['accounthead_check']=1;
                                                   }

    $data['accountheads_sub_group'] =$this->Main_model->where_names_order_by("accountheads_sub_group","deleteid","0","name", "ASC");
            
           
            
            
           
           
                                              $data['partytype'] = $this->Main_model->where_names('partytype','deleteid','0');
                                              $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                              $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                              $data['bankaccount'] = $this->Main_model->where_names('bankaccount','deleteid','0');
                                              $data['active_base']='customer_1';
                                              $data['active']='customer_1';
                                              $data['title']    = 'Day Book Report';
                                              $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                              $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                              $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                              $this->load->view('report/day_book_report_cash.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
    
    
      public function balancereport_base_ledger_beta()
    {
                  

                                         ini_set('memory_limit', '4400M');
 
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                             $data['partytype'] = $this->Main_model->where_names('partytype','deleteid','0');
                                             $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                             $data['bankaccount'] = $this->Main_model->where_names('bankaccount','deleteid','0');
                                             
                                             
                                             $data['data_title']="";
                                             if(isset($_GET['accountshead']))
                                             {
                                                  $accountshead = $this->Main_model->where_names('accountheads_sub_group','id',$_GET['accountshead']);
                                                  foreach($accountshead as $val)
                                                  {
                                                     $data['data_title']= $val->name;
                                                  }
                                             }

                                             $data['from_date']=date('Y-m-d');
                                             if(isset($_GET['from_date']))
                                             {
                                                  
                                                 $data['from_date']= $_GET['from_date'];
                                                  
                                             }


                                              $data['todate']=date('Y-m-d');
                                             if(isset($_GET['to_date']))
                                             {
                                                  
                                                 $data['todate']= $_GET['to_date'];
                                                  
                                             }
                                             
                                             
                                             
                                             $data['active_base']='customer_1';
                                             $data['active']='customer_1';
                                             $data['title']    = 'Recent Ledger Transaction';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/balancereport_base_ledger_beta.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
     public function balancereport_base_ledger()
    {
                  

                                         ini_set('memory_limit', '4400M');
 
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                             $data['partytype'] = $this->Main_model->where_names('partytype','deleteid','0');
                                             $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                             $data['bankaccount'] = $this->Main_model->where_names('bankaccount','deleteid','0');
                                             
                                             
                                             $data['data_title']="";
                                             if(isset($_GET['accountshead']))
                                             {
                                                  $accountshead = $this->Main_model->where_names('accountheads_sub_group','id',$_GET['accountshead']);
                                                  foreach($accountshead as $val)
                                                  {
                                                     $data['data_title']= $val->name;
                                                  }
                                             }
                                             
                                             
                                             $data['active_base']='customer_1';
                                             $data['active']='customer_1';
                                             $data['title']    = 'Recent Ledger Transaction';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/balancereport_base_ledger.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
     public function balancereport_base_ledger_delete_log()
    {
                  

                                         ini_set('memory_limit', '4400M');
 
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                             $data['partytype'] = $this->Main_model->where_names('partytype','deleteid','0');
                                             $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                             $data['bankaccount'] = $this->Main_model->where_names('bankaccount','deleteid','0');
                                             
                                             
                                             $data['data_title']="";
                                             if(isset($_GET['accountshead']))
                                             {
                                                  $accountshead = $this->Main_model->where_names('accountheads_sub_group','id',$_GET['accountshead']);
                                                  foreach($accountshead as $val)
                                                  {
                                                     $data['data_title']= $val->name;
                                                  }
                                             }
                                             
                                             
                                             $data['active_base']='customer_1';
                                             $data['active']='customer_1';
                                             $data['title']    = 'Recent Ledger Transaction Delete Log';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/balancereport_base_ledger_delete_log.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
      public function accountsreport()
    {
                  

                      ini_set('memory_limit', '4400M');
                  
                                        if(isset($this->session->userdata['logged_in']))
                                        {
                                            
                                             $data['user_group'] = $this->Main_model->where_names('user_group','deleteid','0');
                                             $data['customers'] = $this->Main_model->where_names('customers','deleteid','0');
                                             $data['bankaccount'] = $this->Main_model->where_names('bankaccount','deleteid','0');
                                             $data['active_base']='customer_1';
                                             $data['active']='customer_1';


                                                     $data['from_date']=date('Y-m-d');
                                             if(isset($_GET['from_date']))
                                             {
                                                  
                                                 $data['from_date']= $_GET['from_date'];
                                                  
                                             }


                                              $data['todate']=date('Y-m-d');
                                             if(isset($_GET['to_date']))
                                             {
                                                  
                                                 $data['todate']= $_GET['to_date'];
                                                  
                                             }



                                             $data['title']    = 'Accounts Report';
                                             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
                                             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
                                             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
                                             $this->load->view('report/accountsreport.php',$data);


                                        }
                                        else
                                        {

                                              redirect('index.php/adminmain');

                                        }                    

                  


    }
    
    
    
    
    
    
    
        
    
         public function sheet_in_factory_report_data_partial()
    {

                    
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                     $stat="";
                    
                     $stat=" AND a.assign_status IN('11','12','1','0')";
                     $stat2="";
                     $search='';
                     if($cateid!='') 
                     {
                         $stat.=' AND a.order_no="'.$cateid.'"';
                         $stat2.=' AND a.order_no="'.$cateid.'"';
                     }
                     else
                     {
                         $stat.=" AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ";
                         $stat2.=" AND a.invoice_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     }
                                          
                   
                     $userslog="";
                  
                    
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                              $stat2.= ' AND  a.user_id IN (' . $sales_team_id . ')';
                          
                           
                                 
                    }
                    
                     if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';  
                          $stat2.= ' AND  a.user_id IN (' . $this->userid . ')';       
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                            
                           
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
            
                            
                            
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                           $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                             $stat2.= ' AND  a.user_id IN (' . $sales_team_id . ')'; 
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  a.sales_group IN ('.$sales_team_id.')';  

                         
                         
                                 
                    }
                    
                     
                     
                     
                     
                     
                     
                     
                    
               
                $resultccreturn=$this->db->query("SELECT a.id  FROM order_sales_return_complaints as a JOIN sales_return_products as b ON a.id=b.c_id  WHERE  a.deleteid=0 AND a.order_base='2'  AND a.driver_delivery_status=0  AND a.driver_return IN ('0','1','2') $stat2  GROUP BY b.c_id  ORDER BY a.id DESC");
                $resultccreturn=$resultccreturn->result();       
                   
                $resultcc=$this->db->query("SELECT a.id  FROM orders_process as a JOIN order_product_list_process as b ON a.id=b.order_id LEFT JOIN sales_load_products slp ON slp.order_product_id = b.id  WHERE   a.deleteid=0 AND a.order_base='1'   AND a.finance_status NOT IN ('10','4','5','6','14') AND a.return_status=0 $stat $userslog  GROUP BY b.order_id  ORDER BY a.id DESC");
                $resultcc=$resultcc->result(); 
   
               $result = $this->db->query("
    SELECT 
        a.assign_status,
        b.sub_product_id,
        b.remarks,
        b.profile,
        b.crimp,
        b.Sqr_feet_to_Meter,
        b.order_id,
        b.nos,
        a.order_no,
        a.sales_group,
        a.reason,
        a.user_id,
        a.customer_id,
        a.month,
        a.create_date,
        b.product_name,
        b.product_id,
        b.categories_id,
        b.categories_name,
        b.rate,
        b.qty,
        slp.qty * b.rate AS total_val,
        b.amount AS total,
        IFNULL(slp.qty * b.rate, 0) AS total_val
    FROM 
        orders_process AS a 
    JOIN 
        order_product_list_process AS b ON a.id = b.order_id 
    LEFT JOIN 
        sales_load_products slp ON slp.order_product_id = b.id
    WHERE 
        b.deleteid = 0 
        AND a.deleteid = 0 
        AND a.order_base = '1' 
        AND a.finance_status NOT IN ('10', '4', '5', '6', '14')  
        AND b.id NOT IN (319975, 298289, 292734, 271171, 131321, 265454, 287529) 
        AND a.id NOT IN (91956, 84860)  
        AND b.order_id NOT IN (68988, 37567) 
        AND a.return_status = 0 
        AND (slp.delivered_products = 0 OR slp.delivered_products IS NULL)  
        $stat $userslog 
    HAVING 
        total_val > 0  
    ORDER BY 
        a.id DESC
");

$result = $result->result();

                   
                $i=1;
                $array=array();
                      
                foreach ($result as  $value) {
                       
                       
                                                 $poin_to_member = $this->Main_model->where_names('customers','id',$value->customer_id);
                                                 foreach ($poin_to_member as $point) {
                                                    $company_name = $point->company_name;
                                                 }
                                                 
                                                 $sales_person= $this->Main_model->where_names('admin_users','id',$value->user_id);
                     
                                                 foreach ($sales_person as $saleslist) {
                                                    $salesperson = $saleslist->name;
                                                 }
                                                 
                                                       $sales_group_list= $this->Main_model->where_names('sales_group','id',$value->sales_group);
                     
                                                 foreach ($sales_group_list as $salesgrouplist) {
                                                    $sales_group = $salesgrouplist->name;
                                                 }
                                                 
                                                 
                                                 $product_list= $this->Main_model->where_names('product_list','id',$value->product_id);
                     
                                                 foreach ($product_list as $pro_list) {
                                                    $brand = $pro_list->brand;
                                                    $thickness = $pro_list->thickness;
                                                    $colors=$pro_list->color;
                                                    $type=$pro_list->type;
                                                    $uom=$pro_list->uom;
                                                    
                                                 }
                                                 
                                                 if($value->sub_product_id>0)
                                                 {
                                                     
                                                 
                                                     $product_list= $this->Main_model->where_names('product_list','id',$value->sub_product_id);
                         
                                                     foreach ($product_list as $pro_list) {
                                                        $brand = $pro_list->brand;
                                                        $thickness = $pro_list->thickness;
                                                        $colors=$pro_list->color;
                                                        
                                                     }
                                                 
                                                 }
                                                 
                                                 
                                                 if($value->crimp=='0')
                                                 {
                                                     $value->crimp='';
                                                 }
                                                 
                                                  if($thickness=='0')
                                                 {
                                                     $thickness='';
                                                 }
                                                 
                                                  if($colors=='0')
                                                 {
                                                     $colors='';
                                                 }
                                                 
                                                  if($value->profile=='0')
                                                 {
                                                     $value->profile='';
                                                 }
                                                 if($value->nos=='0')
                                                 {
                                                     $value->nos='';
                                                 }
                                                 if($value->crimp=='0')
                                                 {
                                                     $value->crimp='';
                                                 }
                                                 
                                                     if($value->Sqr_feet_to_Meter=='0')
                                                 {
                                                     $value->Sqr_feet_to_Meter='';
                                                 }
                                                 
                                                 
                                               $product_name=str_replace($thickness,'', $value->product_name);
                                               $product_name=str_replace($colors,'', $product_name);
                                               $product_name=str_replace($brand,'', $product_name);
                                               
                                               if($type==9)
                                               {  
                                                   $value->nos=$value->qty;

                                                   
                                               }
                                               
                                               $status="";
                                               if($value->assign_status==0)
                                               {
                                                   $status='In Production';
                                               }
                                               
                                               if($value->assign_status==11)
                                               {
                                                   $status='Sheet in Factory';
                                               }
                                               
                                               if($value->assign_status==12)
                                               {
                                                   $status='Sheet in Factory';
                                               }
                                               
                                               
                                               if($value->assign_status==1)
                                               {
                                                   $status='Transit';
                                               }
                                                  if($value->month=='')
                                                 {
                                                     $value->month=date('M',strtotime($value->create_date));
                                                 }
                                               
                                                $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'id' => $value->id, 
                                                    'order_id' => $value->order_id,
                                                    'month' => strtoupper($value->month), 
                                                    'order_no' => $value->order_no, 
                                                    'product_name' => $product_name,
                                                    'company_name' => $company_name,                            
                                                     'categories_name'=>$value->categories_name,
                                                    'uom' => $uom,
                                                    'salesperson' => $salesperson,
                                                    'sales_group' => $sales_group,
                                                     'status' => $status,
                                                    'rate' => $value->rate,
                                                    'profile' => $value->profile,
                                                    'brand' => $brand,
                                                    'colors' => $colors,
                                                    'thickness'=>$thickness,
                                                    'crimp' => $value->crimp,
                                                    'remarks' => $value->reason,
                                                    'nos' =>  $value->nos,
                                                    'price' =>  $value->rate * $value->qty,
                                                    'Sqr_feet_to_Meter' => $value->Sqr_feet_to_Meter,
                                                    'qty' =>  $value->qty,
                                                    'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                                                    'count'=>count($resultcc)+count($resultccreturn),
                                                    'total' => round($value->total,2)
                                                    
                                                    
                        
                                                );
                                                
                                   


                        $i++;

                     }








   
                $resultreturn=$this->db->query("SELECT a.id,a.update_date,b.purchase_order_product_id,b.rate,a.order_id,a.remarks as reason,a.order_no as old_order_no,a.re_order_no as order_no,b.org_nos as nos,a.month,b.product_name,a.order_base,a.customer as customer_id,a.user_id,b.product_id,b.qty,b.qty*b.rate as total  FROM order_sales_return_complaints as a JOIN sales_return_products as b ON a.id=b.c_id  WHERE  a.deleteid=0 AND a.order_base='2'  AND a.driver_delivery_status=0 AND a.driver_return IN ('0','1','2') $stat2  ORDER BY a.id DESC");
                $resultreturn=$resultreturn->result();


              $arrayreturn=array();
              $k=$i;
              foreach ($resultreturn as  $value) {
                       
                       
                                                 $poin_to_member = $this->Main_model->where_names('customers','id',$value->customer_id);
                                                 foreach ($poin_to_member as $point)
                                                  {
                                                     $company_name = $point->company_name;
                                                     $sales_group = $point->sales_group;
                                                     $sales_team_id = $point->sales_team_id;
                                                    
                                                 }
                                                 
                                                 $sales_person= $this->Main_model->where_names('admin_users','id',$sales_team_id);
                     
                                                 foreach ($sales_person as $saleslist) {
                                                    $salesperson = $saleslist->name;
                                                 }
                                                 
                                                 $sales_group_list= $this->Main_model->where_names('sales_group','id',$sales_group);
                     
                                                 foreach ($sales_group_list as $salesgrouplist) {
                                                    $sales_group = $salesgrouplist->name;
                                                 }
                                                 
                                                 
                                                 $product_list= $this->Main_model->where_names('product_list','id',$value->product_id);
                     
                                                 foreach ($product_list as $pro_list) {
                                                    $brand = $pro_list->brand;
                                                    $thickness = $pro_list->thickness;
                                                    $colors=$pro_list->color;
                                                    $type=$pro_list->type;
                                                    $uom=$pro_list->uom;
                                                    $categories=$pro_list->categories;
                                                    
                                                 }
                                                 
                                                 
                                                 
                                                
                                                      if($thickness=='0')
                                                     {
                                                         $thickness='';
                                                     }
                                                     
                                                      if($colors=='0')
                                                     {
                                                         $colors='';
                                                     }
                                                     
                                                     
                                                        $value->Sqr_feet_to_Meter='';
                                                        $order_product= $this->Main_model->where_names('order_product_list_process_return_temp','id',$value->purchase_order_product_id);
                                                        foreach ($order_product as $list)
                                                        {
                                                             $value->profile=$list->profile;
                                                             $value->crimp=$list->crimp;
                                                             
                                                            
                                                         }
                                                         
                                                            if($value->profile=='0')
                                                             {
                                                                 $value->profile='';
                                                             }
                                                             if($value->nos=='0')
                                                             {
                                                                 $value->nos='';
                                                             }
                                                             if($value->crimp=='0')
                                                             {
                                                                 $value->crimp='';
                                                             }
                                                             
                                                 
                                                     
                                                     
                                                 
                                                 
                                               $product_name=str_replace($thickness,'', $value->product_name);
                                               $product_name=str_replace($colors,'', $product_name);
                                               $product_name=str_replace($brand,'', $product_name);
                                               
                                               if($type==9)
                                               {  
                                                      $value->nos=$value->qty;

                                                   
                                               }
                                               
                                               $status="";
                                               $status='In Production Return ';
                                               
                                               
                                              
                                             
                                                  if($value->month=='')
                                                 {
                                                     $value->month=date('M',strtotime($value->update_date));
                                                 }
                                               
                                                $arrayreturn[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'id' => $value->id, 
                                                    'order_id' => $value->order_id,
                                                    'month' => strtoupper($value->month), 
                                                    'order_no' => $value->old_order_no, 
                                                    'product_name' => $product_name,
                                                    'company_name' => $company_name,                            
                                                     'categories_name'=>$categories,
                                                    'uom' => $uom,
                                                    'salesperson' => $salesperson,
                                                    'sales_group' => $sales_group,
                                                     'status' => $status,
                                                    'rate' => $value->rate,
                                                    'profile' => $value->profile,
                                                    'brand' => $brand,
                                                    'colors' => $colors,
                                                    'thickness'=>$thickness,
                                                    'crimp' => $value->crimp,
                                                    'remarks' => $value->reason,
                                                    'nos' =>  $value->nos,
                                                    'Sqr_feet_to_Meter' => $value->Sqr_feet_to_Meter,
                                                    'qty' =>  $value->qty,
                                                    'create_date' =>date('d-m-Y',strtotime($value->update_date)),
                                                    'count'=>count($resultcc)+count($resultccreturn),
                                                    'total' => round($value->total,2)
                                                    
                                                    
                        
                                                );
                                                
                                   


                        $k++;

                     }


                $fullarray=array_merge($array,$arrayreturn);


              echo json_encode($fullarray);

    }
    
    
    
    
    
    
         public function sheet_in_factory_report_data()
    {

                    
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                     $stat="";
                    
                     $stat=" AND a.assign_status IN('11','12','1','0','2')";
                     $statds=" AND ds.assign_status IN('11','12','1','0','2')";
                     $stat2="";
                     $search='';
                     if($cateid!='') 
                     {
                         $stat.=' AND a.order_no="'.$cateid.'"';
                         $stat2.=' AND a.order_no="'.$cateid.'"';
                     }
                     else
                     {
                         $statds.=" AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ";
                         $stat2.=" AND a.invoice_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     }
                                          
                   
                     $userslog="";
                  
                    
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                              $stat2.= ' AND  a.user_id IN (' . $sales_team_id . ')';
                          
                           
                                 
                    }
                    
                     if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';  
                          $stat2.= ' AND  a.user_id IN (' . $this->userid . ')';       
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                            
                           
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
            
                            
                            
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                           $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                             $stat2.= ' AND  a.user_id IN (' . $sales_team_id . ')'; 
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  a.sales_group IN ('.$sales_team_id.')';  

                         
                         
                                 
                    }
                    
                     
                     
                     
                     
                     
                     
                     
                    
               
                $resultccreturn=$this->db->query("SELECT b.return_delivered_nos,b.return_delivered_qty,b.return_qty_pick,b.return_no_pick,b.return_picked,a.id,a.update_date,b.purchase_order_product_id,b.rate,a.order_id,a.remarks as reason,a.order_no as old_order_no,a.re_order_no as order_no,b.org_qty,b.edit_nos as nos,a.month,b.product_name,a.order_base,a.customer as customer_id,a.user_id,b.product_id,b.qty,a.bill_total as total  FROM order_sales_return_complaints as a JOIN sales_return_products as b ON a.id=b.c_id  WHERE  a.deleteid=0 AND a.order_base='2'  AND a.driver_delivery_status IN ('0','1') AND a.remarks NOT IN ('Driver Delivered The Order') AND a.driver_return IN ('0','1') $stat2  GROUP BY a.id ORDER BY a.id DESC");
                $resultccreturn=$resultccreturn->result();       
                   
                $resultcc=$this->db->query("SELECT b.picked_status,ds.randam_id,b.id as order_product_id,ds.assign_status,b.sub_product_id,b.remarks,b.profile,b.crimp,b.Sqr_feet_to_Meter,b.order_id,b.nos,a.order_no,a.sales_group,ds.reason,a.user_id,a.customer_id,a.month,a.create_date,b.product_name,b.product_id,b.categories_id,b.categories_name,b.rate,b.qty,b.amount as total ,b.qty*b.rate as total_val FROM


                          order_delivery_order_status as ds JOIN
                          order_product_list_process as b ON b.order_id=ds.order_id JOIN
                          orders_process as a ON a.id=ds.order_id 

                WHERE   b.deleteid=0 AND a.deleteid=0  AND a.order_base>0 AND  ds.finance_status NOT IN ('10','4','5','6','14','11')  $statds $userslog GROUP BY a.id HAVING total_val > 0  ORDER BY b.order_id DESC, b.id ASC");
                $resultcc=$resultcc->result(); 
   



                $result=$this->db->query("SELECT ds.return_id,b.picked_status,ds.randam_id,b.id as order_product_id,ds.assign_status,b.sub_product_id,b.remarks,b.profile,b.crimp,b.Sqr_feet_to_Meter,b.order_id,b.nos,a.order_no,a.sales_group,ds.reason,a.user_id,a.customer_id,a.month,a.create_date,b.product_name,b.product_id,b.categories_id,b.categories_name,b.rate,b.qty,b.amount as total ,b.qty*b.rate as total_val FROM


                          order_delivery_order_status as ds JOIN
                          order_product_list_process as b ON b.order_id=ds.order_id JOIN
                          orders_process as a ON a.id=ds.order_id 

                WHERE   b.deleteid=0 AND a.deleteid=0  AND a.order_base>0 AND  ds.finance_status NOT IN ('10','4','5','6','14','11')  $statds $userslog GROUP BY b.id HAVING total_val > 0  ORDER BY b.order_id DESC, b.id ASC");
                    $result=$result->result();
                   //AND ds.order_no='JAN/29'
                $i=1;
                $array=array();
                      
                foreach ($result as  $value) {



                   $reasonfirst=$value->reason;

                   $bill_nos=$value->nos;
                   $bill_qty=$value->qty;
                       
                       
                                                 $poin_to_member = $this->Main_model->where_names('customers','id',$value->customer_id);
                                                 foreach ($poin_to_member as $point) {
                                                    $company_name = $point->company_name;
                                                 }
                                                 
                                                 $sales_person= $this->Main_model->where_names('admin_users','id',$value->user_id);
                     
                                                 foreach ($sales_person as $saleslist) {
                                                    $salesperson = $saleslist->name;
                                                 }
                                                 
                                                       $sales_group_list= $this->Main_model->where_names('sales_group','id',$value->sales_group);
                     
                                                 foreach ($sales_group_list as $salesgrouplist) {
                                                    $sales_group = $salesgrouplist->name;
                                                 }
                                                 
                                                 
                                                 $product_list= $this->Main_model->where_names('product_list','id',$value->product_id);
                     
                                                 foreach ($product_list as $pro_list) {
                                                    $brand = $pro_list->brand;
                                                    $thickness = $pro_list->thickness;
                                                    $colors=$pro_list->color;
                                                    $type=$pro_list->type;
                                                    $uom=$pro_list->uom;
                                                    
                                                 }
                                                 
                                                 if($value->sub_product_id>0)
                                                 {
                                                     
                                                 
                                                     $product_list= $this->Main_model->where_names('product_list','id',$value->sub_product_id);
                         
                                                     foreach ($product_list as $pro_list) {
                                                        $brand = $pro_list->brand;
                                                        $thickness = $pro_list->thickness;
                                                        $colors=$pro_list->color;
                                                        
                                                     }
                                                 
                                                 }
                                                 
                                                 
                                                 if($value->crimp=='0')
                                                 {
                                                     $value->crimp='';
                                                 }
                                                 
                                                  if($thickness=='0')
                                                 {
                                                     $thickness='';
                                                 }
                                                 
                                                  if($colors=='0')
                                                 {
                                                     $colors='';
                                                 }
                                                 
                                                  if($value->profile=='0')
                                                 {
                                                     $value->profile='';
                                                 }
                                                 if($value->nos=='0')
                                                 {
                                                     $value->nos='';
                                                 }
                                                 if($value->crimp=='0')
                                                 {
                                                     $value->crimp='';
                                                 }
                                                 
                                                     if($value->Sqr_feet_to_Meter=='0')
                                                 {
                                                     $value->Sqr_feet_to_Meter='';
                                                 }
                                                 
                                                 
                                               $product_name=str_replace($thickness,'', $value->product_name);
                                               $product_name=str_replace($colors,'', $product_name);
                                               $product_name=str_replace($brand,'', $product_name);



     
                                                
                                               
                                                if($type==9)
                                                {  
                                                   $value->nos=$value->qty;

                                                   
                                                }
                                               
                                               $status="";
                                               if($value->assign_status==0)
                                               {


                                                        if($value->return_id>0)
                                                        {
                                                             $status='In Production Return';
                                                        }
                                                        else
                                                        {
                                                             $status='In Production';
                                                        }
                                                   

                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }


                                               }
                                               
                                               if($value->assign_status==11)
                                               {
                                                    if($value->picked_status==0)
                                                    {
                                                        $status='In Production';
                                                    }
                                                    else
                                                    {
                                                        $status='Sheet in Factory';
                                                    }
                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }

                                                   
                                               }
                                               
                                               if($value->assign_status==12)
                                               {

                                                       
                                                                if($value->picked_status==0)
                                                                {
                                                                    $status='In Production';
                                                                }
                                                                else
                                                                {
                                                                    $status='Sheet in Factory';
                                                                }
                                                                if($value->picked_status==0)
                                                                {
                                                                    $value->reason='Pick Pending';
                                                                }

                                                      
                                                   
                                               }
                                               
                                               
                                               if($value->assign_status==1)
                                               {

                                                    if($value->picked_status==0)
                                                    {
                                                        $status='In Production';
                                                    }
                                                    else
                                                    {
                                                        $status='Sheet in Factory';
                                                    }
                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }

                                               }


                                               if($value->assign_status==2)
                                               {

                                                    if($value->picked_status==0)
                                                    {
                                                        $status='In Production';
                                                    }
                                                    else
                                                    {
                                                        $status='Sheet in Factory';
                                                    }
                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }

                                               }


                                               if($value->month=='')
                                               {
                                                     $value->month=date('M',strtotime($value->create_date));
                                               }








     $base_check=0;
    
     $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE randam_id='".$value->randam_id."' AND  order_product_id='".$value->order_product_id."'");
     $vvs=$vvs->result();

        if(count($vvs)>0)
        {

                  foreach ($vvs as  $ssvs)
                  {



                                


                                $value->qty=$ssvs->qty;
                                $value->total=$ssvs->amount;
                                $value->nos=$ssvs->nos;

                                  

                                  $loadstatus=$ssvs->loadstatus;
                                  $dispatch_load=$ssvs->dispatch_load;
                                  $trip_started_status=$ssvs->dispatch_load;
                                  if($loadstatus==1)
                                  {
                                           
                                    $status='Sheet in Factory';
                                    $value->reason=$reasonfirst;

                                  }

                                  if($loadstatus==1 && $trip_started_status==1)
                                  {
                                           
                                    $status='Transit';
                                    $value->reason=$reasonfirst;

                                  }


                                 



                 }



        } 
        else
        {


             $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE order_product_id='".$value->order_product_id."' AND randam_id IS NULL ");
             $vvs=$vvs->result();

                if(count($vvs)>0)
                {

                          foreach ($vvs as  $ssvs)
                          {


                                        $value->qty=round($ssvs->qty,2);
                                        $value->total=round($ssvs->amount,2);
                                        $value->nos=round($ssvs->nos,2);



                         }



                } 
                else
                {

                         
                          $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE order_product_id='".$value->order_product_id."' AND randam_id IS NOT NULL ");
                          $vvs=$vvs->result();
                          foreach ($vvs as  $ssvs)
                          {


                                        $value->qty=round($value->qty-$ssvs->qty,2);
                                        $value->total=round($value->total-$ssvs->amount,2);
                                        $value->nos=round($value->nos-$ssvs->nos,2);



                         }

                }


        }   


                          $dis_qty=0;
                          $dis_nos=0;
                          $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE order_product_id='".$value->order_product_id."' AND randam_id IS NOT NULL ");
                          $vvs=$vvs->result();
                          foreach ($vvs as  $ssvsss)
                          {



                                          $loadstatus=$ssvsss->loadstatus;
                                          $dispatch_load=$ssvsss->dispatch_load;
                                          $driver_confirmation=$ssvsss->driver_confirmation;
                                          $trip_started_status=$ssvsss->trip_started_status;
                                          $delivered_products=$ssvsss->delivered_products;
                                     

                                          if($loadstatus==1 && $dispatch_load==1 && $driver_confirmation==1 && $trip_started_status==1)
                                          {
                                                   
                                            $dis_qty+=$ssvsss->qty;
                                            $dis_nos+=$ssvsss->nos;

                                          }


                         }





                                                 
                                                if($value->create_date > '2024-05-31')
                                                {
                                                    $roundAmount = round($value->total * 1.18);
                                                }
                                                else
                                                {
                                                   $roundAmount =  round($value->total);
                                                }


                                                if($roundAmount>0)
                                                {

                                                
                                                $pending_qty=round($bill_qty-$value->qty-$dis_qty,3);
                                                $pending_nos=$bill_nos-$value->nos-$dis_nos;

                                                
          
                                                $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'id' => $value->id, 
                                                    'order_id' => $value->order_id,
                                                    'bill_nos' => $bill_nos,
                                                    'bill_qty' => $bill_qty,
                                                    'pending_nos' => $pending_nos,
                                                    'pending_qty' => $pending_qty,
                                                    'month' => strtoupper($value->month), 
                                                    'order_no' => $value->order_no, 
                                                    'product_name' => $product_name,
                                                    'company_name' => $company_name,                            
                                                     'categories_name'=>$value->categories_name,
                                                    'uom' => $uom,
                                                    'salesperson' => $salesperson,
                                                    'sales_group' => $sales_group,
                                                    'status' => $status,
                                                    'rate' => $value->rate,
                                                    'profile' => $value->profile,
                                                    'brand' => $brand,
                                                    'colors' => $colors,
                                                    'thickness'=>$thickness,
                                                    'crimp' => $value->crimp,
                                                    'remarks' => $value->reason,
                                                    'nos' =>  $value->nos,
                                                    'price' =>  round($value->rate * $value->qty,2),
                                                    'Sqr_feet_to_Meter' => $value->Sqr_feet_to_Meter,
                                                    'qty' =>  round($value->qty,3),
                                                    'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                                                    'count'=>count($resultcc)+count($resultccreturn),
                                                    'total' => round($value->total,2),
                                                    "amount" => $roundAmount,
                                                    
                                                    
                        
                                                );
                                                
                                   


                                                $i++;


                                                }

                     }








   
                $resultreturn=$this->db->query("SELECT b.edit_nos,b.qty as returnqty,b.return_delivered_nos,b.return_delivered_qty,b.return_qty_pick,b.return_no_pick,b.return_picked,a.id,a.update_date,b.purchase_order_product_id,b.rate,a.order_id,a.remarks as reason,a.order_no as old_order_no,a.re_order_no as order_no,b.org_qty,b.edit_nos as nos,a.month,b.product_name,a.order_base,a.customer as customer_id,a.user_id,b.product_id,b.qty,a.bill_total as total  FROM order_sales_return_complaints as a JOIN sales_return_products as b ON a.id=b.c_id  WHERE  a.deleteid=0 AND a.order_base='2'  AND a.driver_delivery_status IN ('0','1') AND a.remarks NOT IN ('Driver Delivered The Order') AND a.driver_return IN ('0','1') $stat2  ORDER BY a.id DESC");
                $resultreturn=$resultreturn->result();


              $arrayreturn=array();
              $k=$i;
              foreach ($resultreturn as  $value) {
                       
                       

                       

                               $return_no_pick=$value->return_no_pick;
                               $return_qty_pick=$value->return_qty_pick;

                               $bill_nos=$value->edit_nos;
                               $bill_qty=$value->returnqty;


                               //if($return_qty_pick!=$value->org_qty)
                               //{
                                         

                                         if($value->return_delivered_qty>0)
                                         {

                                             $value->nos=$value->nos-$value->return_delivered_nos;
                                             $value->qty=round($value->qty-$value->return_delivered_qty,3);

                                         }
                                         else
                                         {
                                             $value->nos=$value->nos-$return_no_pick;
                                             $value->qty=round($value->qty-$return_qty_pick,3);

                                         }
                               

                                        

                                                 $poin_to_member = $this->Main_model->where_names('customers','id',$value->customer_id);
                                                 foreach ($poin_to_member as $point)
                                                  {
                                                     $company_name = $point->company_name;
                                                     $sales_group = $point->sales_group;
                                                     $sales_team_id = $point->sales_team_id;
                                                    
                                                 }
                                                 
                                                 $sales_person= $this->Main_model->where_names('admin_users','id',$sales_team_id);
                     
                                                 foreach ($sales_person as $saleslist) {
                                                    $salesperson = $saleslist->name;
                                                 }
                                                 
                                                 $sales_group_list= $this->Main_model->where_names('sales_group','id',$sales_group);
                     
                                                 foreach ($sales_group_list as $salesgrouplist) {
                                                    $sales_group = $salesgrouplist->name;
                                                 }
                                                 
                                                 
                                                 $product_list= $this->Main_model->where_names('product_list','id',$value->product_id);
                     
                                                 foreach ($product_list as $pro_list) {
                                                    $brand = $pro_list->brand;
                                                    $thickness = $pro_list->thickness;
                                                    $colors=$pro_list->color;
                                                    $type=$pro_list->type;
                                                    $uom=$pro_list->uom;
                                                    $categories=$pro_list->categories;
                                                    
                                                 }
                                                 
                                                 
                                                 
                                                
                                                      if($thickness=='0')
                                                     {
                                                         $thickness='';
                                                     }
                                                     
                                                      if($colors=='0')
                                                     {
                                                         $colors='';
                                                     }
                                                     
                                                     
                                                        $value->Sqr_feet_to_Meter='';
                                                        $order_product= $this->Main_model->where_names('order_product_list_process_return_temp','id',$value->purchase_order_product_id);
                                                        foreach ($order_product as $list)
                                                        {
                                                             $value->profile=$list->profile;
                                                             $value->crimp=$list->crimp;
                                                             
                                                            
                                                         }
                                                         
                                                            if($value->profile=='0')
                                                             {
                                                                 $value->profile='';
                                                             }
                                                             if($value->nos=='0')
                                                             {
                                                                 $value->nos='';
                                                             }
                                                             if($value->crimp=='0')
                                                             {
                                                                 $value->crimp='';
                                                             }
                                                             
                                                 
                                                     
                                                     
                                                 
                                                 
                                               $product_name=str_replace($thickness,'', $value->product_name);
                                               $product_name=str_replace($colors,'', $product_name);
                                               $product_name=str_replace($brand,'', $product_name);
                                               
                                               if($type==9)
                                               {  
                                                      $value->nos=$value->qty;

                                                   
                                               }
                                               
                                                 $status="";
                                                 $status='In Production Return ';
                                               
                                               
                                              
                                             
                                                  if($value->month=='')
                                                 {
                                                     $value->month=date('M',strtotime($value->update_date));
                                                 }

                                                 if($value->reason=='Driver Return to Sales')
                                                 {
                                                    $value->reason='Driver Return to Sales / Second Pick';
                                                 }

                                                 if($value->return_picked==0)
                                                 {
                                                     $value->reason='Return Pick Pending';
                                                 }
                                                 if($value->return_picked==1)
                                                 {
                                                     if($return_qty_pick!=$value->org_qty)
                                                     {
                                                        $value->reason='Return Picked Partial Pending';
                                                     }
                                                     else
                                                     {
                                                        $value->reason='Return Picked';
                                                     }
                                                 }


$pending_nos=$bill_nos-$return_no_pick;
$pending_qty=$bill_qty-$return_qty_pick;

if($return_no_pick<=0)
{
    $return_no_pick=$value->edit_nos;
    $pending_nos=0;
    $return_qty_pick=$value->qty;
   
}

                                               
                                                $arrayreturn[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'id' => $value->id, 
                                                    'order_id' => $value->order_id,
                                                    'month' => strtoupper($value->month), 
                                                    'bill_nos' => $bill_nos,
                                                    'bill_qty' => $bill_qty,
                                                    'pending_nos' => $pending_nos,
                                                    'pending_qty' => $pending_qty,
                                                    'order_no' => $value->old_order_no, 
                                                    'product_name' => $product_name,
                                                    'company_name' => $company_name,                            
                                                     'categories_name'=>$categories,
                                                    'uom' => $uom,
                                                    'salesperson' => $salesperson,
                                                    'sales_group' => $sales_group,
                                                     'status' => $status,
                                                    'rate' => $value->rate,
                                                    'price' =>  round($value->rate * $return_qty_pick,2),
                                                    'profile' => $value->profile,
                                                    'brand' => $brand,
                                                    'colors' => $colors,
                                                    'thickness'=>$thickness,
                                                    'crimp' => $value->crimp,
                                                    'remarks' => $value->reason,
                                                    'nos' =>  $return_no_pick,
                                                    'Sqr_feet_to_Meter' => $value->Sqr_feet_to_Meter,
                                                    'qty' =>  $value->qty,
                                                    'create_date' =>date('d-m-Y',strtotime($value->update_date)),
                                                    'count'=>count($resultcc)+count($resultccreturn),
                                                    'amount' => round($value->total)
                                                    
                                                    
                        
                                                );
                                                



                        $k++;
             
                        //}

                     }


               $fullarray=array_merge($array,$arrayreturn);
               //usort($fullarray, function($a, $b) 
               //{
                    //return strcmp($a['order_id'], $b['order_id']); // String comparison for order_no
               //});
               echo json_encode($fullarray);

    }
    
    
    
    
    
       
         public function sheet_in_factory_report_data_export()
    {

                    
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                     $stat="";
                    
                     $stat=" AND a.assign_status IN('11','12','1','0','2')";
                     $statds=" AND ds.assign_status IN('11','12','1','0','2')";
                   
                     if($cateid!='') 
                     {
                         $stat.=' AND a.order_no="'.$cateid.'"';
                         $stat2.=' AND a.order_no="'.$cateid.'"';
                     }
                     else
                     {
                         $statds.=" AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ";
                         $stat2.=" AND a.invoice_date BETWEEN '".$formdate."' AND '".$todate."' ";
                     }
                                          
                   
                     $userslog="";
                  
                    
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                                $stat2.= ' AND  a.user_id IN (' . $sales_team_id . ')';
                            
                           
                          
                           
                                 
                    }
                    
                     if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"'; 
                          $stat2.= ' AND  a.user_id IN (' . $this->userid . ')';       
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                            
                           
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
            
                            
                            
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                           $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   

                           $stat2.= ' AND  a.user_id IN (' . $sales_team_id . ')';
                          
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  a.sales_group IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                     
                     
                     
                     
                     
                     
                      
                    
               

                $resultccreturn=$resultccreturn->result();       
                   
                $resultcc=$this->db->query("SELECT b.picked_status,ds.randam_id,b.id as order_product_id,ds.assign_status,b.sub_product_id,b.remarks,b.profile,b.crimp,b.Sqr_feet_to_Meter,b.order_id,b.nos,a.order_no,a.sales_group,ds.reason,a.user_id,a.customer_id,a.month,a.create_date,b.product_name,b.product_id,b.categories_id,b.categories_name,b.rate,b.qty,b.amount as total ,b.qty*b.rate as total_val FROM


                          order_delivery_order_status as ds JOIN
                          order_product_list_process as b ON b.order_id=ds.order_id JOIN
                          orders_process as a ON a.id=ds.order_id 

                WHERE   b.deleteid=0 AND a.deleteid=0  AND a.order_base>0 AND  ds.finance_status NOT IN ('10','4','5','6','14','11')  $statds $userslog GROUP BY a.id HAVING total_val > 0  ORDER BY b.order_id DESC, b.id ASC");
                $resultcc=$resultcc->result(); 
   
      
              
                $result=$this->db->query("SELECT ds.return_id,b.picked_status,ds.randam_id,b.id as order_product_id,ds.assign_status,b.sub_product_id,b.remarks,b.profile,b.crimp,b.Sqr_feet_to_Meter,b.order_id,b.nos,a.order_no,a.sales_group,ds.reason,a.user_id,a.customer_id,a.month,a.create_date,b.product_name,b.product_id,b.categories_id,b.categories_name,b.rate,b.qty,b.amount as total ,b.qty*b.rate as total_val FROM


                          order_delivery_order_status as ds JOIN
                          order_product_list_process as b ON b.order_id=ds.order_id JOIN
                          orders_process as a ON a.id=ds.order_id 

                WHERE   b.deleteid=0 AND a.deleteid=0  AND a.order_base>0 AND  ds.finance_status NOT IN ('10','4','5','6','14','11')  $statds $userslog GROUP BY b.id HAVING total_val > 0  ORDER BY a.id DESC");
                    $result=$result->result();
                
                   
                $i=1;
                $array=array();
                      
                foreach ($result as  $value) {
                       
              $reasonfirst=$value->reason;

                   $bill_nos=$value->nos;
                   $bill_qty=$value->qty;
                       
                       
                                                 $poin_to_member = $this->Main_model->where_names('customers','id',$value->customer_id);
                                                 foreach ($poin_to_member as $point) {
                                                    $company_name = $point->company_name;
                                                 }
                                                 
                                                 $sales_person= $this->Main_model->where_names('admin_users','id',$value->user_id);
                     
                                                 foreach ($sales_person as $saleslist) {
                                                    $salesperson = $saleslist->name;
                                                 }
                                                 
                                                       $sales_group_list= $this->Main_model->where_names('sales_group','id',$value->sales_group);
                     
                                                 foreach ($sales_group_list as $salesgrouplist) {
                                                    $sales_group = $salesgrouplist->name;
                                                 }
                                                 
                                                 
                                                 $product_list= $this->Main_model->where_names('product_list','id',$value->product_id);
                     
                                                 foreach ($product_list as $pro_list) {
                                                    $brand = $pro_list->brand;
                                                    $thickness = $pro_list->thickness;
                                                    $colors=$pro_list->color;
                                                    $type=$pro_list->type;
                                                    $uom=$pro_list->uom;
                                                    
                                                 }
                                                 
                                                 if($value->sub_product_id>0)
                                                 {
                                                     
                                                 
                                                     $product_list= $this->Main_model->where_names('product_list','id',$value->sub_product_id);
                         
                                                     foreach ($product_list as $pro_list) {
                                                        $brand = $pro_list->brand;
                                                        $thickness = $pro_list->thickness;
                                                        $colors=$pro_list->color;
                                                        
                                                     }
                                                 
                                                 }
                                                 
                                                 
                                                 if($value->crimp=='0')
                                                 {
                                                     $value->crimp='';
                                                 }
                                                 
                                                  if($thickness=='0')
                                                 {
                                                     $thickness='';
                                                 }
                                                 
                                                  if($colors=='0')
                                                 {
                                                     $colors='';
                                                 }
                                                 
                                                  if($value->profile=='0')
                                                 {
                                                     $value->profile='';
                                                 }
                                                 if($value->nos=='0')
                                                 {
                                                     $value->nos='';
                                                 }
                                                 if($value->crimp=='0')
                                                 {
                                                     $value->crimp='';
                                                 }
                                                 
                                                     if($value->Sqr_feet_to_Meter=='0')
                                                 {
                                                     $value->Sqr_feet_to_Meter='';
                                                 }
                                                 
                                                 
                                               $product_name=str_replace($thickness,'', $value->product_name);
                                               $product_name=str_replace($colors,'', $product_name);
                                               $product_name=str_replace($brand,'', $product_name);



     
                                                
                                               
                                                if($type==9)
                                                {  
                                                   $value->nos=$value->qty;

                                                   
                                                }
                                               
                                               $status="";
                                               if($value->assign_status==0)
                                               {

                                                        if($value->return_id>0)
                                                        {
                                                             $status='In Production Return';
                                                        }
                                                        else
                                                        {
                                                             $status='In Production';
                                                        }
                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }


                                               }
                                               
                                               if($value->assign_status==11)
                                               {
                                                    if($value->picked_status==0)
                                                    {
                                                        $status='In Production';
                                                    }
                                                    else
                                                    {
                                                        $status='Sheet in Factory';
                                                    }
                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }

                                                   
                                               }
                                               
                                               if($value->assign_status==12)
                                               {

                                                       
                                                                if($value->picked_status==0)
                                                                {
                                                                    $status='In Production';
                                                                }
                                                                else
                                                                {
                                                                    $status='Sheet in Factory';
                                                                }
                                                                if($value->picked_status==0)
                                                                {
                                                                    $value->reason='Pick Pending';
                                                                }

                                                      
                                                   
                                               }
                                               
                                               
                                               if($value->assign_status==1)
                                               {

                                                    if($value->picked_status==0)
                                                    {
                                                        $status='In Production';
                                                    }
                                                    else
                                                    {
                                                        $status='Sheet in Factory';
                                                    }
                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }

                                               }

                                               if($value->assign_status==2)
                                               {

                                                    if($value->picked_status==0)
                                                    {
                                                        $status='In Production';
                                                    }
                                                    else
                                                    {
                                                        $status='Sheet in Factory';
                                                    }
                                                    if($value->picked_status==0)
                                                    {
                                                        $value->reason='Pick Pending';
                                                    }

                                               }

                                               
                                                  if($value->month=='')
                                                 {
                                                     $value->month=date('M',strtotime($value->create_date));
                                                 }








     $base_check=0;
    
     $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE randam_id='".$value->randam_id."' AND  order_product_id='".$value->order_product_id."'");
     $vvs=$vvs->result();

        if(count($vvs)>0)
        {

                  foreach ($vvs as  $ssvs)
                  {



                                


                                $value->qty=$ssvs->qty;
                                $value->total=$ssvs->amount;
                                $value->nos=$ssvs->nos;

                                  

                                  $loadstatus=$ssvs->loadstatus;
                                  $dispatch_load=$ssvs->dispatch_load;
                                  $trip_started_status=$ssvs->trip_started_status;
                                  if($loadstatus==1)
                                  {
                                           
                                    $status='Sheet in Factory';
                                    $value->reason=$reasonfirst;

                                  }

                                    if($loadstatus==1 && $trip_started_status==1)
                                  {
                                           
                                    $status='Transit';
                                    $value->reason=$reasonfirst;

                                  }



                                 



                 }



        } 
        else
        {


             $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE order_product_id='".$value->order_product_id."' AND randam_id IS NULL ");
             $vvs=$vvs->result();

                if(count($vvs)>0)
                {

                          foreach ($vvs as  $ssvs)
                          {


                                        $value->qty=round($ssvs->qty,2);
                                        $value->total=round($ssvs->amount,2);
                                        $value->nos=round($ssvs->nos,2);



                         }



                } 
                else
                {

                         
                          $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE order_product_id='".$value->order_product_id."' AND randam_id IS NOT NULL ");
                          $vvs=$vvs->result();
                          foreach ($vvs as  $ssvs)
                          {


                                        $value->qty=round($value->qty-$ssvs->qty,2);
                                        $value->total=round($value->total-$ssvs->amount,2);
                                        $value->nos=round($value->nos-$ssvs->nos,2);



                         }

                }


        }   


                          $dis_qty=0;
                          $dis_nos=0;
                          $vvs=$this->db->query("SELECT * FROM sales_load_products WHERE order_product_id='".$value->order_product_id."' AND randam_id IS NOT NULL ");
                          $vvs=$vvs->result();
                          foreach ($vvs as  $ssvsss)
                          {



                                          $loadstatus=$ssvsss->loadstatus;
                                          $dispatch_load=$ssvsss->dispatch_load;
                                          $driver_confirmation=$ssvsss->driver_confirmation;
                                          $trip_started_status=$ssvsss->trip_started_status;
                                          $delivered_products=$ssvsss->delivered_products;
                                     

                                          if($loadstatus==1 && $dispatch_load==1 && $driver_confirmation==1 && $trip_started_status==1)
                                          {
                                                   
                                            $dis_qty+=$ssvsss->qty;
                                            $dis_nos+=$ssvsss->nos;

                                          }


                         }






                                                 
                                                if($value->create_date > '2024-05-31')
                                                {
                                                    $roundAmount = round($value->total * 1.18);
                                                }
                                                else
                                                {
                                                   $roundAmount =  round($value->total);
                                                }


                                           
                                                if($roundAmount>0)
                                                {

                                                
                                                $pending_qty=round($bill_qty-$value->qty-$dis_qty,3);
                                                $pending_nos=$bill_nos-$value->nos-$dis_nos;
                                 
                                                $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'id' => $value->id, 
                                                    'order_id' => $value->order_id,
                                                    'bill_nos' => $bill_nos,
                                                    'bill_qty' => $bill_qty,
                                                    'pending_nos' => $pending_nos,
                                                    'pending_qty' => $pending_qty,
                                                    'month' => strtoupper($value->month), 
                                                    'order_no' => $value->order_no, 
                                                    'product_name' => $product_name,
                                                    'company_name' => $company_name,                            
                                                     'categories_name'=>$value->categories_name,
                                                    'uom' => $uom,
                                                    'salesperson' => $salesperson,
                                                    'sales_group' => $sales_group,
                                                     'status' => $status,
                                                    'rate' => $value->rate,
                                                    'profile' => $value->profile,
                                                    'brand' => $brand,
                                                    'colors' => $colors,
                                                    'thickness'=>$thickness,
                                                    'crimp' => $value->crimp,
                                                    'remarks' => $value->reason,
                                                    'nos' =>  $value->nos,
                                                    'price' =>  round($value->rate * $value->qty,2),
                                                    'Sqr_feet_to_Meter' => $value->Sqr_feet_to_Meter,
                                                    'qty' =>  round($value->qty,3),
                                                    'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                                                    'count'=>count($resultcc)+count($resultccreturn),
                                                    'total' => round($value->total,2),
                                                    "amount" => $roundAmount,
                                                    
                                                    
                        
                                                );
                                                
                                   


                                                $i++;


                                                }

                     }








   
            
                $resultreturn=$this->db->query("SELECT b.edit_nos,b.qty as returnqty,b.return_delivered_nos,b.return_delivered_qty,b.return_qty_pick,b.return_no_pick,b.return_picked,a.id,a.update_date,b.purchase_order_product_id,b.rate,a.order_id,a.remarks as reason,a.order_no as old_order_no,a.re_order_no as order_no,b.org_qty,b.edit_nos as nos,a.month,b.product_name,a.order_base,a.customer as customer_id,a.user_id,b.product_id,b.qty,a.bill_total as total  FROM order_sales_return_complaints as a JOIN sales_return_products as b ON a.id=b.c_id  WHERE  a.deleteid=0 AND a.order_base='2'  AND a.driver_delivery_status IN ('0','1') AND a.remarks NOT IN ('Driver Delivered The Order') AND a.driver_return IN ('0','1') $stat2  ORDER BY a.id DESC");
                $resultreturn=$resultreturn->result();


              $arrayreturn=array();
              $k=$i;
              foreach ($resultreturn as  $value) {
                       
                       

                       

                               $return_no_pick=$value->return_no_pick;
                               $return_qty_pick=$value->return_qty_pick;

                               $bill_nos=$value->edit_nos;
                               $bill_qty=$value->returnqty;


                               //if($return_qty_pick!=$value->org_qty)
                               //{
                                         

                                         if($value->return_delivered_qty>0)
                                         {

                                             $value->nos=$value->nos-$value->return_delivered_nos;
                                             $value->qty=round($value->qty-$value->return_delivered_qty,3);

                                         }
                                         else
                                         {
                                             $value->nos=$value->nos-$return_no_pick;
                                             $value->qty=round($value->qty-$return_qty_pick,3);

                                         }
                               

                                        

                                                 $poin_to_member = $this->Main_model->where_names('customers','id',$value->customer_id);
                                                 foreach ($poin_to_member as $point)
                                                  {
                                                     $company_name = $point->company_name;
                                                     $sales_group = $point->sales_group;
                                                     $sales_team_id = $point->sales_team_id;
                                                    
                                                 }
                                                 
                                                 $sales_person= $this->Main_model->where_names('admin_users','id',$sales_team_id);
                     
                                                 foreach ($sales_person as $saleslist) {
                                                    $salesperson = $saleslist->name;
                                                 }
                                                 
                                                 $sales_group_list= $this->Main_model->where_names('sales_group','id',$sales_group);
                     
                                                 foreach ($sales_group_list as $salesgrouplist) {
                                                    $sales_group = $salesgrouplist->name;
                                                 }
                                                 
                                                 
                                                 $product_list= $this->Main_model->where_names('product_list','id',$value->product_id);
                     
                                                 foreach ($product_list as $pro_list) {
                                                    $brand = $pro_list->brand;
                                                    $thickness = $pro_list->thickness;
                                                    $colors=$pro_list->color;
                                                    $type=$pro_list->type;
                                                    $uom=$pro_list->uom;
                                                    $categories=$pro_list->categories;
                                                    
                                                 }
                                                 
                                                 
                                                 
                                                
                                                      if($thickness=='0')
                                                     {
                                                         $thickness='';
                                                     }
                                                     
                                                      if($colors=='0')
                                                     {
                                                         $colors='';
                                                     }
                                                     
                                                     
                                                        $value->Sqr_feet_to_Meter='';
                                                        $order_product= $this->Main_model->where_names('order_product_list_process_return_temp','id',$value->purchase_order_product_id);
                                                        foreach ($order_product as $list)
                                                        {
                                                             $value->profile=$list->profile;
                                                             $value->crimp=$list->crimp;
                                                             
                                                            
                                                         }
                                                         
                                                            if($value->profile=='0')
                                                             {
                                                                 $value->profile='';
                                                             }
                                                             if($value->nos=='0')
                                                             {
                                                                 $value->nos='';
                                                             }
                                                             if($value->crimp=='0')
                                                             {
                                                                 $value->crimp='';
                                                             }
                                                             
                                                 
                                                     
                                                     
                                                 
                                                 
                                               $product_name=str_replace($thickness,'', $value->product_name);
                                               $product_name=str_replace($colors,'', $product_name);
                                               $product_name=str_replace($brand,'', $product_name);
                                               
                                               if($type==9)
                                               {  
                                                      $value->nos=$value->qty;

                                                   
                                               }
                                               
                                                 $status="";
                                                 $status='In Production Return ';
                                               
                                               
                                              
                                             
                                                  if($value->month=='')
                                                 {
                                                     $value->month=date('M',strtotime($value->update_date));
                                                 }

                                                 if($value->reason=='Driver Return to Sales')
                                                 {
                                                    $value->reason='Driver Return to Sales / Second Pick';
                                                 }

                                                 if($value->return_picked==0)
                                                 {
                                                     $value->reason='Return Pick Pending';
                                                 }
                                                 if($value->return_picked==1)
                                                 {
                                                     if($return_qty_pick!=$value->org_qty)
                                                     {
                                                        $value->reason='Return Picked Partial Pending';
                                                     }
                                                     else
                                                     {
                                                        $value->reason='Return Picked';
                                                     }
                                                 }


$pending_nos=$bill_nos-$return_no_pick;
$pending_qty=$bill_qty-$return_qty_pick;

if($return_no_pick<=0)
{
    $return_no_pick=$value->edit_nos;
    $pending_nos=0;
    $return_qty_pick=$value->qty;
   
}

                                               
                                                $arrayreturn[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'id' => $value->id, 
                                                    'order_id' => $value->order_id,
                                                    'month' => strtoupper($value->month), 
                                                    'bill_nos' => $bill_nos,
                                                    'bill_qty' => $bill_qty,
                                                    'pending_nos' => $pending_nos,
                                                    'pending_qty' => $pending_qty,
                                                    'order_no' => $value->old_order_no, 
                                                    'product_name' => $product_name,
                                                    'company_name' => $company_name,                            
                                                     'categories_name'=>$categories,
                                                    'uom' => $uom,
                                                    'salesperson' => $salesperson,
                                                    'sales_group' => $sales_group,
                                                     'status' => $status,
                                                    'rate' => $value->rate,
                                                    'price' =>  round($value->rate * $return_qty_pick,2),
                                                    'profile' => $value->profile,
                                                    'brand' => $brand,
                                                    'colors' => $colors,
                                                    'thickness'=>$thickness,
                                                    'crimp' => $value->crimp,
                                                    'remarks' => $value->reason,
                                                    'nos' =>  $return_no_pick,
                                                    'Sqr_feet_to_Meter' => $value->Sqr_feet_to_Meter,
                                                    'qty' =>  $value->qty,
                                                    'create_date' =>date('d-m-Y',strtotime($value->update_date)),
                                                    'count'=>count($resultcc)+count($resultccreturn),
                                                    'amount' => round($value->total)
                                                    
                                                    
                        
                                                );
                                                



                        $k++;
             
                        //}

                     }



                $fullarray=array_merge($array,$arrayreturn);


           // usort($fullarray, function($a, $b) {
                    //return strcmp($a['order_id'], $b['order_id']); // String comparison for order_no
              // });
                     
                     
                     
                     
                     $count= $fullarray[0]['count'];
                    
                     
                        $filename='DELIVERY_PENDING_REPORT_'.$formdate; 
                        header("Content-Type: application/xls");    
                        header("Content-Disposition: attachment; filename=$filename.xls");  
                        header("Pragma: no-cache"); 
                        header("Expires: 0");

                  ?>
                 
                  <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                          
                        <tr><th colspan="22">DELIVERY PENDING REPORT <?php echo $formdate; ?> Total Order : <?php echo $count; ?></th></tr> 
                        <tr>


                          <th>NO</th>
                          <th>BILL DATE</th>
                          <th>MONTH</th>
                          <th>ORDER NO</th>
                          <th>CUSTOMER NAME</th>
                          <th>ITEMS</th>
                          <th>CATEGORY</th>


                          <th>COLOR</th>
                          <th>BRAND</th>
                          <th>THK</th>
                          <th>LENGTH</th>
                          <th>CRIMP</th>
                          <th>BILL NOS</th>
                          
                          <th>PARTIAL PICK PENDING NOS</th>
                          <th>NOS</th>
                          <!--<th>RN MTR</th>-->
                          <th>BILL QTY</th>
                          <th>PARTIAL PICK PENDING QTY</th>
                          <th>QTY</th> 
                          <th>TOTAL AMOUNT</th> 
                          <th>AMOUNT W/O GST</th>
                          <th>UOM</th>
                          <th>SALES PERSON</th>
                          <th>GROUP</th>
                          <th>STATUS</th>
                          <th>REMARKS</th>
            
                        </tr>
                      </thead>
                        <tbody   >
                            
                            <?php
                            $f=1;
                            foreach($fullarray as $names)
                            {
                                ?>
                         
                        <tr >
                          
                         <td><?php echo $f; ?></td>
                           <td><?php echo $names['create_date']; ?></td>
                           <td><?php echo $names['month']; ?></td>
                           <td>"<?php echo $names['order_no']; ?>"</td>
                           <td><?php echo $names['company_name']; ?></td>
                           <td><?php echo $names['product_name']; ?></td>
                            <td><?php echo $names['categories_name']; ?></td>
                           <td><?php echo $names['colors']; ?></td>
                            <td><?php echo $names['brand']; ?></td>
                            <td><?php echo $names['thickness']; ?></td>
                           <td><?php echo $names['profile']; ?></td>
                           <td><?php echo $names['crimp']; ?></td>
                           <td><?php echo $names['bill_nos']; ?></td>
                           <td><?php echo $names['pending_nos']; ?></td>
                           <td><?php echo $names['nos']; ?></td>
                           <!--<td><?php echo $names['Sqr_feet_to_Meter']; ?></td>-->
                           <td><?php echo $names['bill_qty']; ?></td>
                           <td><?php echo $names['pending_qty']; ?></td>
                           <td><?php echo $names['qty']; ?></td>
                            <td><?php echo $names['total']; ?></td>
                           <td><?php echo $names['price']; ?></td>
                            <td><?php echo $names['uom']; ?></td>
                           <td><?php echo $names['salesperson']; ?></td>
                           <td><?php echo $names['sales_group']; ?></td>
                                                               
                          <td><?php echo $names['status']; ?> </td>    
                           <td><?php echo $names['remarks']; ?> </td>
                           
                            
                        </tr>
                               
                                <?php
                                $f++;
                            }
                            
                            ?>
                        
                      
                      </tbody>
                    </table>
                  
                  <?php

    }
    
    
    
    
    public function fetch_data_get_ledger_view()
    {

                     $cateid=$_GET['cate_id'];
                     $order_id=$_GET['order_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $uom = isset($_GET['uom']) ? $_GET['uom'] : '';
                     $categorie_type = isset($_GET['categorie_type']) ? $_GET['categorie_type'] : '';
                     $material_type = isset($_GET['material_type']) ? $_GET['material_type'] : '';
                     $color = isset($_GET['color']) ? $_GET['color'] : '';
                     $thickness = isset($_GET['thickness']) ? $_GET['thickness'] : '';
                     $coating_mass = isset($_GET['coating_mass']) ? $_GET['coating_mass'] : '';
                     $yield_strength = isset($_GET['yield_strength']) ? $_GET['yield_strength'] : '';
                     $brand = isset($_GET['brand']) ? $_GET['brand'] : '';
                     $type = isset($_GET['type']) ? $_GET['type'] : 'product_id';
                    if($type == ''){
                     $type =  'product_id';

                    }

                     $stat="";
                     if($order_status!='ALL')
                     {
                          $stat=' AND a.finance_status="'.$order_status.'"';
                     }

                     $search='';
                     if($cateid!='ALL')
                     {
                         $stat.=' AND b.categories_id="'.$cateid.'"';
                     }

                    //  if($type !== ''){
                    //     $stat.=' AND b.'.$type.' =  b.product_id';
                    //  }

                    if($order_id!=0)
                     {


                          $order_id_set=base64_decode($order_id);
                          $order_id_set=explode(',', $order_id_set);
                          $order_id_set=implode('","', $order_id_set);
                          $stat.=' AND b.id IN ("'.$order_id_set.'")';
                          $stat2.=' AND a.id IN ("'.$order_id_set.'")';
                     }
                     else
                     {

                       $stat.=' AND a.create_date BETWEEN "' . $formdate . '" AND "' . $todate . '"';
                       $stat2.=' AND a.create_date BETWEEN "' . $formdate . '" AND "' . $todate . '"';

                     }



                     if (!empty($uom) && $uom !== 'ALL' && $uom !== 'undefined' && $uom !== '? undefined:undefined ?') {
                        $stat .= ' AND product_list.uom = "' . $uom . '"';
                    }

                    if (!empty($categorie_type) && $categorie_type !== 'ALL' && $categorie_type !== 'undefined' && $categorie_type !== '? undefined:undefined ?') {
                        $stat .= ' AND product_list.categorie_type LIKE "%' . $categorie_type . '%"';
                    }

                    if (!empty($material_type) && $material_type !== 'ALL' && $material_type !== 'undefined' && $material_type !== '? undefined:undefined ?') {
                        $stat .= ' AND product_list.material_type = "' . $material_type . '"';
                    }

                    if (!empty($color) && $color !== 'ALL' && $color !== 'undefined' && $color !== '? undefined:undefined ?') {
                        $stat .= ' AND product_list.color LIKE "%' . $color . '%"';
                    }

                    if (!empty($thickness) && $thickness !== 'ALL' && $thickness !== 'undefined' && $thickness !== '? undefined:undefined ?') {
                        $stat .= ' AND product_list.thickness LIKE "%' . $thickness . '%"';
                    }

                    if (!empty($coating_mass) && $coating_mass !== 'ALL' && $coating_mass !== 'undefined' && $coating_mass !== '? undefined:undefined ?') {
                        // Remove 'YS' and any extra spaces
                        $search_term = preg_replace('/^(AZ|Z)\s*/i', '', $coating_mass);
                        // Replace any spaces with wildcard '%' to handle space variations
                        $search_term = str_replace(' ', '%', $search_term);
                        $stat .= ' AND product_list.coating_mass LIKE "%' . $search_term . '%"';
                        // $stat .= ' AND product_list.gsm LIKE "%' . $coating_mass . '%"';
                    }

                    if (!empty($yield_strength) && $yield_strength !== 'ALL' && $yield_strength !== 'undefined' && $yield_strength !== '? undefined:undefined ?') {
                        // Remove 'YS' and any extra spaces
                        $search_term = preg_replace('/YS\s*/i', '', $yield_strength);
                        // Replace any spaces with wildcard '%' to handle space variations
                        $search_term = str_replace(' ', '%', $search_term);
                        $stat .= ' AND product_list.yield_strength LIKE "%' . $search_term . '%"';
                    }

                    if (!empty($brand) && $brand !== 'ALL' && $brand !== 'undefined' && $brand !== '? undefined:undefined ?') {
                        $stat .= ' AND product_list.brand LIKE "%' . $brand . '%"';
                    }




                     $userslog="";


                     if($this->session->userdata['logged_in']['access']=='17')
                    {

                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';



                    }

                     if($this->session->userdata['logged_in']['access']=='20')
                    {

                         $userslog.=' AND a.user_id="'.$this->userid.'"';

                    }

                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {



                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }



                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }




                           $sales_team_id="'".implode("','", $sales_team_id)."'";

                           $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';



                    }


                    if($this->session->userdata['logged_in']['access']=='16')
                    {

                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {

                              $sales_team_id[]=$values->id;

                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  a.sales_group IN ('.$sales_team_id.')';

                    }


                   
                 

                     if ($_GET['formdate'] == 'undefined' || $_GET['formdate']=='') {
                        $formdate = date('Y-m-d');
                        $todate = date('Y-m-d');
                        $result = $this->db->query("
                                                    SELECT
                                                        a.order_no,
                                                        a.id,
                                                        a.create_date,
                                                        b.categories_id,
                                                        b.categories_name,
                                                        b.product_id,
                                                        b.product_name,
                                                        b.rate,
                                                        b.fact,
                                                        b.fact_old,
                                                        SUM(b.qty) as qty,
                                                        SUM(b.qty * b.rate) as total,
                                                        product_list.uom,
                                                        product_list.categorie_type
                                                    FROM orders_process as a
                                                    JOIN order_product_list_process as b ON a.id = b.order_id
                                                    LEFT JOIN product_list ON b.".$type." = product_list.id
                                                    WHERE  b.deleteid = 0 AND a.deleteid=0
                                                        AND a.order_base = '1' $userslog
                                                        GROUP BY b.id
                                                        ORDER BY b.order_no  ASC, b.id ASC
                                                        ");


                        $resultArea = $this->db->query("SELECT SUM(b.qty) as qty,
                                                        SUM(CASE WHEN a.create_date > '2024-05-31' THEN b.amount * 1.18 ELSE b.amount END) as total 
                                                    FROM orders_process as a
                                                    JOIN order_product_list_process as b ON a.id = b.order_id
                                                    LEFT JOIN product_list ON b.product_id = product_list.id
                                                    WHERE  b.deleteid = 0 AND a.deleteid=0
                                                        AND a.order_base > 0  $userslog ");


                        $resultOrders = $this->db->query("SELECT 
                                                    (CASE WHEN a.order_base > '22' THEN COUNT(DISTINCT a.id) END) AS md_orders,
                                                    (CASE WHEN a.order_base > '22' THEN SUM(b.amount) END) AS md_value
                                                    FROM orders_process as a
                                                    JOIN order_product_list_process as b ON a.id = b.order_id
                                                    LEFT JOIN product_list ON b.product_id = product_list.id
                                                    WHERE b.deleteid = 0 AND a.deleteid=0 $userslog ");


                                            } else {
                                                $result = $this->db->query("
                                                    SELECT
                                                        a.order_no,
                                                        a.create_date,
                                                        a.id,
                                                        b.categories_id,
                                                        b.categories_name,
                                                        b.product_id,
                                                        b.product_name,
                                                        b.rate,
                                                        b.fact,
                                                        b.fact_old,
                                                        SUM(b.qty) as qty,
                                                        SUM(CASE WHEN a.create_date > '2024-05-31' THEN (b.qty * b.rate * 1.18) ELSE b.qty * b.rate END)   as total,
                                                        product_list.uom,
                                                        product_list.categorie_type
                                                    FROM orders_process as a
                                                    JOIN order_product_list_process as b ON a.id = b.order_id
                                                    LEFT JOIN product_list ON b.".$type." = product_list.id
                                                    WHERE  b.deleteid = 0 AND a.deleteid=0
                                                        AND a.order_base = '1' $stat $userslog
                                                        GROUP BY b.id
                                                        ORDER BY b.order_no  ASC, b.id ASC

                                                ");

$resultArea = $this->db->query("SELECT SUM(b.qty) as qty,
 SUM(CASE WHEN a.reason != 'Cancel Approved' THEN
                  CASE WHEN a.create_date > '2024-05-31' THEN b.amount * 1.18 ELSE b.amount END ELSE 0 END)  AS total
         FROM orders_process a
            LEFT JOIN order_product_list_process b ON a.id = b.order_id
        LEFT JOIN customers c ON c.id = a.customer_id
        WHERE
        a.deleteid = '0' AND 
        b.deleteid = '0' AND 
        a.order_base > 0 AND
        a.create_date BETWEEN '$formdate' AND '$todate'
         ");



                                                   $resultOrders = $this->db->query("SELECT 
                                                            COUNT(DISTINCT CASE WHEN a.order_base > '1' THEN a.id END) AS md_orders,
                                                            SUM(CASE WHEN a.order_base > '1' THEN oplp.qty * oplp.rate END) AS md_value,
                                                            GROUP_CONCAT(DISTINCT CASE WHEN a.order_base > '1' THEN a.id END ORDER BY a.id ASC SEPARATOR ',') AS md_order_ids,
                                                            COUNT(DISTINCT CASE WHEN a.order_base = '-1' THEN a.id END) AS cancelled_orders,
                                                            SUM(CASE WHEN a.order_base = '-1' THEN oplp.qty * oplp.rate END) AS cancelled_value,
                                                              GROUP_CONCAT(DISTINCT CASE WHEN a.order_base = '-1' THEN a.id END ORDER BY a.id ASC SEPARATOR ',') AS cancelled_order_ids,
                                                            COUNT(DISTINCT CASE WHEN a.order_base = '0' THEN a.id END) AS open_orders,
                                                            SUM(CASE WHEN a.order_base = '0' THEN oplp.qty * oplp.rate END) AS open_value,
                                                              GROUP_CONCAT(DISTINCT CASE WHEN a.order_base = '0' THEN a.id END ORDER BY a.id ASC SEPARATOR ',') AS open_order_ids,

                                                            COUNT(DISTINCT CASE WHEN a.commission_check = '1' OR a.commission_check_fact = '1' THEN  a.id END) AS comm_orders,
                                                            SUM(CASE WHEN a.commission_check = '1' THEN (oplp.amount * 1.18) - (oplp.qty * oplp.rate * 1.18) END) AS comm_value,
                                                            SUM(CASE WHEN a.commission_check_fact = '1' THEN (oplp.amount * 1.18) - (oplp.qty * oplp.rate * 1.18) END) AS comm_fact_value,
                                                              GROUP_CONCAT(DISTINCT CASE WHEN a.commission_check = '1' OR a.commission_check_fact = '1' THEN a.id END ORDER BY a.id ASC SEPARATOR ',') AS comm_order_ids

 

                                                        FROM 
                                                            orders_process AS a
                                                        LEFT JOIN 
                                                            order_product_list_process AS oplp ON oplp.order_id = a.id
                                                        WHERE 
                                                            a.deleteid = 0 AND
                                                            oplp.deleteid = 0
                                                            AND a.order_base > 0
                                                            $stat2 $userslog;
                                                          ");
                                            }

            

           


 
                    $result = $result->result();
                    $resultArea = $resultArea->row();
                    $resultOrders = $resultOrders->row();


                    // print_r($resultOrders);
                    // exit;
                //     echo "
                //     SELECT
                //         a.order_no,
                //         a.create_date,
                //         b.categories_id,
                //         b.categories_name,
                //         b.product_id,
                //         b.product_name,
                //         b.rate,
                //         SUM(b.qty) as qty,
                //         SUM(b.qty * b.rate) as total,
                //         product_list.uom,
                //         product_list.categorie_type
                //     FROM orders_process as a
                //     JOIN order_product_list_process as b ON a.id = b.order_id
                //     LEFT JOIN product_list ON b.product_id = product_list.id
                //     WHERE a.create_date BETWEEN '" . $formdate . "' AND '" . $todate . "'
                //         AND b.deleteid = 0
                //         AND a.order_base = '1' $stat $userslog
                //     GROUP BY b.product_id
                //     ORDER BY a.id DESC
                // ";
                    // echo $result;
                    $i = 1;
                    $array = array();
                $price = 0;
                $qty = 0;


            //     echo "SELECT
            //     a.order_no,
            //     a.create_date,
            //     b.categories_id,
            //     b.categories_name,
            //     b.product_id,
            //     b.product_name,
            //     b.rate,
            //     b.fact,
            //     b.fact_old,
            //     SUM(b.qty) as qty,
            //     SUM(b.qty * b.rate) as total,
            //     product_list.uom,
            //     product_list.categorie_type
            // FROM orders_process as a
            // JOIN order_product_list_process as b ON a.id = b.order_id
            // LEFT JOIN product_list ON b.product_id = product_list.id
            // WHERE  b.deleteid = 0
            //     AND a.order_base = '1' $stat $userslog
            //     GROUP BY b.id
            //     ORDER BY b.order_no  ASC, b.id ASC";
            //     exit;
                    foreach ($result as $key => $value) {
                        // $additional_information = $this->Main_model->where_names_three_order_by_new('additional_information', 'grouping', '1', 'deleteid', '0', 'category_id', '0', 'sort_order_id', 'ASC');
                        // $additional_information1 = $this->Main_model->where_names_three_order_by_new('additional_information', 'grouping', '1', 'deleteid', '0', 'category_id=', $value->categories_id, 'sort_order_id', 'ASC');

                        $product_details = array(
                            'no' => $i,
                            'id' => base64_encode($value->id),                            'order_id' => $value->order_id,
                            'order_no' => $value->order_no,
                            'product_id' => $value->product_id,
                            'product_name' => $value->product_name,
                            'categories_id' => $value->categories_id,
                            'categories_name' => $value->categories_name,
                            'rate' => $value->rate,
                            'qty' =>  round($value->qty, 2),
                            'create_date' => date('d-m-Y', strtotime($value->create_date)),
                            'total' => round($value->total, 2),
                            'fact' => $value->fact ? $value->fact : $value->fact_old
                        );
                        $price += $value->total;
                        $qty += $value->qty;


                        // if($value->product_id){
                        // Fetch additional product details from the 'product_list' table and merge them
                        $product_list_details = $this->db->query("
                        SELECT *
                        FROM product_list as a
                        WHERE a.id = $value->product_id ");
                        // $this->Main_model->where_names('product_list', 'id', $value->product_id);
                        $product_list_details = $product_list_details->row(); // Assuming it returns a single product

                        // Merge the additional product details with the existing product details
                        $merged_product_details = array_merge($product_details, [

                        'price' => $product_list_details->price,
                        'kg_price' => $product_list_details->kg_price,
                        'brand' => $product_list_details->brand,
                        'uom' => $product_list_details->uom,
                        'formula' => $product_list_details->formula,
                        'formula2' => $product_list_details->formula2,
                        'HSN_SAC' => $product_list_details->HSN_SAC,
                        'side_label' => $product_list_details->side_label,
                        'description'=>$product_list_details->description,
                        'input_label' => $product_list_details->input_label,
                        'color' => $product_list_details->color,
                        'gsm' => $product_list_details->coating_mass,
                        'ys' => $product_list_details->yield_strength,
                        'categorie_type' => $product_list_details->categorie_type,
                        'coating_mass' => $product_list_details->coating_mass,
                        'weight' => $product_list_details->weight,
                        'thickness' => $product_list_details->thickness,
                        'materialtype' => $product_list_details->material_type,

                        ]);

                        // Add merged product details to the array
                        $array[] = $merged_product_details;


                        $i++;
                        // }
                           
                    }
                    $arrayMain = [];
                    $arrayMain['data'] = $array;
                    $arrayMain['net_price'] = round($price, 2);
                    $arrayMain['qty'] = round($qty, 2);
                    $arrayMain['area_value'] = $resultArea->total;
                    $arrayMain['md_orders'] = $resultOrders->md_orders;
                    $arrayMain['md_value'] = $resultOrders->md_value;
                    $arrayMain['md_order_ids'] = $resultOrders->md_order_ids;


                    $arrayMain['cancelled_orders'] = $resultOrders->cancelled_orders;
                    $arrayMain['cancelled_value'] = $resultOrders->cancelled_value;
                    $arrayMain['cancelled_order_ids'] = $resultOrders->cancelled_order_ids;

                     $arrayMain['open_orders'] = $resultOrders->open_orders;
                    $arrayMain['open_value'] = $resultOrders->open_value;
                    $arrayMain['open_order_ids'] = $resultOrders->open_order_ids;

                    $arrayMain['comm_value'] = $resultOrders->comm_value  ;
                    $arrayMain['comm_orders'] = $resultOrders->comm_orders;
                    $arrayMain['comm_order_ids'] = $resultOrders->comm_order_ids;


                    $arrayMain['grand_total'] = $arrayMain['comm_value'] + $arrayMain['md_value'] + $arrayMain['cancelled_value'] ;

                    $arrayMain['diff'] = $resultArea->total - $arrayMain['net_price'];
                    echo json_encode($arrayMain);

    }
                      
        public function fetch_data_get_ledger_view_export()
    {









  
           
                    
                     $cateid=$_GET['cate_id'];
                     $order_id=$_GET['order_id']; 
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                     $stat="";
                     if($order_status!='ALL') 
                     {
                          $stat=' AND a.finance_status="'.$order_status.'"';
                     }   
                     
                     
                    
                      $search='';
                     if($cateid!='ALL') 
                     {
                         $stat.=' AND b.categories_id="'.$cateid.'"';
                     }
                     
                     if($productid!='ALL') 
                     {
                         $stat.=' AND b.product_id="'.$productid.'"';
                     }
                    


                         if($order_id!='0')
                     {


                          $order_id_set=base64_decode($order_id);
                          $order_id_set=explode(',', $order_id_set);
                          $order_id_set=implode('","', $order_id_set);
                          $stat.=' AND b.id IN ("'.$order_id_set.'")';
                     }
                     else
                     {

                       $stat.=' AND a.create_date BETWEEN "' . $formdate . '" AND "' . $todate . '"';

                     }


                     
                     
                     
                     $userslog="";
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                               
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                           $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                         $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  a.sales_group IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     if($_GET['formdate']=='undefined')
                     {
                         
                        
                         $formdate=date('Y-m-d');
                         $todate=date('Y-m-d');
                         $result=$this->db->query("SELECT a.order_no,a.create_date,b.product_name,b.rate,SUM(b.qty) as qty,SUM(b.qty*b.rate) as total FROM orders_process as a JOIN order_product_list_process as b ON a.id=b.order_id  WHERE  b.deleteid=0 AND a.order_base='1' $userslog GROUP BY b.product_id ORDER BY a.id DESC");
                    
                     }
                     else
                     {
                         
                         $result=$this->db->query("SELECT a.order_no,a.create_date,b.product_name,b.rate,SUM(b.qty) as qty,SUM(b.qty*b.rate) as total FROM orders_process as a JOIN order_product_list_process as b ON a.id=b.order_id  WHERE  b.deleteid=0 AND a.order_base='1' $stat $userslog  GROUP BY b.product_id ORDER BY a.id DESC");
                    
                     }
                    
                    
                    $result=$result->result();
                     
                     
                 
                     
                     
                     $i=1;
                      $array=array();
                 
                  
                    
                  
                         $filename='Sales_product_report_'.$formdate.'_TO_'.$todate; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                         header("Expires: 0");
                  ?>
                  
                    <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"    style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                         <thead>
                             
                             
                              <tr><th colspan="7">Sales Report <?php echo $formdate; ?> To <?php echo $todate; ?></th></tr>
                           
                          
                         </thead> 
                         
                    </table>
                  
                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr style="text-align: left;">


                           <th>No</th>
                          <th>Date</th>
                          <th>Order No</th>
                          <th>Product Name</th>
                          <th>Price</th>
                          <th>QTY</th>
                          <th>Amount</th>
                        
            
                        </tr>
                      </thead>
                        <tbody>
                            
                            <?php
                            
                                     foreach ($result as  $value) {
                                         
                                            
                                         
                                        ?>
                                          <tr >
                          
                                          <td><?php echo $i; ?></td>
                                          <td><?php echo date('d-m-Y',strtotime($value->create_date)); ?></td>
                                          <td>"<?php echo $value->order_no; ?>"</td>
                                          <td><?php echo $value->product_name; ?></td>
                                          <td><?php echo $value->rate; ?></td>
                                          <td><?php echo round($value->qty,2); ?></td>
                                          <td><?php echo round($value->total,2); ?></td>
                                          
                                        </tr>
                                        
                                      
                                       
                                        <?php
                                        
                                        
                                        
                                        $i++;
                                     }
                            
                            ?>
                      
                        
                        
                       
                     
                        
                         
                        
                      
                      </tbody>
                    </table>
                  <?php
                  
                  
                  
                  
                  
                  
                  
                  

    }
    
    
    
    
    
    
    
    
        public function fetch_data_sales_report()
    {

                    
                    
                    

                    
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $customer_id=$_GET['customer_id'];
                     
                     $stat="";
                     if($order_status!='ALL') 
                     {
                          $stat=' AND a.finance_status="'.$order_status.'"';
                     }
                     
                     
                     
                    if(isset($_GET['sales_group']))
                    {
                         if($_GET['sales_group']!='ALL') 
                         {
                              $stat.=' AND sg.sales_group_id="'.$_GET['sales_group'].'"';
                         } 
                         else
                         {
                             $stat.='';
                         }
                        
                       
                    }
                    
                    
                     if($customer_id!=0) 
                     {
                          $stat.=' AND a.customer_id="'.$customer_id.'"';
                     }   
                     
                    
                    $userslog="";
                   
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                              
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                          
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  sg.sales_group_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                    
                  
                     
                     
                    
                         
                     $result=$this->db->query("SELECT a.*,b.company_name,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND a.order_base='1' $stat $userslog GROUP BY a.id ORDER BY a.id DESC");
                     
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value)
                     {
                       
                          $total=$value->bill_total;
                       
                                    $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_group=implode(",", $sales_group_name);
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_team=$val->name;
                                                $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                    
                                   
                                    
                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                     $sales_head_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                             $sales_head_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_head=implode(",", $sales_head_name);
                                    
                                    
                       
                       
                         $status="Order Completed";
                         if($value->finance_status=='3')
                         {
                             $status='Finance Approved';
                         }
                         
                         if($value->finance_status=='4')
                         {
                             $status='Delivered';
                         }
                         
                         if($value->finance_status=='5')
                         {
                             $status='Reconciliation Completed';
                         }
                         
                         
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'customername' => $value->company_name,
                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                            'total' => round($total,2),
                            'status' => $status
                            

                        );


                        $i++;

                     }

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
     public function fetch_data_sales_team_report()
    {

                    
                    
            
        $customer_id=$_GET['customer_id'];
        $cateid=$_GET['sales_group'];
        $filterStatus=$_GET['active_status'];
       //  $sales_group=$_GET['sales_group'];
        $productid=$_GET['productid'];
        $limit=$_GET['limit'];
        $formdate=$_GET['formdate'];
        $todate=$_GET['todate'];
        $order_status=$_GET['order_status'];
        $payment_mode=$_GET['payment_mode'];

        $pagenum = $_GET['page'];
        $pagesize = $_GET['size'];
        $offset = ($pagenum - 1) * $pagesize;




        $stat=' ';
        $userslog="";
       $usersgroup="";
      
       if($cateid>0)
       {
            $userslog.=' AND b.sales_member_id="'.$cateid.'"';
       }


      



           if($this->session->userdata['logged_in']['access']=='17')
       {
             $sales_team_id=array();
             $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
             $resultsales_team=$query->result();
             foreach ($resultsales_team as  $values) {

                 $sales_team_id[]=$values->define_saleshd_id;

             }


             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
             foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->define_saleshd_id;
             }

              $sales_team_id="'".implode("','", $sales_team_id)."'";
              $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';

       }


       if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
       {



                    $sales_team_id = array($this->userid);
               $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
               foreach ($resultsales_team as $values) {
                   $sales_team_id[] = $values->sales_member_id;
               }


               $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
               foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->id;
               }

             $sales_team_id="'".implode("','", $sales_team_id)."'";

             $userslog.=' AND  b.sales_member_id IN ('.$sales_team_id.')';



       }



       function refineValue($value){
           if($value != 0 && $value != ''){
            $val =  round($value * pow(10, 2)) / pow(10, 2);
               return  round($val,2);
           }else{
               return 0;
           }

        }

        $search = $_GET['search'];
       
        $searchsql2="";
        if($search!="")
        {
            $searchsql=" AND  aa.name LIKE'%".$search."%' OR aa.phone LIKE '%".$search."%'";
            $searchsql2=" AND aa.name LIKE'%".$search."%' OR aa.phone LIKE '%".$search."%'";
        }
        $searchsql="";
        if($status == 'false'){
            $searchsql = " AND aa.status = 1 ";
        }

      
         $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND aa.sales_group_id != 40  AND aa.sales_group_id != 41  $userslog $usersgroup $searchsql2 GROUP BY a.id ORDER BY a.name ASC");
         $result=$result->result();
        $array=array();
        $totals = array(
        'target' => 0,
        'bill_actual'=>0,
        'bill_total'=>0,
        'bill_returns'=>0,
        'required_target'=>0,
        'perc'=>0
        );
 foreach ($result as  $valuessg)
        {
                        $resultsubdata=$this->db->query("SELECT aa.username,aa.id,aa.target,aa.status,aa.phone FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND a.id='".$valuessg->sales_group_id."' AND aa.id != 1801 $userslog $searchsql2  GROUP BY aa.id ORDER BY aa.name ASC");
                        $resultsubdata=$resultsubdata->result();
                        $subresult=array();
                        $i=1;
                        $teamTotal = array(
                            'target' => 0,
                            'bill_actual'=>0,
                            'bill_total'=>0,
                            'bill_returns'=>0,
                            'required_target'=>0,
                            'perc'=>0
                        );
                     foreach ($resultsubdata as  $val)
                        {
                            $billTotal = 0;
                            $billReturns = 0;
                            $billData = $this->db->query("SELECT  a.bill_total,a.return_id,a.id,a.order_no  FROM orders_process as a WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.user_id IN (".$val->id.") AND a.customer_id NOT IN (33334,37743) AND a.deleteid != 1 AND a.order_base > 0 $searchsql ORDER BY a.id DESC")->result();
                            foreach($billData as $entry){
                                     //Not a return
                                    $billTotal = $billTotal + $entry->bill_total;
                                    $teamTotal['bill_total']  = $teamTotal['bill_total'] + refineValue($entry->bill_total);
                            
 



                             
                        } 
             

                              
                        $query_profle_get = $this->db->query("SELECT bill_total FROM `order_sales_return_complaints` a JOIN customers as b ON a.customer=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id
                        WHERE (sg.sales_member_id = '".$val->id."') AND  a.deleteid = '0' AND a.remarks ='Return To Re-Sale' AND a.customer NOT IN (33334,37743) AND
                                        a.update_date BETWEEN '".$formdate."' AND '".$todate."'  ");
                        
                     
                                       $result_lengeth = $query_profle_get->result();
       
                                         foreach ($result_lengeth as $valuess)
                                        {      
                                                 $billReturns = $billReturns + $valuess->bill_total;
                                                 $teamTotal['bill_returns'] += $valuess->bill_total;
                                         }
                                       if($val->id=='106')
                                      {
                                       $billReturns=$billReturns+61.1;
                                       $teamTotal['bill_returns']  = $teamTotal['bill_returns'] + refineValue($billReturns+61.1);
                                      }
       
                              // print_r($billData);
                                   // exit;
                                   //Bill Actual
                                   $billActual = $billTotal - $billReturns;
                                   $teamTotal['bill_actual'] +=  $billActual;
                                   //Salesperson Target
                                   $target = $val->target;
                                   $teamTotal['target'] += $target;
       
                                   $daysInMonth = cal_days_in_month(CAL_GREGORIAN, date('m',strtotime($formdate)), date('Y',strtotime($formdate)));
                                   
                                   //Target and days remaining calculation
                                   $reqTarget = ($target/$daysInMonth) * date('d',strtotime($todate));
                                   $teamTotal['required_target'] +=  $reqTarget;
       
                                   //Status
                                   $status = $billActual <= $reqTarget ? 'UNDER TARGET' : 'AHEAD';
                                   if($billActual && $reqTarget){
                                       $perc = ($billActual / $reqTarget) * 100;
                                   }else{
                                       $perc = 0;
                                   }
                                    if($filterStatus == 'true' || $val->status == '1'){
                                       $subresult[] = array(
                                           'no' => $i,
                                           'id' => $val->id,
                                           'sales_team' => $val->username,
                                           'phone' => $val->phone,
                                           'target' => refineValue($target),
                                           'bill_total' => refineValue($billTotal),
                                           'bill_actual' => refineValue($billActual),
                                           'bill_returns' => refineValue($billReturns),
                                           'required_target' => refineValue($reqTarget),
                                           'perc' => refineValue($perc),
                                           'status' => $status,
                                         );
                                         $i++;
                                    }
                                   
                               }
                               if($teamTotal['bill_actual'] && $teamTotal['required_target']){
                                   $teamTotal['perc'] = $teamTotal['bill_actual'] / $teamTotal['required_target']  * 100;
                               }else{
                                   $teamTotal['perc']  = 0;
                               }
                              
                                   $teamTotal['target'] = refineValue( $teamTotal['target']) ;
                                   $totals['target'] += $teamTotal['target'];
       
                                   $teamTotal['bill_actual'] =  refineValue($teamTotal['bill_actual']) ;
                                   $totals['bill_actual'] += $teamTotal['bill_actual'];
       
                                   $teamTotal['bill_total'] =  refineValue($teamTotal['bill_total']) ;
                                   $totals['bill_total'] += $teamTotal['bill_total'];
       
                                   $teamTotal['bill_returns'] =  refineValue($teamTotal['bill_returns']) ;
                                   $totals['bill_returns'] += $teamTotal['bill_returns'];
       
                                   $teamTotal['required_target'] = refineValue($teamTotal['required_target']) ;
                                   $totals['required_target'] += $teamTotal['required_target'];
       
                                   $teamTotal['perc'] =  refineValue($teamTotal['perc']);
                           
                                $array[] = array(
                                      'id' => $valuessg->sales_group_id,
                                      'sales_group_name' => $valuessg->sales_group_name,
                                      'team_total'=> $teamTotal,
                                      'subarray'=>$subresult
                                  );
       

        }
     // exit;
        $arrayMain = array();
        $arrayMain[] = $array;
        $arrayMain['topaaz'] = $this->generateReportSpecific(33334,$formdate,$todate,$totals);
        $arrayMain['arasf'] =  $this->generateReportSpecific(37743,$formdate,$todate,$totals);
        $totals['perc'] = refineValue((($totals['bill_actual'] / $totals['required_target']) * 100));
        $totals['required_target'] = refineValue($totals['required_target']);
        // $totals['required_target'] = refineValue($totals['required_target']);

        $totals['bill_actual'] =  $totals['bill_actual'] + $arrayMain['topaaz']['bill_actual'] + $arrayMain['arasf']['bill_actual'];
        $totals['bill_total'] = $totals['bill_total'] + $arrayMain['topaaz']['bill_total'] + $arrayMain['arasf']['bill_total'];
        $totals['bill_returns'] = $totals['bill_returns'] + $arrayMain['topaaz']['bill_returns'] + $arrayMain['arasf']['bill_returns'];
        $arrayMain['totals'] = $totals;
        echo json_encode($arrayMain);        

                    
                  

    }
    
    
    
    
    
    
    
    
    
         public function fetch_data_sales_team_report_a()
    {
                


        $customer_id=$_GET['customer_id'];
        $cateid=$_GET['sales_group'];
	$filterStatus=$_GET['active_status'];
       //  $sales_group=$_GET['sales_group'];
        $productid=$_GET['productid'];
        $limit=$_GET['limit'];
        $formdate=$_GET['formdate'];
        $todate=$_GET['todate'];
        $order_status=$_GET['order_status'];
        $payment_mode=$_GET['payment_mode'];

        $pagenum = $_GET['page'];
        $pagesize = $_GET['size'];
        $offset = ($pagenum - 1) * $pagesize;




        $stat=' ';
        $userslog="";
       $usersgroup="";
       if($cateid>0)
       {
            $userslog.=' AND b.sales_member_id="'.$cateid.'"';
       }


      



           if($this->session->userdata['logged_in']['access']=='17')
       {
             $sales_team_id=array();
             $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
             $resultsales_team=$query->result();
             foreach ($resultsales_team as  $values) {

                 $sales_team_id[]=$values->define_saleshd_id;

             }


             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
             foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->define_saleshd_id;
             }

              $sales_team_id="'".implode("','", $sales_team_id)."'";
              $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';

       }


       if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
       {



                    $sales_team_id = array($this->userid);
               $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
               foreach ($resultsales_team as $values) {
                   $sales_team_id[] = $values->sales_member_id;
               }


               $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
               foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->id;
               }

             $sales_team_id="'".implode("','", $sales_team_id)."'";

             $userslog.=' AND  b.sales_member_id IN ('.$sales_team_id.')';



       }



       function refineValue($value){
           if($value != 0 && $value != ''){
            $val =  round($value * pow(10, 2)) / pow(10, 2);
               return  round($val,2);
           }else{
               return 0;
           }

        }

        $search = $_GET['search'];
        $searchsql="";
        $searchsql2="";
        if($search!="")
        {
            //$searchsql=" AND  ss.name LIKE'%".$search."%'";
            $searchsql2=" AND b.name LIKE'%".$search."%' ";
        }

         $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND aa.sales_group_id != 40  AND aa.sales_group_id != 41  $userslog $usersgroup $searchsql2 GROUP BY a.id ORDER BY a.name ASC");
         $result=$result->result();
        $array=array();
        $totals = array(
        'target' => 0,
        'bill_actual'=>0,
        'bill_total'=>0,
        'bill_returns'=>0,
        'required_target'=>0,
        'perc'=>0
        );
 foreach ($result as  $valuessg)
        {
                        $resultsubdata=$this->db->query("SELECT aa.username,aa.id,aa.target,aa.status FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND a.id='".$valuessg->sales_group_id."' AND aa.id != 1801 $userslog $searchsql2 GROUP BY aa.id ORDER BY aa.name ASC");
                        $resultsubdata=$resultsubdata->result();
                        $subresult=array();
                        $i=1;
                        $teamTotal = array(
                            'target' => 0,
                            'bill_actual'=>0,
                            'bill_total'=>0,
                            'bill_returns'=>0,
                            'required_target'=>0,
                            'perc'=>0
                        );
                     foreach ($resultsubdata as  $val)
                        {
                            $billTotal = 0;
                            $billReturns = 0;
                            $billData = $this->db->query("SELECT  a.bill_total,a.return_id,a.id,a.order_no  FROM orders_process as a WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.user_id IN (".$val->id.") AND a.deleteid != 1 AND a.customer_id NOT IN (33334,37743) AND a.order_base > 0 ORDER BY a.id DESC")->result();
                            foreach($billData as $entry){
                                     //Not a return
                                    $billTotal = $billTotal + $entry->bill_total;
                                    $teamTotal['bill_total']  = $teamTotal['bill_total'] + refineValue($entry->bill_total);
                            
 



                             
                        } 
			 

                          $query_profle_get = $this->db->query("SELECT bill_total FROM `order_sales_return_complaints` a JOIN customers as b ON a.customer=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id
                        WHERE (sg.sales_member_id = '".$val->id."') AND a.deleteid = '0' AND  a.customer NOT IN (33334,37743) AND 
                                        a.update_date BETWEEN '".$formdate."' AND '".$todate."'");
                        
                     
                                       $result_lengeth = $query_profle_get->result();
       
                                         foreach ($result_lengeth as $valuess)
                                        {      
                                                 $billReturns = $billReturns + $valuess->bill_total;
                                                 $teamTotal['bill_returns'] += $valuess->bill_total;
                                         }
                                       if($val->id=='106')
                                      {
                                       $billReturns=$billReturns+61.1;
                                       $teamTotal['bill_returns']  = $teamTotal['bill_returns'] + refineValue($billReturns+61.1);
                                      }
       
                              // print_r($billData);
                                   // exit;
                                   //Bill Actual
                                   $billActual = $billTotal - $billReturns;
                                   $teamTotal['bill_actual'] +=  $billActual;
                                   //Salesperson Target
                                   $target = $val->target;
                                   $teamTotal['target'] += $target;
       
                                   $daysInMonth = cal_days_in_month(CAL_GREGORIAN, date('m',strtotime($formdate)), date('Y',strtotime($formdate)));
                                   
                                   //Target and days remaining calculation
                                   $reqTarget = ($target/$daysInMonth) * date('d',strtotime($todate));
                                   $teamTotal['required_target'] +=  $reqTarget;
       
                                   //Status
                                   $status = $billActual <= $reqTarget ? 'UNDER TARGET' : 'AHEAD';
                                   if($billActual && $reqTarget){
                                       $perc = ($billActual / $reqTarget) * 100;
                                   }else{
                                       $perc = 0;
                                   }
                                    if($filterStatus == 'true' || $val->status == '1'){
                                       $subresult[] = array(
                                           'no' => $i,
                                           'id' => $val->id,
                                           'sales_team' => $val->username,
                                           'target' => refineValue($target),
                                           'bill_total' => refineValue($billTotal),
                                           'bill_actual' => refineValue($billActual),
                                           'bill_returns' => refineValue($billReturns),
                                           'required_target' => refineValue($reqTarget),
                                           'perc' => refineValue($perc),
                                           'status' => $status,
                                         );
                                         $i++;
                                    }
                                   
                               }
                               if($teamTotal['bill_actual'] && $teamTotal['required_target']){
                                   $teamTotal['perc'] = $teamTotal['bill_actual'] / $teamTotal['required_target']  * 100;
                               }else{
                                   $teamTotal['perc']  = 0;
                               }
                              
                                   $teamTotal['target'] = refineValue( $teamTotal['target']) ;
                                   $totals['target'] += $teamTotal['target'];
       
                                   $teamTotal['bill_actual'] =  refineValue($teamTotal['bill_actual']) ;
                                   $totals['bill_actual'] += $teamTotal['bill_actual'];
       
                                   $teamTotal['bill_total'] =  refineValue($teamTotal['bill_total']) ;
                                   $totals['bill_total'] += $teamTotal['bill_total'];
       
                                   $teamTotal['bill_returns'] =  refineValue($teamTotal['bill_returns']) ;
                                   $totals['bill_returns'] += $teamTotal['bill_returns'];
       
                                   $teamTotal['required_target'] = refineValue($teamTotal['required_target']) ;
                                   $totals['required_target'] += $teamTotal['required_target'];
       
                                   $teamTotal['perc'] =  refineValue($teamTotal['perc']);
                           
                                $array[] = array(
                                      'id' => $valuessg->sales_group_id,
                                      'sales_group_name' => $valuessg->sales_group_name,
                                      'team_total'=> $teamTotal,
                                      'subarray'=>$subresult
                                  );
       

        }
     // exit;
        $arrayMain = array();
        $arrayMain[] = $array;
        $arrayMain['topaaz'] = $this->generateReportSpecific(33334,$formdate,$todate,$totals);
        $arrayMain['arasf'] =  $this->generateReportSpecific(37743,$formdate,$todate,$totals);
        $totals['perc'] = refineValue((($totals['bill_actual'] / $totals['required_target']) * 100));
        $totals['required_target'] = refineValue($totals['required_target']);
        // $totals['required_target'] = refineValue($totals['required_target']);

        $totals['bill_actual'] =  $totals['bill_actual'] + $arrayMain['topaaz']['bill_actual'] + $arrayMain['arasf']['bill_actual'];
        $totals['bill_total'] = $totals['bill_total'] + $arrayMain['topaaz']['bill_total'] + $arrayMain['arasf']['bill_total'];
        $totals['bill_returns'] = $totals['bill_returns'] + $arrayMain['topaaz']['bill_returns'] + $arrayMain['arasf']['bill_returns'];
        $arrayMain['totals'] = $totals;
        echo json_encode($arrayMain);

    }



    public function generateReportSpecific($cId,$formdate,$todate,$totals){
        // echo $cId,$formdate,$todate;
        $billTotal = 0;
        $billReturns = 0;
        $billData = $this->db->query("SELECT a.finance_status,a.return_status,a.return_amount,a.return_id,a.bill_total  FROM orders_process as a JOIN customers as b ON a.customer_id=b.id   WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND a.customer_id = '".$cId."' AND a.order_base='1'")->result();
        // print_r($billData);
        foreach($billData as $entry){
                 //Not a return
                $billTotal += $entry->bill_total;
                // $teamTotal['bill_total'] += refineValue($billTotal);
                
            
        }
     $query_profle_get = $this->db->query("SELECT bill_total FROM `order_sales_return_complaints` a JOIN customers as b ON a.customer=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id
				 WHERE (a.customer = '".$cId."') AND a.remarks = 'Return To Re-sale' AND a.deleteid = '0' AND  
                                 a.update_date BETWEEN '".$formdate."' AND '".$todate."'");
				 
 			 
                                $result_lengeth = $query_profle_get->result();

                                  foreach ($result_lengeth as $valuess)
                                 {      
                                          $billReturns = $billReturns + refineValue($valuess->bill_total);
                                          //$teamTotal['bill_returns'] += refineValue($valuess->bill_total);
                                  }
                                


        //Bill Actual
        $billActual = $billTotal - $billReturns;
        // $teamTotal['bill_actual'] += refineValue($billActual);
        //Salesperson Target
       
        return array(
            'bill_actual'=>$billActual,
            'bill_total'=>$billTotal,
            'bill_returns'=>$billReturns,
        );
    }    
    
    
    
    
          public function fetch_data_sales_report_daily_test()
    {

  

                    
                    
                    

                    
                     $sales_id=$_GET['sales_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                     
                     $stat="";
                   
                     if($sales_id>0) 
                     {
                          //$stat.=' AND b.sales_team_id="'.$sales_id.'"';
                           $stat.=' AND a.user_id="'.$sales_id.'"';
                     }   
                     
                     if($order_status!='ALL')
                     {     
                          if($order_status==11)
                          {
                               $stat.=' AND a.deleteid="'.$order_status.'"';
                          }
                          else
                          {
                              $stat.=' AND a.order_base="'.$order_status.'"';
                          }
                          
                     }
                     else
                     {
                         $stat.=' AND a.order_base>0 AND a.deleteid=0';
                     }
                    
                    $userslog="";
                   
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                              
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                   
                     if($this->session->userdata['logged_in']['access']=='11')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                          
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                            
                            
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                                 
                    }
                    
                      if($this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                           
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                            
                            
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                                 
                    }
                    
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  sg.sales_group_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                    
                  
                     
                     
                    
                         
                     $result=$this->db->query("SELECT a.*,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head, SUM(oplp.amount) as product_totals FROM orders_process as a LEFT JOIn order_product_list_process oplp ON oplp.order_id = a.id JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' $stat $userslog AND oplp.deleteid = '0' AND oplp.product_id > 0 GROUP BY a.id ORDER BY a.id DESC");
                     // echo "SELECT a.*,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head, SUM(oplp.amount) as product_totals FROM orders_process as a LEFT JOIn order_product_list_process oplp ON oplp.order_id = a.id JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' $stat $userslog AND oplp.deleteid = '0' AND oplp.product_id > 0 GROUP BY a.id ORDER BY a.id DESC";
                     // exit;
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value)
                     {
                       
                       
                       
                                   

                                        
                                        
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT a.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                


                                    $driver_name = "";
                                    $driver_phone = "";
                                    $driver = $this->Main_model->where_names('driver', 'id', $value->driver_id);
                                    foreach ($driver as $driver_v) {
                                        $driver_name = $driver_v->name.' |';
                                        $driver_phone = $driver_v->phone;
                                        $vehicle_id = $driver_v->vehicle_id;
                                        
                                    }
                                    
                                    
                                        $vehicle_number = "";
                                        $vehicle_name = "";
                                        $vehicle = $this->Main_model->where_names('vehicle', 'id', $value->vehicle_id);
                                        foreach ($vehicle as $vehicle_v) {
                                            $vehicle_name = $vehicle_v->vehicle_name.' > ';
                                            $vehicle_number = $vehicle_v->vehicle_number;
                                            $vehicle_id = $vehicle_v->id;
                                        }

                       
                                                               
                                        
                                
                                     
                                        $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_group=implode(",", $sales_group_name);
                                    
                                    
                                   
                                     
                                     
                                     
                                     $order_by="";
                                     $sales_group_s_order_by=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->entry_user_id."' ORDER BY id DESC");
                                     $sales_group_ssorder_by=$sales_group_s_order_by->result();
                                    
                                     foreach($sales_group_ssorder_by as $val)
                                     { 
                                       
                                      
                                                $order_by=$val->name;
                                                
                         
                                    }
                                    
                                    
                                     $behalf_of="";
                                     $sales_group_s_behalf_of=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->user_id."' ORDER BY id DESC");
                                     $sales_group_ssbehalf_of=$sales_group_s_behalf_of->result();
                                    
                                     foreach($sales_group_ssbehalf_of as $val)
                                     { 
                                       
                                      
                                                $behalf_of=$val->name;
                                                
                         
                                    }
                                     
                                    
                                      
                                    
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                                $sales_team=$val->name;
                                                $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                    
                                   
                                    
                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                     $sales_head_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                             $sales_head_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_head=implode(",", $sales_head_name);
                                    
                                    
                       
                       
                         $status="Order Completed";
                         if($value->finance_status=='3')
                         {
                             $status='Finance Approved';
                         }
                         
                         if($value->finance_status=='4')
                         {
                             $status='Delivered';
                         }
                         
                         if($value->finance_status=='5')
                         {
                             $status='Reconciliation Completed';
                         }
                         
                         if($value->deleteid=='0')
                         {
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'base_id' => base64_encode($value->id),
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'payment_mode' => $value->payment_mode,
                            'driver'=>$driver_name.' '.$vehicle_name.' '.$vehicle_number,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'route_name'=>$route_name,
                            'behalf_of'=>$behalf_of,
                            'order_by'=>$order_by,
                            'customername' => $value->company_name,
                            'phone' => $value->phone,
                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                            'create_time' =>$value->create_time,
                            'reason' =>$value->reason,
                            'total' => $value->bill_total,
                            'product_totals' => $value->product_totals,
                            'status' => $status
                            

                        );


                        $i++;
                      }

                     }


 // $resultReturns=$this->db->query("SELECT a.*,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM order_sales_return_complaints as a JOIN customers as b ON a.customer=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '$formdate 00:00:00' AND '$todate 23:59:59' $stat $userslog AND a.deleteid = '0' GROUP BY a.id ORDER BY a.id DESC");

 //    foreach ($resultReturns as $key => $value) {

                                        
 //                                                               $route_name="";
 //                                                               $result_account_head=$this->db->query("SELECT a.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
 //                                                               $result_account_head_text=$result_account_head->result();
                                                              
 //                                                               foreach($result_account_head_text as $ass)
 //                                                               {
 //                                                                                        $route_name=$ass->name;
                                                                                       
 //                                                               }
                                                                


 //                                    $driver_name = "";
 //                                    $driver_phone = "";
 //                                    $driver = $this->Main_model->where_names('driver', 'id', $value->driver_id);
 //                                    foreach ($driver as $driver_v) {
 //                                        $driver_name = $driver_v->name.' |';
 //                                        $driver_phone = $driver_v->phone;
 //                                        $vehicle_id = $driver_v->vehicle_id;
                                        
 //                                    }
                                    
                                    
 //                                        $vehicle_number = "";
 //                                        $vehicle_name = "";
 //                                        $vehicle = $this->Main_model->where_names('vehicle', 'id', $value->vehicle_id);
 //                                        foreach ($vehicle as $vehicle_v) {
 //                                            $vehicle_name = $vehicle_v->vehicle_name.' > ';
 //                                            $vehicle_number = $vehicle_v->vehicle_number;
 //                                            $vehicle_id = $vehicle_v->id;
 //                                        }

                       
                                                               
                                        
                                
                                     
 //                                        $sales_group_data=explode('|', $value->sales_group);
                                        

 //                                     $sales_group_name=array();
 //                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
 //                                     $sales_group_ss=$sales_group_s->result();
                                    
 //                                     foreach($sales_group_ss as $val)
 //                                     { 
                                       
                                      
 //                                               $sales_group_name[]=$val->name;
                         
 //                                    }
                                    
 //                                     $sales_group=implode(",", $sales_group_name);
                                    
                                    
                                   
                                     
                                     
                                     
 //                                     $order_by="";
 //                                     $sales_group_s_order_by=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->entry_user_id."' ORDER BY id DESC");
 //                                     $sales_group_ssorder_by=$sales_group_s_order_by->result();
                                    
 //                                     foreach($sales_group_ssorder_by as $val)
 //                                     { 
                                       
                                      
 //                                                $order_by=$val->name;
                                                
                         
 //                                    }
                                    
                                    
 //                                     $behalf_of="";
 //                                     $sales_group_s_behalf_of=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->user_id."' ORDER BY id DESC");
 //                                     $sales_group_ssbehalf_of=$sales_group_s_behalf_of->result();
                                    
 //                                     foreach($sales_group_ssbehalf_of as $val)
 //                                     { 
                                       
                                      
 //                                                $behalf_of=$val->name;
                                                
                         
 //                                    }
                                     
                                    
                                      
                                    
                                    
 //                                     $sales_team="";
 //                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
 //                                     $sales_group_ss=$sales_group_s->result();
                                    
 //                                     foreach($sales_group_ss as $val)
 //                                     { 
                                       
                                      
 //                                                $sales_team=$val->name;
 //                                                $define_saleshd_id=$val->define_saleshd_id;
                         
 //                                    }
                                    
                                   
                                    
 //                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
 //                                     $sales_head_name=array();
 //                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
 //                                     $sales_group_ss=$sales_group_s->result();
                                    
 //                                     foreach($sales_group_ss as $val)
 //                                     { 
                                       
                                      
 //                                             $sales_head_name[]=$val->name;
                         
 //                                    }
                                    
 //                                     $sales_head=implode(",", $sales_head_name);
 //         $array[] = array(
 //                            'no' => $i, 
 //                            'id' => $value->id, 
 //                            'base_id' => base64_encode($value->id),
 //                            'order_id' => $value->order_id, 
 //                            'order_no' => $value->re_order_no,
 //                            'payment_mode' => $value->payment_mode,
 //                            'driver'=>$driver_name.' '.$vehicle_name.' '.$vehicle_number,
 //                            'sales_group' => $sales_group,
 //                            'sales_head' => $sales_head,
 //                            'sales_team' => $sales_team,
 //                            'route_name'=>$route_name,
 //                            'behalf_of'=>$behalf_of,
 //                            'order_by'=>$order_by,
 //                            'customername' => $value->customer_id,
 //                            'phone' => $value->phone,
 //                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
 //                            'create_time' =>$value->create_time,
 //                            'reason' =>$value->reason,
 //                            'total' => $value->bill_total,
 //                            'status' => $status
 //         );
 //          $i++;
 //    }

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
    
    
    
    
      public function fetch_data_sales_report_daily()
    {

                    
                    
                    

                    
                     $sales_id=$_GET['sales_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                     
                     $stat="";
                   
                     if($sales_id>0) 
                     {
                          //$stat.=' AND b.sales_team_id="'.$sales_id.'"';
                           $stat.=' AND a.user_id="'.$sales_id.'"';
                     }   
                     
                     if($order_status!='ALL')
                     {     
                          if($order_status==11)
                          {
                               $stat.=' AND a.deleteid="'.$order_status.'"';
                          }
                          else
                          {
                              $stat.=' AND a.order_base="'.$order_status.'"';
                          }
                          
                     }
                     else
                     {
                         $stat.=' AND a.order_base>0 AND a.deleteid=0';
                     }
                    
                    $userslog="";
                   
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                              
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                   
                     if($this->session->userdata['logged_in']['access']=='11')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                          
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                            
                            
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                                 
                    }
                    
                      if($this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                           
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                            
                            
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                                 
                    }
                    
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  sg.sales_group_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                    
                  
                     
                     
                    
                         
                     $result=$this->db->query("SELECT a.*,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."'    $stat $userslog GROUP BY a.id ORDER BY a.id DESC");
                     
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value)
                     {
                       
                       
                       
                                   

                                        
                                        
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT a.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                


                                    $driver_name = "";
                                    $driver_phone = "";
                                    $driver = $this->Main_model->where_names('driver', 'id', $value->driver_id);
                                    foreach ($driver as $driver_v) {
                                        $driver_name = $driver_v->name.' |';
                                        $driver_phone = $driver_v->phone;
                                        $vehicle_id = $driver_v->vehicle_id;
                                        
                                    }
                                    
                                    
                                        $vehicle_number = "";
                                        $vehicle_name = "";
                                        $vehicle = $this->Main_model->where_names('vehicle', 'id', $value->vehicle_id);
                                        foreach ($vehicle as $vehicle_v) {
                                            $vehicle_name = $vehicle_v->vehicle_name.' > ';
                                            $vehicle_number = $vehicle_v->vehicle_number;
                                            $vehicle_id = $vehicle_v->id;
                                        }

                       
                                                               
                                        
                                
                                     
                                        $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_group=implode(",", $sales_group_name);
                                    
                                    
                                   
                                     
                                     
                                     
                                     $order_by="";
                                     $sales_group_s_order_by=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->entry_user_id."' ORDER BY id DESC");
                                     $sales_group_ssorder_by=$sales_group_s_order_by->result();
                                    
                                     foreach($sales_group_ssorder_by as $val)
                                     { 
                                       
                                      
                                                $order_by=$val->name;
                                                
                         
                                    }
                                    
                                    
                                     $behalf_of="";
                                     $sales_group_s_behalf_of=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->user_id."' ORDER BY id DESC");
                                     $sales_group_ssbehalf_of=$sales_group_s_behalf_of->result();
                                    
                                     foreach($sales_group_ssbehalf_of as $val)
                                     { 
                                       
                                      
                                                $behalf_of=$val->name;
                                                
                         
                                    }
                                     
                                    
                                      
                                    
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                                $sales_team=$val->name;
                                                $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                    
                                   
                                    
                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                     $sales_head_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                             $sales_head_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_head=implode(",", $sales_head_name);
                                    
                                    
                       
                       
                         $status="Order Completed";
                         if($value->finance_status=='3')
                         {
                             $status='Finance Approved';
                         }
                         
                         if($value->finance_status=='4')
                         {
                             $status='Delivered';
                         }
                         
                         if($value->finance_status=='5')
                         {
                             $status='Reconciliation Completed';
                         }
                         
                         if($value->deleteid=='0')
                         {
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'base_id' => base64_encode($value->id),
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'payment_mode' => $value->payment_mode,
                            'driver'=>$driver_name.' '.$vehicle_name.' '.$vehicle_number,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'route_name'=>$route_name,
                            'behalf_of'=>$behalf_of,
                            'order_by'=>$order_by,
                            'customername' => $value->company_name,
                            'phone' => $value->phone,
                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                            'create_time' =>$value->create_time,
                            'reason' =>$value->reason,
                            'total' => $value->bill_total,
                            'status' => $status
                            

                        );


                        $i++;
                      }

                     }


 // $resultReturns=$this->db->query("SELECT a.*,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM order_sales_return_complaints as a JOIN customers as b ON a.customer=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '$formdate 00:00:00' AND '$todate 23:59:59' $stat $userslog AND a.deleteid = '0' GROUP BY a.id ORDER BY a.id DESC");

 //    foreach ($resultReturns as $key => $value) {

                                        
 //                                                               $route_name="";
 //                                                               $result_account_head=$this->db->query("SELECT a.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
 //                                                               $result_account_head_text=$result_account_head->result();
                                                              
 //                                                               foreach($result_account_head_text as $ass)
 //                                                               {
 //                                                                                        $route_name=$ass->name;
                                                                                       
 //                                                               }
                                                                


 //                                    $driver_name = "";
 //                                    $driver_phone = "";
 //                                    $driver = $this->Main_model->where_names('driver', 'id', $value->driver_id);
 //                                    foreach ($driver as $driver_v) {
 //                                        $driver_name = $driver_v->name.' |';
 //                                        $driver_phone = $driver_v->phone;
 //                                        $vehicle_id = $driver_v->vehicle_id;
                                        
 //                                    }
                                    
                                    
 //                                        $vehicle_number = "";
 //                                        $vehicle_name = "";
 //                                        $vehicle = $this->Main_model->where_names('vehicle', 'id', $value->vehicle_id);
 //                                        foreach ($vehicle as $vehicle_v) {
 //                                            $vehicle_name = $vehicle_v->vehicle_name.' > ';
 //                                            $vehicle_number = $vehicle_v->vehicle_number;
 //                                            $vehicle_id = $vehicle_v->id;
 //                                        }

                       
                                                               
                                        
                                
                                     
 //                                        $sales_group_data=explode('|', $value->sales_group);
                                        

 //                                     $sales_group_name=array();
 //                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
 //                                     $sales_group_ss=$sales_group_s->result();
                                    
 //                                     foreach($sales_group_ss as $val)
 //                                     { 
                                       
                                      
 //                                               $sales_group_name[]=$val->name;
                         
 //                                    }
                                    
 //                                     $sales_group=implode(",", $sales_group_name);
                                    
                                    
                                   
                                     
                                     
                                     
 //                                     $order_by="";
 //                                     $sales_group_s_order_by=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->entry_user_id."' ORDER BY id DESC");
 //                                     $sales_group_ssorder_by=$sales_group_s_order_by->result();
                                    
 //                                     foreach($sales_group_ssorder_by as $val)
 //                                     { 
                                       
                                      
 //                                                $order_by=$val->name;
                                                
                         
 //                                    }
                                    
                                    
 //                                     $behalf_of="";
 //                                     $sales_group_s_behalf_of=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->user_id."' ORDER BY id DESC");
 //                                     $sales_group_ssbehalf_of=$sales_group_s_behalf_of->result();
                                    
 //                                     foreach($sales_group_ssbehalf_of as $val)
 //                                     { 
                                       
                                      
 //                                                $behalf_of=$val->name;
                                                
                         
 //                                    }
                                     
                                    
                                      
                                    
                                    
 //                                     $sales_team="";
 //                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
 //                                     $sales_group_ss=$sales_group_s->result();
                                    
 //                                     foreach($sales_group_ss as $val)
 //                                     { 
                                       
                                      
 //                                                $sales_team=$val->name;
 //                                                $define_saleshd_id=$val->define_saleshd_id;
                         
 //                                    }
                                    
                                   
                                    
 //                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
 //                                     $sales_head_name=array();
 //                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
 //                                     $sales_group_ss=$sales_group_s->result();
                                    
 //                                     foreach($sales_group_ss as $val)
 //                                     { 
                                       
                                      
 //                                             $sales_head_name[]=$val->name;
                         
 //                                    }
                                    
 //                                     $sales_head=implode(",", $sales_head_name);
 //         $array[] = array(
 //                            'no' => $i, 
 //                            'id' => $value->id, 
 //                            'base_id' => base64_encode($value->id),
 //                            'order_id' => $value->order_id, 
 //                            'order_no' => $value->re_order_no,
 //                            'payment_mode' => $value->payment_mode,
 //                            'driver'=>$driver_name.' '.$vehicle_name.' '.$vehicle_number,
 //                            'sales_group' => $sales_group,
 //                            'sales_head' => $sales_head,
 //                            'sales_team' => $sales_team,
 //                            'route_name'=>$route_name,
 //                            'behalf_of'=>$behalf_of,
 //                            'order_by'=>$order_by,
 //                            'customername' => $value->customer_id,
 //                            'phone' => $value->phone,
 //                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
 //                            'create_time' =>$value->create_time,
 //                            'reason' =>$value->reason,
 //                            'total' => $value->bill_total,
 //                            'status' => $status
 //         );
 //          $i++;
 //    }

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
       public function fetch_data_sales_report_daily_export()
    {

                    
                    
                    

                    
                     $sales_id=$_GET['sales_id'];
                      $order_status=$_GET['order_status'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     
                     
                     
                     $stat="";
                   
                     if($sales_id>0) 
                     {
                          //$stat.=' AND b.sales_team_id="'.$sales_id.'"';
                          $stat.=' AND a.user_id="'.$sales_id.'"';
                         
                     }   
                     
                     if($order_status!='ALL')
                     {     
                          if($order_status==11)
                          {
                               $stat.=' AND a.deleteid="'.$order_status.'"';
                          }
                          else
                          {
                              $stat.=' AND a.order_base="'.$order_status.'"';
                          }
                          
                     }
                     else
                     {
                         $stat.=' AND a.order_base>0 AND a.deleteid=0';
                     }
                    
                    $userslog="";
                   
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                              
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                          
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                                  
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';    
                            
                          
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                           
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                            
                            
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  sg.sales_group_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                    
                  
                     
                     
                    
                         
                     $result=$this->db->query("SELECT a.*,a.customer_id,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."'   $stat $userslog GROUP BY a.id ORDER BY a.id DESC");
                     
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value)
                     {
                       
                       
                       
                                 
                             
                            
                                     

                                        
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT a.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                        
                                
                                     
                                        $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_group=implode(",", $sales_group_name);
                                     
                                     
                                     
                                     $order_by="";
                                     $sales_group_s_order_by=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->entry_user_id."' ORDER BY id DESC");
                                     $sales_group_ssorder_by=$sales_group_s_order_by->result();
                                    
                                     foreach($sales_group_ssorder_by as $val)
                                     { 
                                       
                                      
                                                $order_by=$val->name;
                                                
                         
                                    }
                                    
                                    
                                     $behalf_of="";
                                     $sales_group_s_behalf_of=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->user_id."' ORDER BY id DESC");
                                     $sales_group_ssbehalf_of=$sales_group_s_behalf_of->result();
                                    
                                     foreach($sales_group_ssbehalf_of as $val)
                                     { 
                                       
                                      
                                                $behalf_of=$val->name;
                                                
                         
                                    }
                                     
                                     
                                     
                                     
                                     
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_team=$val->name;
                                                $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                    
                                   
                                    
                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                     $sales_head_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                             $sales_head_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_head=implode(",", $sales_head_name);
                                    
                                    
                       
                       
                         $status="Order Completed";
                         if($value->finance_status=='3')
                         {
                             $status='Finance Approved';
                         }
                         
                         if($value->finance_status=='4')
                         {
                             $status='Delivered';
                         }
                         
                         if($value->finance_status=='5')
                         {
                             $status='Reconciliation Completed';
                         }


                          $driver_name = "";
                                    $driver_phone = "";
                                    $driver = $this->Main_model->where_names('driver', 'id', $value->driver_id);
                                    foreach ($driver as $driver_v) {
                                        $driver_name = $driver_v->name.' | ';
                                        $driver_phone = $driver_v->phone;
                                        $vehicle_id = $driver_v->vehicle_id;
                                        
                                    }
                                    
                                    
                                        $vehicle_number = "";
                                        $vehicle_name = "";
                                        $vehicle = $this->Main_model->where_names('vehicle', 'id', $value->vehicle_id);
                                        foreach ($vehicle as $vehicle_v) {
                                            $vehicle_name = $vehicle_v->vehicle_name.' > ';
                                            $vehicle_number = $vehicle_v->vehicle_number;
                                            $vehicle_id = $vehicle_v->id;
                                        }

                         
                         
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'payment_mode' => $value->payment_mode,
                            'driver'=>$driver_name.' '.$vehicle_name.' '.$vehicle_number,
                            'route_name'=>$route_name,
                            'order_by'=>$order_by,
                            'behalf_of'=>$behalf_of,
                            'customername' => $value->company_name,
                            'customer_id' => $value->customer_id,
                             'phone' => $value->phone,
                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                            'create_time' =>$value->create_time,
                            'reason' =>$value->reason,
                            'total' => $value->bill_total,
                            'status' => $status
                            

                        );


                        $i++;

                     }

                       $filename='daily_sales_report_'.$formdate.'_TO_'.$todate; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");
                      
                     
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="13"><h3>Daily Sales Report <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                        <thead>
                        <tr>


                          <th>No</th>
                          <th>Bill No</th>
                          <th>Date</th>
                          <th>Time</th>
                          <th>Customer Name</th>
                          <!-- <th>Customer ID</th> -->
                          <th>Phone</th>
                          <th>Area</th>
                          <th>Net Amount</th>
                          <th>Payment_Mode</th>
                          <th>Driver</th>
                          <!--<th>Behalf of</th>-->
                          <th>Order By</th>
                          <th>Status</th>
                         
            
                        </tr>
                      </thead>
                     
                        <tbody>
                            
                            
                
                            
                            
                            <?php
                            
                            foreach($array as $vl)
                            {
                                ?>
                          <tr  class="trpoint">
                           <td><?php echo $vl['no']; ?></td>
                           <td>"<?php echo $vl['order_no']; ?>"</td>
                           <td><?php echo $vl['create_date']; ?></td>
                           <td><?php echo $vl['create_time']; ?></td>
                           <td><?php echo $vl['customername']; ?></td>
                           
                            <td><?php echo $vl['phone']; ?></td>
                           <td><?php echo $vl['route_name']; ?></td>
                           <td><b> <?php echo $vl['total']; ?></b></td>
                              <td><?php echo $vl['payment_mode']; ?></td>
                               <td><?php echo $vl['driver']; ?></td>
                           <!--<td><?php echo $vl['sales_team']; ?></td>-->
                           <td><?php echo $vl['behalf_of']; ?></td>
                           <td><?php echo $vl['reason']; ?></td>
                          </tr>
                                <?php
                            }
                            
                            ?>
                          
                         
                            
                      
                        
                        
                        
                      
                      </tbody>
                      
                      
                   
                      
                    </table>
                   <?php

    }
    
    
    
    
    
    
    
     public function fetch_data_sales_report_daily_test_export()
    {

                    
                    
                   

                    
                     $sales_id=$_GET['sales_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                     
                     $stat="";
                   
                     if($sales_id>0) 
                     {
                          //$stat.=' AND b.sales_team_id="'.$sales_id.'"';
                           $stat.=' AND a.user_id="'.$sales_id.'"';
                     }   
                     
                     if($order_status!='ALL')
                     {     
                          if($order_status==11)
                          {
                               $stat.=' AND a.deleteid="'.$order_status.'"';
                          }
                          else
                          {
                              $stat.=' AND a.order_base="'.$order_status.'"';
                          }
                          
                     }
                     else
                     {
                         $stat.=' AND a.order_base>0 AND a.deleteid=0';
                     }
                    
                    $userslog="";
                   
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                              
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                   
                     if($this->session->userdata['logged_in']['access']=='11')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                          
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                            
                            
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                                 
                    }
                    
                      if($this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                                        
                            $sales_team_id = array($this->userid);
                           
                          
                            $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                            $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                            $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';   
                            
                            
                         
                           //$userslog.=' AND  a.sales_team_id IN ('.$sales_team_id.')';    
                                 
                    }
                    
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                          $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  sg.sales_group_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                    
                  
                     
                     
                    
                         
                     $result=$this->db->query("SELECT a.*,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head, SUM(oplp.amount) as product_totals FROM orders_process as a LEFT JOIn order_product_list_process oplp ON oplp.order_id = a.id JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' $stat $userslog AND oplp.deleteid = '0' AND oplp.product_id > 0 GROUP BY a.id ORDER BY a.id DESC");
                     // echo "SELECT a.*,b.company_name,b.phone,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head, SUM(oplp.amount) as product_totals FROM orders_process as a LEFT JOIn order_product_list_process oplp ON oplp.order_id = a.id JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' $stat $userslog AND oplp.deleteid = '0' AND oplp.product_id > 0 GROUP BY a.id ORDER BY a.id DESC";
                     // exit;
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value)
                     {
                       
                       
                       
                                   

                                        
                                        
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT a.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                


                                    $driver_name = "";
                                    $driver_phone = "";
                                    $driver = $this->Main_model->where_names('driver', 'id', $value->driver_id);
                                    foreach ($driver as $driver_v) {
                                        $driver_name = $driver_v->name.' |';
                                        $driver_phone = $driver_v->phone;
                                        $vehicle_id = $driver_v->vehicle_id;
                                        
                                    }
                                    
                                    
                                        $vehicle_number = "";
                                        $vehicle_name = "";
                                        $vehicle = $this->Main_model->where_names('vehicle', 'id', $value->vehicle_id);
                                        foreach ($vehicle as $vehicle_v) {
                                            $vehicle_name = $vehicle_v->vehicle_name.' > ';
                                            $vehicle_number = $vehicle_v->vehicle_number;
                                            $vehicle_id = $vehicle_v->id;
                                        }

                       
                                                               
                                        
                                
                                     
                                        $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_group=implode(",", $sales_group_name);
                                    
                                    
                                   
                                     
                                     
                                     
                                     $order_by="";
                                     $sales_group_s_order_by=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->entry_user_id."' ORDER BY id DESC");
                                     $sales_group_ssorder_by=$sales_group_s_order_by->result();
                                    
                                     foreach($sales_group_ssorder_by as $val)
                                     { 
                                       
                                      
                                                $order_by=$val->name;
                                                
                         
                                    }
                                    
                                    
                                     $behalf_of="";
                                     $sales_group_s_behalf_of=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0  AND id='".$value->user_id."' ORDER BY id DESC");
                                     $sales_group_ssbehalf_of=$sales_group_s_behalf_of->result();
                                    
                                     foreach($sales_group_ssbehalf_of as $val)
                                     { 
                                       
                                      
                                                $behalf_of=$val->name;
                                                
                         
                                    }
                                     
                                    
                                      
                                    
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                                $sales_team=$val->name;
                                                $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                    
                                   
                                    
                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                     $sales_head_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                             $sales_head_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_head=implode(",", $sales_head_name);
                                    
                                    
                       
                       
                         $status="Order Completed";
                         if($value->finance_status=='3')
                         {
                             $status='Finance Approved';
                         }
                         
                         if($value->finance_status=='4')
                         {
                             $status='Delivered';
                         }
                         
                         if($value->finance_status=='5')
                         {
                             $status='Reconciliation Completed';
                         }
                         
                         if($value->deleteid=='0')
                         {
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'base_id' => base64_encode($value->id),
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'payment_mode' => $value->payment_mode,
                            'driver'=>$driver_name.' '.$vehicle_name.' '.$vehicle_number,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'route_name'=>$route_name,
                            'behalf_of'=>$behalf_of,
                            'order_by'=>$order_by,
                            'customername' => $value->company_name,
                            'phone' => $value->phone,
                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                            'create_time' =>$value->create_time,
                            'reason' =>$value->reason,
                            'total' => $value->bill_total,
                            'product_totals' => $value->product_totals,
                            'status' => $status
                            

                        );


                        $i++;
                      }

                     }

                       $filename='daily_sales_report_'.$formdate.'_TO_'.$todate; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");
                      
                     
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="13"><h3>Daily Sales Report <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                        <thead>
                        <tr>


                          <th>No</th>
                          <th>Bill No</th>
                          <th>Date</th>
                          <th>Time</th>
                          <th>Customer Name</th>
                          <th>Phone</th>
                          <th>Area</th>
                          <th>Net Amount</th>
                          <th>Net Amount W/O GST</th>
                          <th>Payment_Mode</th>
                          <th>Driver</th>
                          <!--<th>Behalf of</th>-->
                          <th>Order By</th>
                          <th>Status</th>
                         
            
                        </tr>
                      </thead>
                     
                        <tbody>
                            
                            
                
                            
                            
                            <?php
                            
                            foreach($array as $vl)
                            {
                                ?>
                          <tr  class="trpoint">
                           <td><?php echo $vl['no']; ?></td>
                           <td>"<?php echo $vl['order_no']; ?>"</td>
                           <td><?php echo $vl['create_date']; ?></td>
                           <td><?php echo $vl['create_time']; ?></td>
                           <td><?php echo $vl['customername']; ?></td>
                            <td><?php echo $vl['phone']; ?></td>
                           <td><?php echo $vl['route_name']; ?></td>
                           <td><b> <?php echo $vl['total']; ?></b></td>
                           <td><b> <?php echo $vl['product_totals']; ?></b></td>

                              <td><?php echo $vl['payment_mode']; ?></td>
                               <td><?php echo $vl['driver']; ?></td>
                           <!--<td><?php echo $vl['sales_team']; ?></td>-->
                           <td><?php echo $vl['behalf_of']; ?></td>
                           <td><?php echo $vl['reason']; ?></td>
                          </tr>
                                <?php
                            }
                            
                            ?>
                          
                         
                            
                      
                        
                        
                        
                      
                      </tbody>
                      
                      
                   
                      
                    </table>
                   <?php

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
       public function fetch_data_sales_report_daily_export_transport()
    {

                    
                    
                     $stat="";

                    
                     $orderstatus=$_GET['orderstatus'];
                     $report_name=$_GET['report_name'];
                     $report_name1=$_GET['report_name1'];
                     $assign_status=$_GET['assign_status'];
                     $finance_status=$_GET['finance_status'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     
                     
                   
                     $stat.=' AND a.order_base IN ("1","21") AND a.deleteid=0 AND a.reason!="Return To sale" AND a.assign_status="'.$assign_status.'"  AND a.finance_status="'.$finance_status.'" AND a.delivery_status="'.$orderstatus.'"';

                     if($orderstatus==2)
                     {


                     $stat.=' AND a.delivery_date_status=1';

                     }
                    
                     $userslog="";
                     $result=$this->db->query("SELECT a.*,b.company_name,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.delivery_date BETWEEN '".$formdate."' AND '".$todate."'   $stat $userslog GROUP BY a.id ORDER BY a.delivery_date DESC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value)
                     {
                       
                       
                       
                                        
                                                               $route_name="";
                                                               $r_name="";
                                                               $result_account_head=$this->db->query("SELECT a.name,r.name as r_name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                        $r_name=$ass->r_name;
                                                                                       
                                                               }
                                                                
                                                               
                                        
                                
                                     
                                        $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_group=implode(",", $sales_group_name);
                                     
                                     
                                     
                                    if($value->user_id==$value->entry_user_id)
                                     {
                                         
                                        
                                         $sales_id=$value->user_id;
                                     }
                                     else
                                     {
                                         $sales_id=$value->sales_team_id;
                                         
                                     }
                                     
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$sales_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_team=$val->name;
                                                $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                    
                                   
                                    
                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                     $sales_head_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                             $sales_head_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_head=implode(",", $sales_head_name);
                                    
                                    
                       
                       
                        
                         
                         
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'route_name'=>$route_name,
                            'r_name'=>$r_name,
                            'customername' => $value->company_name,
                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                            'create_time' =>$value->create_time,
                            'reason' =>$value->reason,
                            'total' => $value->bill_total,
                            'status' => $value->reason
                            

                        );


                        $i++;

                     }

                       $filename=$report_name1.$formdate.'_TO_'.$todate; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");
                      
                     
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="10"><h3><?php echo $report_name; ?> <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                        <thead>
                        <tr>


                          <th>No</th>
                          <th>Bill No</th>
                          <th>Date</th>
                          <th>Time</th>
                          <th>Customer Name</th>
                          <th>Route name</th>
                          <th>Area</th>
                          <th>Net Amount</th>
                          <th>Sales Person</th>
                          <th>Status</th>
                         
            
                        </tr>
                      </thead>
                     
                        <tbody>
                            
                            
                
                            
                            
                            <?php
                            
                            foreach($array as $vl)
                            {
                                ?>
                                        <tr  class="trpoint">
                           <td><?php echo $vl['no']; ?></td>
                           <td>"<?php echo $vl['order_no']; ?>"</td>
                           <td><?php echo $vl['create_date']; ?></td>
                           <td><?php echo $vl['create_time']; ?></td>
                           <td><?php echo $vl['customername']; ?></td>
                            <td><?php echo $vl['r_name']; ?></td>
                           <td><?php echo $vl['route_name']; ?></td>
                           <td><b> <?php echo $vl['total']; ?></b></td>
                           <td><?php echo $vl['sales_team']; ?></td>
                           <td><?php echo $vl['reason']; ?></td>
                          </tr>
                                <?php
                            }
                            
                            ?>
                          
                         
                            
                      
                        
                        
                        
                      
                      </tbody>
                      
                      
                   
                      
                    </table>
                   <?php

    }
    
    
    
    
    
    
    
       public function fetch_data_sales_report_daily_export_transport_assign()
    {

                    
                    
                     $stat="";

                    
                     $orderstatus=$_GET['orderstatus'];
                     $report_name=$_GET['report_name'];
                     $report_name1=$_GET['report_name1'];
                     $assign_status=$_GET['assign_status'];
                     $finance_status=$_GET['finance_status'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     
                     
                   
                     $stat.=' AND a.order_base=1 AND a.deleteid=0 AND a.assign_status>"'.$assign_status.'" AND a.finance_status>"'.$finance_status.'" AND a.delivery_status="'.$orderstatus.'"';
                    
                     $userslog="";
                     $result=$this->db->query("SELECT a.*,b.company_name,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.assign_date BETWEEN '".$formdate."' AND '".$todate."'   $stat $userslog GROUP BY a.id ORDER BY a.id DESC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value)
                     {
                                    $driver_name = "";
                                    $driver_phone = "";
                                    $driver = $this->Main_model->where_names('driver', 'id', $value->driver_id);
                                    foreach ($driver as $driver_v) {
                                        $driver_name = $driver_v->name;
                                        $driver_phone = $driver_v->phone;
                                        $vehicle_id = $driver_v->vehicle_id;
                                        
                                    }
                                    
                                    
                                        $vehicle_number = "";
                                        $vehicle_name = "";
                                        $vehicle = $this->Main_model->where_names('vehicle', 'id', $vehicle_id);
                                        foreach ($vehicle as $vehicle_v) {
                                            $vehicle_name = $vehicle_v->vehicle_name;
                                            $vehicle_number = $vehicle_v->vehicle_number;
                                            $vehicle_id = $vehicle_v->id;
                                        }

                       
                       
                                        
                                        
                                                               $route_name="";
                                                               $r_name="";
                                                               $result_account_head=$this->db->query("SELECT a.name,r.name as r_name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                        $r_name=$ass->r_name;
                                                                                       
                                                               }
                                                                
                                                               
                                        
                                
                                     
                                        $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_group=implode(",", $sales_group_name);
                                     
                                     
                                     
                                    if($value->user_id==$value->entry_user_id)
                                     {
                                         
                                        
                                         $sales_id=$value->user_id;
                                     }
                                     else
                                     {
                                         $sales_id=$value->sales_team_id;
                                         
                                     }
                                     
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$sales_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_team=$val->name;
                                                $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                    
                                   
                                    
                                     $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                     $sales_head_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                             $sales_head_name[]=$val->name;
                         
                                    }
                                    
                                     $sales_head=implode(",", $sales_head_name);
                                    
                                    
                       
                       
                        
                         
                         
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'route_name'=>$route_name,
                            'r_name'=>$r_name,
                            'driver_name'=>$driver_name,
                            'driver_phone'=>$driver_phone,
                            'vehicle_number'=>$vehicle_number,
                            'vehicle_name'=>$vehicle_name,
                            'customername' => $value->company_name,
                            'create_date' =>date('d-m-Y',strtotime($value->assign_date)),
                            'create_time' =>$value->assign_time,
                            'reason' =>$value->reason,
                            'total' => $value->bill_total,
                            'status' => $value->reason
                            

                        );


                        $i++;

                     }

                       $filename=$report_name1.$formdate.'_TO_'.$todate; 
                       header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                       header("Pragma: no-cache"); 
                       header("Expires: 0");
                      
                     
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="12"><h3><?php echo $report_name; ?> <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                        <thead>
                        <tr>


                          <th>No</th>
                          <th>Bill No</th>
                          <th>Date</th>
                          <th>Time</th>
                          <th>Customer Name</th>
                          <th>Route name</th>
                          <th>Area</th>
                          <th>Net Amount</th>
                          <th>Sales Person</th>
                          
                          <th>Driver</th>
                          <th>Vehicle</th>
                          
                          
                          <th>Status</th>
                         
            
                        </tr>
                      </thead>
                     
                        <tbody>
                            
                            
                
                            
                            
                            <?php
                            
                            foreach($array as $vl)
                            {
                                ?>
                                        <tr  class="trpoint">
                           <td><?php echo $vl['no']; ?></td>
                           <td>"<?php echo $vl['order_no']; ?>"</td>
                           <td><?php echo $vl['create_date']; ?></td>
                           <td><?php echo $vl['create_time']; ?></td>
                           <td><?php echo $vl['customername']; ?></td>
                            <td><?php echo $vl['r_name']; ?></td>
                           <td><?php echo $vl['route_name']; ?></td>
                           <td><b> <?php echo $vl['total']; ?></b></td>
                           <td><?php echo $vl['sales_team']; ?></td>
                           <td><?php echo $vl['driver_name']; ?> | <?php echo $vl['driver_phone']; ?></td>
                           <td><?php echo $vl['vehicle_name']; ?> | <?php echo $vl['vehicle_number']; ?></td>
                           
                           <td><?php echo $vl['reason']; ?></td>
                          </tr>
                                <?php
                            }
                            
                            ?>
                          
                         
                            
                      
                        
                        
                        
                      
                      </tbody>
                      
                      
                   
                      
                    </table>
                   <?php

    }
    
    
    
    
    
    
      public function api_report_fetch()
    {

                    
                    
                    
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     
                     
                    $curl = curl_init();
                    
                    curl_setopt_array($curl, array(
                      CURLOPT_URL => 'https://api-lb-ext.unolo.com/unprotected/login',
                      CURLOPT_RETURNTRANSFER => true,
                      CURLOPT_ENCODING => '',
                      CURLOPT_MAXREDIRS => 10,
                      CURLOPT_TIMEOUT => 0,
                      CURLOPT_FOLLOWLOCATION => true,
                      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                      CURLOPT_CUSTOMREQUEST => 'GET',
                      CURLOPT_HTTPHEADER => array(
                        'id: 9428',
                        'password: gNRua3sc9ewy1Lx7'
                      ),
                    ));
                    
                    $response = curl_exec($curl);
                   
                    $response= json_decode($response);
                    $token=$response->token;
                                         
                      curl_setopt_array($curl, array(
                      CURLOPT_URL => 'https://api-lb-ext.unolo.com/api/protected/dslDetail?start='.$formdate.'&end='.$todate,
                      CURLOPT_RETURNTRANSFER => true,
                      CURLOPT_ENCODING => '',
                      CURLOPT_MAXREDIRS => 10,
                      CURLOPT_TIMEOUT => 0,
                      CURLOPT_FOLLOWLOCATION => true,
                      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                      CURLOPT_CUSTOMREQUEST => 'GET',
                      CURLOPT_HTTPHEADER => array(
                        'id: 9428',
                        'token: '.$token
                      ),
                    ));
                    
                    $responsedata = curl_exec($curl);
                    curl_close($curl);
                    $responsedata= json_decode($responsedata);
                    
                 
           
                     $i=1;
                     $array=array();
                      
                     foreach ($responsedata as  $value) {
                       
                       
                       $status="";
                                    
                                    if($value->type==0)
                                    {
                                        $status='Visited';
                                    }
                                     if($value->type==1)
                                    {
                                        $status='Subsequent Visited';
                                    }
                                    
                                    
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->employeeID,
                            'name'=>$value->firstName.' '.$value->lastName,
                            'address' => $value->addressDescription,
                            'startTime' => $value->startTime,
                            'endTime' => $value->endTime,
                            'status' => $status,
                            'internalEmpID' => $value->internalEmpID
                            
                            

                        );


                        $i++;

                     }

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
   
        public function trial_balance_report_full()
    {

                    
                       $formdate=$_GET['formdate'];
                       $todate=$_GET['fromto'];
                 
                    
                        $resultaset=$this->trial_balance_report1_sub($formdate,$todate);
                
                        $resulta=json_decode($resultaset);
                   
                      
                
                        $a=0;
                        foreach($resulta as $vl)
                        {
                            $a+=$vl->credit;
                        }
                        
                      
                        
                        $resultb=$this->trial_balance_report_sub($formdate,$todate);
                        
                        $resultb=json_decode($resultb);
                            
                            
                        $b=0;
                        foreach($resultb as $vl)
                        {
                            $b+=$vl->credit;
                        }
                           
                         
                      
                        $total=$a-$b;
                       
                        $total=abs($total);
                    

                      
                    
                     
                
                  $resulth=$this->db->query("SELECT b.id as account_type_id,b.name as account_type_name  FROM accountheads_sub_group as a JOIN accounttype as b ON a.account_type=b.id WHERE b.deleteid=0   GROUP BY b.id ORDER BY b.sort_order ASC");
                  $resulth=$resulth->result();
                   
                  $arrayhead=array(); 
                   
                  foreach ($resulth as  $valuevv)
                  {
                     
                     
                     
                     $result=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0  AND account_type='".$valuevv->account_type_id."'   ORDER BY trail_balance_sort ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                     $array1=array();
                     $credits1total=0;
                      $debit1total=0;
                     foreach ($result as  $value) {
                         
                         
                                        
                                         $credits1=0;
                                         $debit1=0;
                                         $balance1=0;
                                         $set=0;
                                         
                                         
                                         
                                         if($value->id==104)
                                         {
                                              $result=$this->db->query("SELECT SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=3 ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==52){
                                              $result=$this->db->query("SELECT SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==116){


                                              $formdate2=date('2023-07-01');
                                              $result=$this->db->query("SELECT SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==119){

                                              $formdate2=date('2023-04-01');
                                              $result=$this->db->query("SELECT SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0  ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==68)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=1 ORDER BY id DESC");
                                         
                                         }
                                         else
                                         {
                                              $result=$this->db->query("SELECT SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                         
                                         }
                                         
                                        
                                         
                                         
                                         $result=$result->result();
                                         foreach($result as $partys1ss)
                                         { 
                                             
                                                  if($value->trail_view_status==0)
                                                  {  
                                                     
                                                     if($partys1ss->totaldebit!='')
                                                     {  
                                                          
                                                          if($value->id==116)
                                                          {


                                                                $totalcommssion=0;
                                                                // $resultset=$this->db->query("SELECT SUM(credits) as totalcridit FROM all_ledgers WHERE deleteid=0 AND customer_id='252' AND party_type=5  AND commission_customer>0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                                                // $resultset=$resultset->result();
                                                                // foreach($resultset as $ss)
                                                                // {
                                                                //    $totalcommssion= $ss->totalcridit;
                                                                // }


                                                              $credits1=$partys1ss->totaldebit-$totalcommssion;
                                                          }
                                                          else
                                                          {
                                                               $credits1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                     }
                                                     else
                                                     {
                                                          $credits1=0;
                                                     }
                                                    
                                                     $credits1=abs($credits1);
                                                     $set=1;
                                                     $creditssell=$credits1;
                                                   
                                                  }
                                                  if($value->trail_view_status==1)
                                                  {
                                                      if($partys1ss->totalcridit!='')
                                                      {
                                                          
                                                          if($value->id==119)
                                                          {
                                                              $debit1=$partys1ss->totalcridit;
                                                          }
                                                          else
                                                          {
                                                              $debit1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                      }
                                                      else
                                                      {
                                                          $debit1=0;
                                                      } 
                                                      
                                                      $debit1=abs($debit1);
                                                      $creditssell=$debit1;
                                                   
                                                  }
                                                  
                                                  
                                                
                                                  
                                         }
                                          
                                       

                                     $ssurl=base_url().'index.php/report/balancereport_base_ledger?accountshead='.$value->id;
                                       if($value->id==124)
                                       {


                                                                           $credits1=0;
                                                                            $result_stock=$this->db->query("SELECT selling_average_price,average_price,stock FROM product_list WHERE deleteid=0 AND stock>0  ORDER BY id DESC");
                                                                            $result_stock=$result_stock->result();
                                                                            foreach($result_stock as $stock)
                                                                            {
                                                                                
                                                                                $selling_average_price=$stock->selling_average_price;
                                                                                $average_price=$stock->average_price;
                                                                                $profile_loss_price=$selling_average_price-$average_price;
                                                                                $valueprice=abs($profile_loss_price);
                                                                                //$credits1+=$valueprice*$stock->stock;
                                                                                
                                                                            }
                             


                                        $ssurl="#";

                                       }
                                  
                                       $credits1total+=$credits1;
                                       $debit1total+=$debit1;
                     
                                        $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $value->id, 
                                            'name' => $value->name, 
                                            'account_type' => $value->account_type,
                                            'trail_view_status' => $value->trail_view_status,
                                            'url'=> $ssurl,
                                            'credit' => round($credits1,2),
                                            'debit' => round($debit1,2),
                                            'set' => round($credits1+$debit1,2)
                
                                        );
                            
                            

                        $i++;

                     }
                     
                     
                     
                     
                     
                     
                     
                     $resultbank=$this->db->query("SELECT a.* FROM bankaccount as a JOIN  bankaccount_manage  as b ON a.id=b.bank_account_id WHERE a.deleteid=0 AND b.deleteid=0  AND  b.account_type='".$valuevv->account_type_id."'  GROUP BY a.id ORDER BY a.id ASC");
                     $resultbank=$resultbank->result();
                     
                     
                     $credits1totalbank=0;
                     $debit1totalbank=0;
                     $bankcash_credit=0;
                     $bankcash_debit=0;

                     foreach ($resultbank as  $valueb) 
                     {
                         
                         
                            
                            
                                         $setbank=0;
                                         $debitbank1=0;
                                         $creditsbank1=0;
                                         $resultb=$this->db->query("SELECT SUM(credit) as totalcridit,SUM(debit) as totaldebit,SUM(credit-debit) as total FROM bankaccount_manage WHERE deleteid=0 AND bank_account_id='".$valueb->id."'  ORDER BY id DESC");
                                         $resultb=$resultb->result();
                                         foreach($resultb as $partys1sss)
                                         {
                                             
                                             
                                                      $balancebank=$partys1sss->total;
                                                      
                                                      if($balancebank>0)
                                                      {
                                                          $trail_view_status=0;
                                                          $creditsbank1=$balancebank;

                                                      }
                                                      else
                                                      {
                                                            $trail_view_status=1;
                                                            $debitbank1=$balancebank;
                                                            $debitbank1=abs($debitbank1);


                                                      }

                                                      $balancebank=abs($balancebank);
                    
                    
                                                      
                                                     
                                                      
                                                      
                                                      $setbank=1;
                                                
                                         }
                             
                                       
                                       
                                      
                                      
                                       if($valueb->id!=25)
                                       {


                                       $credits1totalbank+=$creditsbank1;
                                       $debit1totalbank+=$debitbank1; 

                                       } 

                                       if($valueb->id==25)
                                       {


                                       $bankcash_credit=$creditsbank1;
                                       $bankcash_debit+=$debitbank1; 

                                       }   
                                     
                                        

                                      if($valuevv->account_type_id==25 && $valueb->id==25)  
                                      {

                                      }
                                      else
                                      {
                                        $array1[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valueb->id, 
                                            'account_type' => $valuevv->account_type_id,
                                            'name' => $valueb->bank_name, 
                                            'trail_view_status' => $trail_view_status,
                                            'url'=>base_url().'index.php/bankaccount/statement?bank_id='.$valueb->id.'&name='.$valueb->bank_name,
                                            'credit' => round($balancebank,2),
                                            'debit' => round($balancebank,2),
                                            'set' => round($creditsbank1+$debitbank1,2)
                
                                        );
                                      }


                                   
                         
                        
                       


                        $i++;

                     }
                     

                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     $arrayval=array_merge($array,$array1);
                     
                     
                     $totalset=$credits1total+$debit1total;
                      $totalsetbank=$credits1totalbank+$debit1totalbank;
                     
                     if($valuevv->account_type_id==25)
                     {
                         
                         $arrayhead[]=array(
                           
                         'id'=>$valuevv->account_type_id,
                         'account_type_name'=>$valuevv->account_type_name,
                         'debit'=>round($debit1totalbank,2),
                         'credit'=>round($credits1totalbank,2),
                         'set'=>round($totalsetbank,2),
                         'sub'=>$arrayval
                         
                         
                         );
                         
                     }
                     elseif($valuevv->account_type_id==27)
                     {
                          $totalsetbank=$creditsbank1+$bankcash_debit;

                    
                         
                         $arrayhead[]=array(
                           
                         'id'=>$valuevv->account_type_id,
                         'account_type_name'=>$valuevv->account_type_name,
                         'debit'=>round($bankcash_debit+$debit1total,2),
                         'credit'=>round($bankcash_credit+$credits1total,2),
                         'set'=>round($totalsetbank+$totalset,2),
                         'sub'=>$arrayval
                         
                         
                         );
                         
                     }
                     else
                     {
                         $arrayhead[]=array(
                           
                         'id'=>$valuevv->account_type_id,
                         'account_type_name'=>$valuevv->account_type_name,
                         'debit'=>round($debit1total,2),
                         'credit'=>round($credits1total,2),
                         'set'=>round($totalset,2),
                         'sub'=>$arrayval
                         
                         
                         );
                     }
                     
                       
                     
                     
                     
                     
                  }
                    
                    
               
                     
                     
                    
                  echo json_encode($arrayhead);

    }
    
    
    

    
    
    
     public function trial_balance_report_full_beta_test()
    {


            
                        $formdate='2023-10-01';
                        $formdate=date('Y-m-d',strtotime($formdate."-1 days"));
                        $todate=$_GET['fromto'];
                        $formdate=$_GET['formdate'];
                        //$todate=date('Y-m-d',strtotime($todate."-1 days"));
                 
                    
                        $resultaset=$this->trial_balance_report1_sub($formdate,$todate);
                
                        $resulta=json_decode($resultaset);
                   
                      
                
                        $a=0;
                        foreach($resulta as $vl)
                        {
                            $a+=$vl->credit;
                        }
                        
                      
                        
                        $resultb=$this->trial_balance_report_sub($formdate,$todate);
                        
                        $resultb=json_decode($resultb);
                            
                            
                        $b=0;
                        foreach($resultb as $vl)
                        {
                            $b+=$vl->credit;
                        }
                           
                         
                      
                        $total=$a-$b;
                       
                        $total=abs($total);
                    

                      
                    
                     
                
                  $resulth=$this->db->query("SELECT b.id as account_type_id,b.name as account_type_name  FROM accountheads_sub_group as a JOIN accounttype as b ON a.account_type=b.id WHERE b.deleteid=0   GROUP BY b.id ORDER BY b.name ASC");
                  $resulth=$resulth->result();
                   
                  $arrayhead=array(); 
                   
                  foreach ($resulth as  $valuevv)
                  {
                     
                     
                     
                  $result=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0  AND account_type='".$valuevv->account_type_id."'   ORDER BY name ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                     $array1=array();
                     $credits1total=0;
                      $debit1total=0;
                      $debit_status=0;
                     foreach ($result as  $value) {
                         
                         
                                        
                                         $credits1=0;
                                         $debit1=0;
                                         $balance1=0;
                                         $set=0;
                                         
                                         
                                         
                                         if($value->id==104)
                                         {
                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=3 ORDER BY id DESC");
                                         //  $result=$this->db->query("SELECT SUM(a.credits - a.debits) as totalsum FROM all_ledgers as a LEFT JOIN vendor as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=3 AND b.deleteid=0 ORDER BY a.id DESC");

$result=$this->db->query("SELECT (SUM(a.credits) - SUM(a.debits)) AS totalsum FROM all_ledgers AS a  LEFT JOIN vendor AS c ON a.customer_id = c.id WHERE a.deleteid = '0'  AND c.deleteid='0'  AND c.mark_customer_id IN ('1','-1','0')   AND a.payment_date <='".$todate."' AND a.party_type='3' GROUP BY a.customer_id ORDER BY a.payment_date ASC");


                                           $debit_status =1;
                                         
                                         }
                                         elseif($value->id==52){
                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$value->id."' AND payment_date<='".$todate."' AND party_type NOT IN ('4','8','10')  ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==116){

                                              $formdate2=date('2023-04-01');

      // $result=$this->db->query("SELECT 
      // (SELECT SUM(debits) FROM all_ledgers WHERE `payment_date` BETWEEN '".$todate."' AND '".$todate."' AND deleteid=0 AND account_heads_id_2 = 116 
      // AND order_id > 0) AS difference, (SELECT SUM(credits) - SUM(debits) FROM all_ledgers WHERE `payment_date` < '".$todate."' 
      // AND deleteid = 0 AND account_heads_id_2 = 116 AND order_id > 0) AS totalsum,
      // SUM(credits) as totalcridit, SUM(debits) as totaldebit FROM all_ledgers 
      // WHERE deleteid = 0 AND account_heads_id_2 = 116 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id > 0 ORDER BY id DESC");

                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0 AND party_type NOT IN ('4','8','10')  ORDER BY id DESC");
                                         

      $result=$this->db->query("SELECT SUM((b.rate+b.commission)*b.qty) as totalsum, SUM((b.rate+b.commission)*b.qty) as totalcridit,SUM((b.rate+b.commission)*b.qty) as totaldebit FROM orders_process as a join order_product_list_process as b ON a.id=b.order_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.order_base NOT IN ('0','-1') AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");



                                           //    $result=$this->db->query("SELECT SUM(a.bill_sub_total) as totalsum, SUM(a.bill_sub_total) as totalcridit,SUM(a.bill_sub_total) as totaldebit FROM orders_process as a  WHERE a.deleteid=0  AND a.order_base NOT IN ('0','-1','-2') AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");


                                         }
                                         elseif($value->id==119){

                                              $formdate2=date('2023-04-01');
                                              $result=$this->db->query("SELECT SUM(credits_sub_total-debits) as totalsum, SUM(credits_sub_total) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0 AND party_type NOT IN ('4','8','10') ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==68)
                                         {

                                                 //$result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid=0 AND party_type=1 group by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=1 AND a.cnn_status=0 AND a.payment_date<='".$todate."' AND b.mark_vendor_id IN ('0','1','-1') GROUP BY a.customer_id");


                                                 $debit_status =1;
                                         
                                         }
                                         elseif($value->id==383)
                                         {


                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND auto_expence_bank_status='1'  AND party_type=2 AND payment_date<='".$todate."' ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==381)
                                         {


                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='".$value->id."' AND party_type=5 AND payment_date<='".$todate."' ORDER BY id DESC");
                             $debit_status =0;

                                         }
                                         elseif($value->id==372)
                                         {


                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='372' AND party_type=5 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                             $debit_status =1;

                                         }
                                         elseif($value->id==382)
                                         {


                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='142' AND party_type=5 AND tcs_status=1 AND payment_date<='".$todate."' ORDER BY id DESC");
                             $debit_status =0;

                                         }
                                         elseif($value->id==373)
                                         {






                                               $resultlocality=$this->db->query("SELECT customer_id FROM commen_ledgers");
                                               $resultlocality=$resultlocality->result();
                                               foreach($resultlocality as $vl)
                                               {
                                                   if($vl->customer_id!=0)
                                                   {
                                                       $array1[]=$vl->customer_id;
                                                       
                                                   }
                                                   
                                                   
                                               }


                                                                               
                                                    // $result=$this->db->query("SELECT a.id,a.name,a.customer_id,
                                                    // SUM(a.balance_dr) as totaldebit,
                                                    // SUM(a.balance_cr) as totalcridit,
                                                    // SUM(a.balance_cr-a.balance_dr) as totalsum
                                                    // FROM commen_ledgers as a   WHERE  a.id>0 GROUP BY a.customer_id");


$resultfetch = $array1;
$result=$this->db->query("SELECT a.party_type,a.customer_id,SUM(a.debits) as totaldebit,SUM(a.credits) as totalcridit,SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a  WHERE a.deleteid=0 AND  a.customer_id IN ('".implode("','", $resultfetch)."') AND a.party_type IN ('1','3') AND a.cnn_status=0 AND a.payment_date<='".$todate."'");




                                                    $debit_status =1;
                                         
                                         }
                                         elseif($value->id==179)
                                         {

                                                 //$result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid=0 AND party_type=1 group by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN admin_users as aa ON aa.id=b.sales_team_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=1 AND a.cnn_status=1 AND b.CNN='YES'  AND a.payment_date<='".$todate."' GROUP BY a.customer_id ORDER BY aa.name ASC");



                                                 $debit_status =1;
                                         
                                         }
                                      
                                         elseif($value->id==59)
                                         {


                                           // echo "SELECT *, SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as totalcridit,SUM(a.debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date<='".$todate."' AND a.party_type=5 AND a.account_head_id='59' group by a.customer_id ORDER BY a.id DESC";
//exit;

                                          $result=$this->db->query("SELECT  SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as totalcridit,SUM(a.debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date<='".$todate."' AND a.party_type=5 AND a.account_head_id='59' group by a.customer_id ORDER BY a.id DESC");
                                          $debit_status =1;

                                        }
                                         elseif($value->id==159)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND payment_date  BETWEEN '".$formdate."' AND '".$todate."' AND party_type=2 AND driver_collection_status=1  ORDER BY id DESC");
                                            $debit_status =0;
                                         
                                         }
                                         elseif($value->id==160)
                                         {

// SELECT SUM(a.credits-a.debits) as totalopeingbalance FROM all_ledgers as a WHERE a.deleteid='0' AND a.party_type=2 AND a.driver_collection_status='0' ORDER BY a.idd DESC
                                              $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a WHERE a.deleteid='0' AND a.party_type=2 AND a.driver_collection_status='0' AND party_type NOT IN ('4','8','10') AND a.payment_date  BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                         
                                         }
                                          elseif($value->id==151)
                                         {

                                              // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=5 AND customer_id=220 ORDER BY id DESC");
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as totalcridit,SUM(a.debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.account_head_id='".$value->id."' group by a.customer_id ORDER BY a.id DESC");

                                               $debit_status =1;
                                         
                                         }
                                         
                                          elseif($value->id==152)
                                         {
                                           $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.account_head_id='".$value->id."' group by a.customer_id ORDER BY a.id DESC");
                                         }
                                        elseif($value->id==155)
                                         {
    
                                      // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id=155 ORDER BY id DESC");
  
//$formdates='2024-03-01';  
$result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=1 AND opening_balance_status=0 AND order_trancation_status=2  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
$debit_status =0;


                                         
                                         }
                                         elseif($value->id==129)
                                         {
                                            // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum,SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id=129 group by customer_id ORDER BY payment_date ASC");
                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid='0' AND account_head_id=129 GROUP by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN accountheads as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=5 AND  a.account_head_id='".$value->id."' AND a.payment_date<='".$todate."'  GROUP BY a.customer_id");



                                            $debit_status =1;
                                         
                                         }
                                          elseif($value->id==48)
                                         {

                                              //$result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND customer_id IN ('252','373') AND comission_transfered NOT IN ('5') ORDER BY id DESC");


                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND account_head_id IN ('48') AND comission_transfered NOT IN ('5') ORDER BY id DESC");
                                         
                                           // $debit_status =1;
                                         }
                                         elseif($value->id==400)
                                         {

                                              $result=$this->db->query("SELECT SUM(debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('1') AND debits>0 ORDER BY id DESC");
                                         
                                           // $debit_status =1;
                                         }
                                         elseif($value->id==154)
                                         {

                                              $result=$this->db->query("SELECT SUM(debits-credits) as totalsum, SUM(debits) as totalcridit,SUM(credits) as totaldebit FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0 ORDER BY id DESC");
                                         
                                           // $debit_status =1;
                                         }
                                          elseif($value->id==2)
                                         {


                                    //   $result=$this->db->query("SELECT SUM((CASE WHEN payment_date > '2024-05-31' THEN debits / 1.18 ELSE debits END)-credits) as totalsum, SUM(credits) as  totaldebit,SUM((CASE WHEN payment_date > '2024-05-31' THEN debits / 1.18 ELSE debits END)) as totalcridit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='".$value->id."' AND party_type=1 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                    // $debit_status =1;  


                                      $result=$this->db->query("SELECT SUM((CASE WHEN payment_date > '2024-05-31' THEN credits / 1.18 ELSE credits END)-debits) as totalsum, SUM(debits) as  totalcridit,SUM((CASE WHEN payment_date > '2024-05-31' THEN credits / 1.18 ELSE credits END)) as  totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='".$value->id."' AND party_type=1 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                    $debit_status =1;    

                             // $result=$this->db->query("SELECT SUM(debits-credits) as totalsum, SUM(credits) as  totaldebit,SUM(debits) as totalcridit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='".$value->id."' AND party_type=1 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                             //  $debit_status =1;
                                         
                                         }
                                          elseif($value->id==120)
                                         {

                                  $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_heads_id_2='".$value->id."'  AND payment_date<='".$todate."' AND party_type NOT IN ('4','8','10') ORDER BY id DESC");
                                         
                                         }
                                         // elseif($value->id ==153)
                                         // {

                                         //    $result=$this->db->query("SELECT SUM(credits) as credits, SUM(debits) as debits,SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='270' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                         // }
                                          elseif($value->id==141){
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.account_head_id='".$value->id."' ORDER BY a.id DESC");
                                         }
                                         // elseif($value->id ==172){
                                         //    $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.customer_id='3' ORDER BY a.id DESC");

                                         //      $debit_status=1;
                                         // }  
                                        elseif($value->id ==169)
                                        {
                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') AND payment_date<='".$todate."' group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                        } 
                                        elseif($value->id ==130)
                                        {
                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') AND payment_date<='".$todate."' group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                        } 
                                         elseif($value->id==165)
                                        {

                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') AND payment_date<='".$todate."' group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }
                                         elseif($value->id==142)
                                        {

                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') AND payment_date<='".$todate."' group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        } 
                                        elseif($value->id==126)
                                        {

                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='126' AND party_type NOT IN ('4','8','10') AND payment_date<='".$todate."' group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }  
                                         elseif($value->id==392)
                                        {

                                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date<='".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        } 
                                        elseif($value->id==393)
                                        {

                                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date<='".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }
                                        elseif($value->id==394)
                                        {

                                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date<='".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }  
                                        elseif($value->id==388)
                                        {

                                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date<='".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        } 
                                        elseif($value->id==390)
                                        {

                                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date<='".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }  
                                        elseif($value->id==391)
                                        {

                                        $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }  
                                        elseif($value->id==395)
                                        {

                                        $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') AND opening_balance_status=0  group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }   
                                        else
                                        {
                                            // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum,SUM(credits) as totalcridit, SUM(debits) as totaldebit,account_head_id FROM all_ledgers 
                                            //  WHERE    deleteid=0 AND account_heads_id_2='".$value->id."' ORDER BY payment_date ASC");
                                            

                                        $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                               $debit_status =1;
                                             
                                        }
                                         
                                        
                                         // Babu
                                         
                                         $result=$result->result();
                                         foreach($result as $partys1ss)
                                         { 
                                                 
                                            //  if($value->id == 48){
                                               
                                            //     $credits1 += $partys1ss->totalcridit;

                                            //     $debit1 += $partys1ss->totaldebit;

                                            // }

                                            if($debit_status ==1)
                                            {





                                               

                                                if($value->id==373)
                                                {













                                                                     if($partys1ss->totalsum>0)
                                                                    {
                                                                        $partys1ss->totalcridit=$partys1ss->totalsum;
                                                                        $partys1ss->totaldebit=0;
                                                                    }
                                                                    else
                                                                    {
                                    
                                    
                                                                        $partys1ss->totaldebit=abs($partys1ss->totalsum);
                                                                        $partys1ss->totalcridit=0;
                                    
                                                                    }


                                                                      $credits1 += $partys1ss->totalcridit;
                                                                      $debit1 += $partys1ss->totaldebit;







                                                    


                                                }
                                                elseif($value->id==372)
                                                {




                                                                      $credits1 += $partys1ss->totalcridit;
                                                                      $debit1 += $partys1ss->totaldebit;


                                                }
                                                elseif($value->id==400)
                                                {




                                                                      $credits1 += 0;
                                                                      $debit1 += $partys1ss->totaldebit*2;

                            


                                                }

                                                elseif($value->id==2)
                                                {




                                                                      $credits1 += $partys1ss->totalcridit;
                                                                      $debit1 += $partys1ss->totaldebit;


                                                }                               
                                                elseif($value->id==151)
                                                {




                                                                      $credits1 += $partys1ss->totalcridit;
                                                                      $debit1 += $partys1ss->totaldebit;


                                                }
                                                else
                                                {


                                                                     if($partys1ss->totalsum>0)
                                                                    {
                                                                        $partys1ss->totalcridit=$partys1ss->totalsum;
                                                                        $partys1ss->totaldebit=0;
                                                                    }
                                                                    else
                                                                    {
                                    
                                    
                                                                        $partys1ss->totaldebit=abs($partys1ss->totalsum);
                                                                        $partys1ss->totalcridit=0;
                                    
                                                                    }

                                                                    $credits1 += $partys1ss->totalcridit;
                                                                    $debit1 += $partys1ss->totaldebit;


                                                }






                                               


                                            }
                                            else
                                            {


                                            
                                                  if($value->trail_view_status==0)
                                                  {  
                                                     
                                                     if($partys1ss->totaldebit!='')
                                                     {  
                                                          
                                                          if($value->id==116)
                                                          {


                                                                $totalcommssion=0;
                                                                // $resultset=$this->db->query("SELECT SUM(credits) as totalcridit FROM all_ledgers WHERE deleteid=0 AND customer_id='252' AND party_type=5  AND commission_customer>0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                                                // $resultset=$resultset->result();
                                                                // foreach($resultset as $ss)
                                                                // {
                                                                //    $totalcommssion= $ss->totalcridit;
                                                                // }


                                                              $credits1=$partys1ss->totaldebit-$totalcommssion;
                                                          }
                                                          else
                                                          {
                                                               $credits1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                     }
                                                     else
                                                     {
                                                          $credits1=0;
                                                     }
                                                    
                                                     $credits1=abs($credits1);
                                                     $set=1;
                                                     $creditssell=$credits1;
                                                   


                                                  }
                                                  if($value->trail_view_status==1)
                                                  {
                                                      if($partys1ss->totalcridit!='')
                                                      {
                                                          
                                                          if($value->id==119)
                                                          {
                                                              $debit1=$partys1ss->totalcridit;
                                                          }
                                                          else
                                                          {
                                                              $debit1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                      }
                                                      else
                                                      {
                                                          $debit1=0;
                                                      } 
                                                      
                                                      $debit1=abs($debit1);
                                                      $creditssell=$debit1;




                                                   
                                                  }
                                                  
                                                }    
                                            


                                                  
                                         

                                                  
                                         }
                                          
                                       

                                    
                                    



                                   $dnone="";
                                    //  $ssurl=base_url().'index.php/report/balancereport_base_ledger?accountshead='.$value->id;

                                       switch ($value->id) {
                                        case 48:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&grouped=1&from_date=".$formdate."&to_date=".$todate;

                                            break;
                                        case 156:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=332&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 151:
                                            //$ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=220&party_type=5&from_date=".$formdate."&to_date=".$todate;
 $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&grouped=1&from_date=".$formdate."&to_date=".$todate;

                                            break;
                                        case 155:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=346&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 175:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=405&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 150:
                          $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=163&party_type=0&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 159:  case 383:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=1&party_type=2&from_date=".$formdate."&to_date=".$todate;
                                            break;  
                                         case 373:
                                            $ssurl=base_url()."index.php/customer/common_ledger?party_type=0&from_date=".$formdate."&to_date=".$todate;
                                            break;       
                                        case 160:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=0&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;
                                            case 119:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&from_date=".$formdate."&to_date=".$todate;
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;
                                        // case 172:
                                        //     $debit1=$credits1;
                                        //     $credits1=0;
                                        //     break;
                                        case 68:
                                            //$ssurl=base_url()."index.php/report/customer_balance_comparision?from_date=".$formdate."&to_date=".$todate;

                                         $ssurl=base_url()."index.php/customer/ledger?trail_balance=0&party_type=1&from_date=".$formdate."&to_date=".$todate;


                                            break;
                                         case 179:
                                            $ssurl=base_url()."index.php/customer/ledger?cnn_status=1&party_type=1&from_date=".$formdate."&to_date=".$todate;
                                            break;    
                                        case 154:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 381:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";

                                         break;


                                          case 388:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=580&party_type=0&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                             
                                         break;
                                           case 390:
                                            // $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=297&party_type=0&from_date=".$formdate."&to_date=".$todate;
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&grouped=1&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                             
                                         break;
                                         case 380:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&from_date=".$formdate;
                                             $dnone="d-nones";
                                         break;
                                        
                                         case 382:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;   
                                        case 116: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                             
                                        case 2: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&from_date=".$formdate."&to_date=".$todate;
                                        break; 
                                        case 104: 
                                            $ssurl=base_url()."index.php/vendor/ledger?trail_balance=0&from_date=".$formdate."&to_date=".$todate;
                                        break;    
                                        case 124:
                                            $credits1=0;
                                            $result_stock=$this->db->query("SELECT selling_average_price,average_price,stock FROM product_list WHERE deleteid=0 AND stock>0  ORDER BY id DESC");
                                            $result_stock=$result_stock->result();
                                            foreach($result_stock as $stock)
                                            {
                                                $selling_average_price=$stock->selling_average_price;
                                                $average_price=$stock->average_price;
                                                $profile_loss_price=$selling_average_price-$average_price;
                                                $valueprice=abs($profile_loss_price);
                                                //$credits1+=$valueprice*$stock->stock;                                                
                                            }
                                            $ssurl="#";
                                            break;
                                        default:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&grouped=1&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                            }
                                            
                                            
                                       $credits1total+=$credits1;
                                       $debit1total+=$debit1;
                        



                                        $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $value->id, 
                                            'name' => $value->name, 
                                            'account_type' => $value->account_type,
                                            'trail_view_status' => $value->trail_view_status,
                                            'url'=> $ssurl,
                                            'dnone'=> $dnone,
                                            'credit' => $credits1,
                                            'debit' => $debit1,
                                            'set' => $credits1+$debit1
                
                                        );
                            
                            

                        $i++;

                     }
                     
                     
                     
                     
                     
                     
                            
                    
                     $credit=[];
                     $debit=[];
                     $credit_cash=[];
                     $debit_cash=[];



            $result2=$this->db->query("SELECT b.bank_name,b.id,b.account_type FROM  bankaccount as b WHERE b.deleteid=0 AND b.trail_blance_spilt=0 and b.id!=25");
            $result2=$result2->result();
            foreach ($result2 as  $value) {
  $result_balance=$this->db->query("SELECT a.bank_account_id,SUM(a.credit) as total_debit,SUM(a.debit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value->id."'  AND a.party_type NOT IN('1','2','3','5') AND a.create_date<='".$todate."' AND a.deleteid=0");
                               $resultcheck=$result_balance->result(); 
                             foreach ($resultcheck as  $value1) {

                                // print_r($value1);
                                $total_debit=$value1->total_debit;
                                $total_credit=$value1->total_credit;
                                $total = $total_credit-$total_debit;
                                             

                               
                                                 if($total > 0){
                                                     $credit[] =$total;
                                                 }else{
                                                     $debit[] = abs($total);
                                                 }
                                                
                             }

                            }




 $credit_un=[];
                     $debit_un=[];
                                    $result2_un=$this->db->query("SELECT b.bank_name,b.id,b.account_type FROM  bankaccount as b WHERE b.deleteid=0 AND b.trail_blance_spilt=1 and b.id!=25");
            $result2_un=$result2_un->result();
            foreach ($result2_un as  $value_un) {
  $result_balance_un=$this->db->query("SELECT a.bank_account_id,SUM(a.credit) as total_debit,SUM(a.debit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value_un->id."'  AND a.party_type NOT IN('1','2','3','5') AND a.create_date<='".$todate."' AND a.deleteid=0");
                               $result_balance_un=$result_balance_un->result(); 
                             foreach ($result_balance_un as  $value1_un) {

                                // print_r($value1);
                                $total_debit_un=$value1_un->total_debit;
                                $total_credit_un=$value1_un->total_credit;
                                $total_un = $total_credit_un-$total_debit_un;
                                             

                               
                                                 if($total_un > 0){
                                                     $credit_un[] =$total_un;
                                                 }else{
                                                     $debit_un[] = abs($total_un);
                                                 }
                                                
                             }

                            }





                            



                            $result_cash_balance=$this->db->query("SELECT a.bank_account_id,SUM(a.credit) as total_debit,SUM(a.debit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id=25  AND a.party_type NOT IN('1','2','3','5') AND a.create_date<='".$todate."' AND a.deleteid=0");
                             $resultcheck_cash=$result_cash_balance->result(); 
                           foreach ($resultcheck_cash as  $value2) {

                              // print_r($value1);
                              $total_debit=$value2->total_debit;
                              $total_credit=$value2->total_credit;
                              $total = $total_credit-$total_debit;
                                           

                             
                                               if($total > 0){
                                                   $credit_cash[] =$total;
                                               }else{
                                                   $debit_cash[] = abs($total);
                                               }
             
                           }










                            $credit_total_bank=0;
                            $dedit_total_bank=0;
                            $credit_total_cash=0;
                            $dedit_total_cash=0;


                             $credit_total_bank_un=0;
                            $dedit_total_bank_un=0;
                           


                            foreach ($credit as $credits) {
                                $credit_total_bank += $credits;
                            }
                            foreach ($debit as $debits) {
                                $dedit_total_bank += $debits;
                            }


                            foreach ($credit_un as $credits_un) {
                                $credit_total_bank_un += $credits_un;
                            }
                            foreach ($debit_un as $debits_un) {
                                $dedit_total_bank_un += $debits_un;
                            }

                            foreach ($credit_cash as $credits) {
                                $credit_total_cash = $credits;
                            }
                            foreach ($debit_cash as $debits) {
                                $dedit_total_cash = $debits;
                            }
                            
                           
                    //  $result_balance=$this->db->query("SELECT SUM(a.debit) as total_debit,SUM(a.credit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value->id."' AND a.deleteid=0");

                     
                     $resultbank=$this->db->query("SELECT a.*,SUM(b.credit) as totalcridit,SUM(b.debit) as totaldebit,SUM(b.credit-b.debit) as total FROM bankaccount as a JOIN  bankaccount_manage  as b ON a.id=b.bank_account_id WHERE a.deleteid=0  AND b.deleteid=0 AND b.party_type NOT IN('1','2','3','5') AND   b.create_date<='".$todate."'  GROUP BY a.account_type ORDER BY a.bank_name ASC");
                     $resultbank=$resultbank->result();
                     
                     
                     $credits1totalbank=0;
                     $debit1totalbank=0;
                     $bankcash_credit=0;
                     $bankcash_debit=0;

                     foreach ($resultbank as  $valueb) 
                     {
                         
                         
                            
                            
                                         $setbank=0;
                                         $debitbank1=0;
                                         $creditsbank1=0;
                                       
                                             
                                             
                                                      $balancebank=$valueb->total;
                                                 
                                                    $debitbank1 = $dedit_total_bank;
                                                    $creditsbank1 = $credit_total_bank;  
                                                    $credits1totalbank_un =$credit_total_bank_un;
                                                    $debit1totalbank_un =$dedit_total_bank_un; 

                                                

                                                        


                                                      $balancebank=abs($balancebank);
                    
                    
                                                      
                                                     
                                                      
                                                      
                                                      $setbank=1;
                                                
                                         
                             
                                       
                                       
                                      
                                      
                                       if($valueb->id!=25)
                                       {


                                       $credits1totalbank =$credit_total_bank;
                                       $debit1totalbank =$dedit_total_bank; 

                                       } 




                                       if($valueb->id==25)
                                       {


                                       $bankcash_credit =$credit_total_cash;
                                       $bankcash_debit =$dedit_total_cash; 

                                       }   
                                     
                                        

                                   
                                       
                                        if($valuevv->account_type_id==18 && $valueb->account_type == 1){

                                            $array1[] = array(
                                                'no' => $i, 
                                                'id' => $valueb->id, 
                                                'account_type' => $valuevv->account_type_id,
                                                'name' => "CASH IN HAND", 
                                                'trail_view_status' => $trail_view_status,
                                                'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=1&from_date='.$formdate.'&to_date='.$todate,
                                                'credit' => $credit_total_cash,
                                                'debit' => $dedit_total_cash,
                                                'set' => $credit_total_cash+$dedit_total_cash
                    
                                            );

                                        }

                                       if($valuevv->account_type_id==18 && $valueb->account_type == 0){
                                            $array1[] = array(
                                            
                                                'no' => $i, 
                                                'id' => $valueb->id, 
                                                'account_type' => $valuevv->account_type_id,
                                                'name' => "BANK IN ACCOUNT", 
                                                'trail_view_status' => $trail_view_status,
                                                'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=0&trail_blance_spilt=0&from_date='.$formdate.'&to_date='.$todate,
                                                'credit' => $credit_total_bank,
                                                'debit' => $dedit_total_bank,
                                                'set' => $credit_total_bank+$dedit_total_bank,
                    
                                            );


                                        }


                                         if($valuevv->account_type_id==32 && $valueb->account_type == 0){

                                            $array1[] = array(
                                            
                                                'no' => $i, 
                                                'id' => $valueb->id, 
                                                'account_type' => $valuevv->account_type_id,
                                                'name' => "SECURED LOAN", 
                                                'trail_view_status' => $trail_view_status,
                                                'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=0&trail_blance_spilt=1&from_date='.$formdate.'&to_date='.$todate,
                                                'credit' => $credit_total_bank_un,
                                                'debit' => $dedit_total_bank_un,
                                                'set' => $credit_total_bank_un+$dedit_total_bank_un,
                    
                                            );


                                        }


                                    
                                    
                                        

                                   
                         
                        
                       


                        $i++;

                     }
                    
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                    //  $array1 =[];
                     $arrayval=array_merge($array,$array1);

                    // echo "<pre>";print_r($arrayval);
                    // exit;
                     
                     
                      $totalset=$credits1total+$debit1total;
                      //$totalsetbank=$credits1totalbank+$debit1totalbank;
                     
                     if($valuevv->account_type_id==18)
                     {
                        
                        
                         $debit1total = $debit1total + $debitbank1 + $bankcash_debit;
                         $credits1total =$credits1total + $creditsbank1 + $bankcash_credit;

                     }


                     if($valuevv->account_type_id==32)
                     {
           
                        
                         $debit1total = $debit1total + $debit1totalbank_un;
                         $credits1total =$credits1total + $credits1totalbank_un;
                         $totalset=$debit1total+$credits1total;

                     }
                    //  elseif($valuevv->account_type_id==27)
                    //  {
                    //       $totalsetbank=$creditsbank1+$bankcash_debit;

                    
                         
                    //      $arrayhead[]=array(
                           
                    //      'id'=>$valuevv->account_type_id,
                    //      'account_type_name'=>$valuevv->account_type_name,
                    //      'debit'=>round($bankcash_debit+$debit1total,2),
                    //      'credit'=>round($bankcash_credit+$credits1total,2),
                    //      'set'=>round($totalsetbank+$totalset,2),
                    //      'sub'=>$arrayval
                         
                         
                    //      );
                         
                    //  }
                    //  else
                    //  {
                         $arrayhead[]=array(
                           
                         'id'=>$valuevv->account_type_id,
                         'account_type_name'=>$valuevv->account_type_name,
                         'debit'=>$debit1total,
                         'credit'=>$credits1total,
                         'set'=>$debit1total+$credits1total,
                         'sub'=>$arrayval
                         
                         
                         );
                    //  }
                     
                       
                     
                     
                     
                     
                  }
                    
                    
               
                     
                     
                    
                  echo json_encode($arrayhead);
 
                     

    }
    



     public function trial_balance_report_full_beta()
    {

                    
                       $formdate='2023-10-01';
                       $formdate=date('Y-m-d',strtotime($formdate."-1 days"));
                       $todate=$_GET['fromto'];
                 
                    
                        $resultaset=$this->trial_balance_report1_sub($formdate,$todate);
                
                        $resulta=json_decode($resultaset);
                   
                      
                
                        $a=0;
                        foreach($resulta as $vl)
                        {
                            $a+=$vl->credit;
                        }
                        
                      
                        
                        $resultb=$this->trial_balance_report_sub($formdate,$todate);
                        
                        $resultb=json_decode($resultb);
                            
                            
                        $b=0;
                        foreach($resultb as $vl)
                        {
                            $b+=$vl->credit;
                        }
                           
                         
                      
                        $total=$a-$b;
                       
                        $total=abs($total);
                    

                      
                    
                     
                
                  $resulth=$this->db->query("SELECT b.id as account_type_id,b.name as account_type_name  FROM accountheads_sub_group as a JOIN accounttype as b ON a.account_type=b.id WHERE b.deleteid=0   GROUP BY b.id ORDER BY b.name ASC");
                  $resulth=$resulth->result();
                   
                  $arrayhead=array(); 
                   
                  foreach ($resulth as  $valuevv)
                  {
                     
                     
                     
                  $result=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0  AND account_type='".$valuevv->account_type_id."'   ORDER BY name ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                     $array1=array();
                     $credits1total=0;
                      $debit1total=0;
                      $debit_status=0;
                     foreach ($result as  $value) {
                         
                         
                                        
                                         $credits1=0;
                                         $debit1=0;
                                         $balance1=0;
                                         $set=0;
                                         
                                         
                                         
                                         if($value->id==104)
                                         {
                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=3 ORDER BY id DESC");
                                         //  $result=$this->db->query("SELECT SUM(a.credits - a.debits) as totalsum FROM all_ledgers as a LEFT JOIN vendor as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=3 AND b.deleteid=0 ORDER BY a.id DESC");

$result=$this->db->query("SELECT  (SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = 119 THEN a.credits * 1.18 ELSE a.credits END) - SUM(a.debits)) AS totalsum FROM all_ledgers AS a LEFT JOIN accountheads AS b ON a.customer_id = b.id  LEFT JOIN vendor AS c ON a.customer_id = c.id WHERE a.deleteid = '0' AND ((a.party_type ='5' AND b.name = 'grand max') OR (a.party_type = '3')) AND a.account_head_id = 104 AND a.customer_id !=61  AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' GROUP BY a.customer_id, b.name ORDER BY a.payment_date ASC"); 


                                           $debit_status =1;
                                         
                                         }
                                         elseif($value->id==52){
                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type NOT IN ('4','8','10')  ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==116){

                                              $formdate2=date('2023-04-01');

      // $result=$this->db->query("SELECT 
      // (SELECT SUM(debits) FROM all_ledgers WHERE `payment_date` BETWEEN '".$todate."' AND '".$todate."' AND deleteid=0 AND account_heads_id_2 = 116 
      // AND order_id > 0) AS difference, (SELECT SUM(credits) - SUM(debits) FROM all_ledgers WHERE `payment_date` < '".$todate."' 
      // AND deleteid = 0 AND account_heads_id_2 = 116 AND order_id > 0) AS totalsum,
      // SUM(credits) as totalcridit, SUM(debits) as totaldebit FROM all_ledgers 
      // WHERE deleteid = 0 AND account_heads_id_2 = 116 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id > 0 ORDER BY id DESC");

                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0 AND party_type NOT IN ('4','8','10')  ORDER BY id DESC");
                                         

   $result=$this->db->query("SELECT SUM((b.rate+b.commission)*b.qty) as totalsum, SUM((b.rate+b.commission)*b.qty) as totalcridit,SUM((b.rate+b.commission)*b.qty) as totaldebit FROM orders_process as a join order_product_list_process as b ON a.id=b.order_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.order_base>0 ORDER BY a.id DESC");


                                         }
                                         elseif($value->id==119){

                                              $formdate2=date('2023-04-01');
                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0 AND party_type NOT IN ('4','8','10') ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==68)
                                         {

                                                 //$result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid=0 AND party_type=1 group by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=1 AND a.cnn_status=0  GROUP BY a.customer_id");


                                                 $debit_status =1;
                                         
                                         }
                                         elseif($value->id==383)
                                         {


                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND auto_expence_bank_status='1'  AND party_type=2 ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==381)
                                         {


                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='".$value->id."' AND party_type=5 ORDER BY id DESC");
                             $debit_status =0;

                                         }
                                         elseif($value->id==372)
                                         {


                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='372' AND party_type=5 ORDER BY id DESC");
                             $debit_status =1;

                                         }
                                         elseif($value->id==382)
                                         {


                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='142' AND party_type=5 AND tcs_status=1 ORDER BY id DESC");
                             $debit_status =0;

                                         }
                                         elseif($value->id==373)
                                         {

                                                                               
                                                    $result=$this->db->query("SELECT a.id,a.name,a.customer_id,
                                                    SUM(a.balance_dr) as totaldebit,
                                                    SUM(a.balance_cr) as totalcridit,
                                                    SUM(a.balance_cr-a.balance_dr) as totalsum
                                                    FROM commen_ledgers as a   WHERE  a.id>0 GROUP BY a.customer_id");

                                                    $debit_status =1;
                                         
                                         }
                                         elseif($value->id==179)
                                         {

                                                 //$result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid=0 AND party_type=1 group by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN admin_users as aa ON aa.id=b.sales_team_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=1 AND a.cnn_status=1 AND b.CNN='YES'  GROUP BY a.customer_id ORDER BY aa.name ASC");



                                                 $debit_status =1;
                                         
                                         }
                                        elseif($value->id==175)
                                         {

                                        $result=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as totalcridit,SUM(a.debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.customer_id='405' ORDER BY a.id DESC");
                                        }

                                         
                                         elseif($value->id==59)
                                         {
                                          $result=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as totalcridit,SUM(a.debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.customer_id='161' ORDER BY a.id DESC");
                                        }
                                         elseif($value->id==159)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=2 AND driver_collection_status=1  ORDER BY id DESC");
                                            $debit_status =0;
                                         
                                         }
                                         elseif($value->id==160)
                                         {

// SELECT SUM(a.credits-a.debits) as totalopeingbalance FROM all_ledgers as a WHERE a.deleteid='0' AND a.party_type=2 AND a.driver_collection_status='0' ORDER BY a.idd DESC
                                              $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a WHERE a.deleteid='0' AND a.party_type=2 AND a.driver_collection_status='0' AND party_type NOT IN ('4','8','10') ORDER BY a.id DESC");
                                         
                                         }
                                          elseif($value->id==151)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=5 AND customer_id=220 ORDER BY id DESC");
                                               $debit_status =1;
                                         
                                         }
                                          elseif($value->id==150)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=5 AND customer_id=163 ORDER BY id DESC");
                                         
                                         }
                                          elseif($value->id==106)
                                         {
                                           $result=$this->db->query("SELECT  SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='183' ORDER BY a.id DESC");
                                         }
                                          elseif($value->id==152)
                                         {
                                           $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='229' ORDER BY a.id DESC");
                                         }
                                           elseif($value->id==164)
                                         {
                                           $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.comission_transfered NOT IN ('5') AND a.customer_id='13' ORDER BY a.id DESC");
                                         }
                                        elseif($value->id==155)
                                         {

                                      // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id=155 ORDER BY id DESC");

//$formdates='2024-03-01';
$result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=1 AND opening_balance_status=0 AND order_trancation_status=2  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
$debit_status =0;


                                         
                                         }
                                         elseif($value->id==129)
                                         {
                                            // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum,SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id=129 group by customer_id ORDER BY payment_date ASC");
                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid='0' AND account_head_id=129 GROUP by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN accountheads as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=5 AND  a.account_head_id=129  GROUP BY a.customer_id");



                                            $debit_status =1;
                                         
                                         }
                                          elseif($value->id==48)
                                         {

                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND customer_id IN ('252','373') AND comission_transfered NOT IN ('5') ORDER BY id DESC");

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND account_head_id IN ('48') AND comission_transfered NOT IN ('5') ORDER BY id DESC");
                                         
                                           // $debit_status =1;
                                         }
                                         elseif($value->id==154)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(debits) as totalcridit,SUM(credits) as totaldebit FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0 ORDER BY id DESC");
                                         
                                           // $debit_status =1;
                                         }
                                          elseif($value->id==2)
                                         {

                             $result=$this->db->query("SELECT SUM((CASE WHEN return_invoice_date > '2024-05-31' THEN debits / 1.18 ELSE debits END)-credits) as totalsum, SUM(credits) as  totaldebit,SUM((CASE WHEN return_invoice_date > '2024-05-31' THEN debits / 1.18 ELSE debits END)) as totalcridit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='".$value->id."' AND party_type=1 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                              $debit_status =1;
                                         
                                         }
                                          elseif($value->id==120)
                                         {

                                  $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_heads_id_2='".$value->id."'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type NOT IN ('4','8','10') ORDER BY id DESC");
                                         
                                         }
                                          elseif($value->id==156)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND customer_id=332 ORDER BY id DESC");

                                                   


                                                  // $debit_status=0;


                                         
                                         }
                                         elseif($value->id ==153){
                                            $result=$this->db->query("SELECT SUM(credits) as credits, SUM(debits) as debits,SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='270' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                         }
                                          elseif($value->id==141){
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.account_head_id='141' ORDER BY a.id DESC");
                                         }
                                         elseif($value->id ==172){
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.customer_id='3' ORDER BY a.id DESC");

                                          $debit_status=1;
                                         }  
                                         elseif($value->id ==170){
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.customer_id='180' ORDER BY a.id DESC");

                                        }  
                                        elseif($value->id ==169)
                                        {
                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='169' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                        } 
                                        elseif($value->id ==130)
                                        {
                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='130' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                        } 
                                         elseif($value->id==165)
                                        {

                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='165' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }
                                         elseif($value->id==142)
                                        {

                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='142' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        } 
                                        elseif($value->id==126)
                                        {

                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id='126' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                             $debit_status =1;
                                             
                                        }     
                                        else
                                        {
                                            // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum,SUM(credits) as totalcridit, SUM(debits) as totaldebit,account_head_id FROM all_ledgers 
                                            //  WHERE    deleteid=0 AND account_heads_id_2='".$value->id."' ORDER BY payment_date ASC");
                                            

                                        $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND account_head_id='".$value->id."' AND party_type NOT IN ('4','8','10') group by customer_id ORDER BY id DESC");
                                               $debit_status =1;
                                             
                                        }
                                         
                                        
                                         
                                         
                                         $result=$result->result();
                                         foreach($result as $partys1ss)
                                         { 
                                                 
                                            //  if($value->id == 48){
                                               
                                            //     $credits1 += $partys1ss->totalcridit;

                                            //     $debit1 += $partys1ss->totaldebit;

                                            // }

                                            if($debit_status ==1)
                                            {





                                               

                                                if($value->id==373)
                                                {


                                                                     if($partys1ss->totalsum>0)
                                                                    {
                                                                        $partys1ss->totalcridit=$partys1ss->totalsum;
                                                                        $partys1ss->totaldebit=0;
                                                                    }
                                                                    else
                                                                    {
                                    
                                    
                                                                        $partys1ss->totaldebit=abs($partys1ss->totalsum);
                                                                        $partys1ss->totalcridit=0;
                                    
                                                                    }


                                                                      $credits1 += $partys1ss->totalcridit;
                                                                      $debit1 += $partys1ss->totaldebit;


                                                }
                                                elseif($value->id==372)
                                                {




                                                                      $credits1 += $partys1ss->totalcridit;
                                                                      $debit1 += $partys1ss->totaldebit;


                                                }
                                                elseif($value->id==151)
                                                {




                                                                      $credits1 += $partys1ss->totalcridit;
                                                                      $debit1 += $partys1ss->totaldebit;


                                                }
                                                else
                                                {



                                                                     if($partys1ss->totalsum>0)
                                                                    {
                                                                        $partys1ss->totalcridit=$partys1ss->totalsum;
                                                                        $partys1ss->totaldebit=0;
                                                                    }
                                                                    else
                                                                    {
                                    
                                    
                                                                        $partys1ss->totaldebit=abs($partys1ss->totalsum);
                                                                        $partys1ss->totalcridit=0;
                                    
                                                                    }

                                                                    $credits1 += $partys1ss->totalcridit;
                                                                    $debit1 += $partys1ss->totaldebit;


                                                }






                                               


                                            }
                                            else
                                            {


                                            
                                                  if($value->trail_view_status==0)
                                                  {  
                                                     
                                                     if($partys1ss->totaldebit!='')
                                                     {  
                                                          
                                                          if($value->id==116)
                                                          {


                                                                $totalcommssion=0;
                                                                // $resultset=$this->db->query("SELECT SUM(credits) as totalcridit FROM all_ledgers WHERE deleteid=0 AND customer_id='252' AND party_type=5  AND commission_customer>0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                                                // $resultset=$resultset->result();
                                                                // foreach($resultset as $ss)
                                                                // {
                                                                //    $totalcommssion= $ss->totalcridit;
                                                                // }


                                                              $credits1=$partys1ss->totaldebit-$totalcommssion;
                                                          }
                                                          else
                                                          {
                                                               $credits1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                     }
                                                     else
                                                     {
                                                          $credits1=0;
                                                     }
                                                    
                                                     $credits1=abs($credits1);
                                                     $set=1;
                                                     $creditssell=$credits1;
                                                   


                                                  }
                                                  if($value->trail_view_status==1)
                                                  {
                                                      if($partys1ss->totalcridit!='')
                                                      {
                                                          
                                                          if($value->id==119)
                                                          {
                                                              $debit1=$partys1ss->totalcridit;
                                                          }
                                                          else
                                                          {
                                                              $debit1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                      }
                                                      else
                                                      {
                                                          $debit1=0;
                                                      } 
                                                      
                                                      $debit1=abs($debit1);
                                                      $creditssell=$debit1;




                                                   
                                                  }
                                                  
                                                }    
                                            


                                                  
                                         

                                                  
                                         }
                                          
                                       

                                    
                                    



                                   $dnone="";
                                    //  $ssurl=base_url().'index.php/report/balancereport_base_ledger?accountshead='.$value->id;

                                       switch ($value->id) {
                                        case 48:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&grouped=1&from_date=".$formdate;

                                            break;
                                        case 156:
                                            $ssurl=base_url().'index.php/accountheads/others_ledger_find?customer_id=332';
                                            break;
                                        case 151:
                                            $ssurl=base_url().'index.php/accountheads/others_ledger_find?customer_id=220';
                                            break;
                                        case 155:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=346";
                                            break;
                                        case 175:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=405";
                                            break;
                                        case 150:
                                            $ssurl=base_url().'index.php/accountheads/others_ledger_find?customer_id=163&party_type=5';
                                            break;
                                        case 159:  case 383:
                                            $ssurl=base_url().'index.php/driver/ledger?driver_collection_status=1';
                                            break;  
                                         case 373:
                                            $ssurl=base_url().'index.php/customer/common_ledger';
                                            break;       
                                        case 160:
                                            $ssurl=base_url().'index.php/driver/ledger?driver_collection_status=0';
                                            break;
                                            case 119:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;
                                        // case 172:
                                        //     $debit1=$credits1;
                                        //     $credits1=0;
                                        //     break;
                                        case 68:
                                            $ssurl=base_url().'index.php/report/customer_balance_comparision';
                                            break;
                                         case 179:
                                            $ssurl=base_url().'index.php/customer/ledger?cnn_status=1';
                                            break;    
                                        case 154:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                            break;
                                        case 381:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                             $dnone="d-nones";
                                         break;
                                         case 380:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                             $dnone="d-nones";
                                         break;
                                         case 382:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                             $dnone="d-nones";
                                         break;   
                                        case 116:  case 120:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                            break;
                                             
                                        case 2: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                        break;    
                                        case 124:
                                            $credits1=0;
                                            $result_stock=$this->db->query("SELECT selling_average_price,average_price,stock FROM product_list WHERE deleteid=0 AND stock>0  ORDER BY id DESC");
                                            $result_stock=$result_stock->result();
                                            foreach($result_stock as $stock)
                                            {
                                                $selling_average_price=$stock->selling_average_price;
                                                $average_price=$stock->average_price;
                                                $profile_loss_price=$selling_average_price-$average_price;
                                                $valueprice=abs($profile_loss_price);
                                                //$credits1+=$valueprice*$stock->stock;                                                
                                            }
                                            $ssurl="#";
                                            break;
                                        default:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&grouped=1&from_date=".$formdate;
                                            break;
                                            }
                                            
                                            
                                       $credits1total+=$credits1;
                                       $debit1total+=$debit1;
                        



                                        $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $value->id, 
                                            'name' => $value->name, 
                                            'account_type' => $value->account_type,
                                            'trail_view_status' => $value->trail_view_status,
                                            'url'=> $ssurl,
                                            'dnone'=> $dnone,
                                            'credit' => $credits1,
                                            'debit' => $debit1,
                                            'set' => $credits1+$debit1
                
                                        );
                            
                            

                        $i++;

                     }
                     
                     
                     
                     
                     
                     
                            
                     $result2=$this->db->query("SELECT b.bank_name,b.id,b.account_type FROM  bankaccount as b WHERE b.deleteid=0 and id!=25");

                     $result2=$result2->result();
                     $credit=[];
                     $debit=[];
                     $credit_cash=[];
                     $debit_cash=[];
                   foreach ($result2 as  $value) {


  $result_balance=$this->db->query("SELECT a.bank_account_id,SUM(a.credit) as total_debit,SUM(a.debit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value->id."'  AND a.party_type NOT IN('1','2','3','5') AND a.deleteid=0");
                               $resultcheck=$result_balance->result(); 
                             foreach ($resultcheck as  $value1) {

                                // print_r($value1);
                                $total_debit=$value1->total_debit;
                                $total_credit=$value1->total_credit;
                                $total = $total_credit-$total_debit;
                                             

                               
                                                 if($total > 0){
                                                     $credit[] =$total;
                                                 }else{
                                                     $debit[] = abs($total);
                                                 }
                                                
                             }

                           





                            }




                            



                            $result_cash_balance=$this->db->query("SELECT a.bank_account_id,SUM(a.credit) as total_debit,SUM(a.debit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id=25  AND a.party_type NOT IN('1','2','3','5') AND a.deleteid=0");
                             $resultcheck_cash=$result_cash_balance->result(); 
                           foreach ($resultcheck_cash as  $value2) {

                              // print_r($value1);
                              $total_debit=$value2->total_debit;
                              $total_credit=$value2->total_credit;
                              $total = $total_credit-$total_debit;
                                           

                             
                                               if($total > 0){
                                                   $credit_cash[] =$total;
                                               }else{
                                                   $debit_cash[] = abs($total);
                                               }
             
                           }





                            $credit_total_bank=0;
                            $dedit_total_bank=0;
                            $credit_total_cash=0;
                            $dedit_total_cash=0;
                            foreach ($credit as $credits) {
                                $credit_total_bank += $credits;
                            }
                            foreach ($debit as $debits) {
                                $dedit_total_bank += $debits;
                            }
                            foreach ($credit_cash as $credits) {
                                $credit_total_cash = $credits;
                            }
                            foreach ($debit_cash as $debits) {
                                $dedit_total_cash = $debits;
                            }
                            
                           
                    //  $result_balance=$this->db->query("SELECT SUM(a.debit) as total_debit,SUM(a.credit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value->id."' AND a.deleteid=0");

                     
                     $resultbank=$this->db->query("SELECT a.*,SUM(b.credit) as totalcridit,SUM(b.debit) as totaldebit,SUM(b.credit-b.debit) as total FROM bankaccount as a JOIN  bankaccount_manage  as b ON a.id=b.bank_account_id WHERE a.deleteid=0  AND b.deleteid=0 AND b.party_type NOT IN('1','2','3','5')  GROUP BY a.account_type ORDER BY a.bank_name ASC");
                     $resultbank=$resultbank->result();
                     
                     
                     $credits1totalbank=0;
                     $debit1totalbank=0;
                     $bankcash_credit=0;
                     $bankcash_debit=0;

                     foreach ($resultbank as  $valueb) 
                     {
                         
                         
                            
                            
                                         $setbank=0;
                                         $debitbank1=0;
                                         $creditsbank1=0;
                                        //  $resultb=$this->db->query("SELECT SUM(credit) as totalcridit,SUM(debit) as totaldebit,SUM(credit-debit) as total FROM bankaccount_manage WHERE deleteid=0 AND bank_account_id='".$valueb->id."'  ORDER BY id DESC");
                                        //  $resultb=$resultb->result();
                                        
                                             
                                             
                                                      $balancebank=$valueb->total;
                                                      
                                                    //   if($balancebank>0)
                                                    //   {
                                                    //       $trail_view_status=0;
                                                    //       $creditsbank1=$balancebank;

                                                    //   }
                                                    //   else
                                                    //   {
                                                    //         $trail_view_status=1;
                                                    //         $debitbank1=$balancebank;
                                                    //         $debitbank1=abs($debitbank1);


                                                    //   }
                                                       
                                                    $debitbank1 = $dedit_total_bank;
                                                    $creditsbank1 = $credit_total_bank;  
                                                //  print_r($creditsbank1);

                                                        // if($balancebank>0)
                                                        // {
                                                          
                                                        //     // $partys1ss->totalcridit=round($partys1ss->totalsum);
                                                        //     // $partys1ss->totaldebit=0;
                                                        //     $creditsbank1=0;
                                                        //     $debitbank1=round(abs($balancebank));
                                                        // }
                                                        // else
                                                        // {
                        
                                                        //     $creditsbank1=$balancebank;
                                                        //     $debitbank1=0;
                                                        
                                                        //     // $partys1ss->totaldebit=round(abs($partys1ss->totalsum));
                                                        //     // $partys1ss->totalcridit=0;
                        
                                                        // }

                                                        


                                                      $balancebank=abs($balancebank);
                    
                    
                                                      
                                                     
                                                      
                                                      
                                                      $setbank=1;
                                                
                                         
                             
                                       
                                       
                                      
                                      
                                       if($valueb->id!=25)
                                       {


                                       $credits1totalbank =$credit_total_bank;
                                       $debit1totalbank =$dedit_total_bank; 

                                       } 

                                       if($valueb->id==25)
                                       {


                                       $bankcash_credit =$credit_total_cash;
                                       $bankcash_debit =$dedit_total_cash; 

                                       }   
                                     
                                        

                                   
                                       
                                        if($valuevv->account_type_id==18 && $valueb->account_type == 1){

                                            $array1[] = array(
                                                'no' => $i, 
                                                'id' => $valueb->id, 
                                                'account_type' => $valuevv->account_type_id,
                                                'name' => "CASH IN HAND", 
                                                'trail_view_status' => $trail_view_status,
                                                'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=1',
                                                'credit' => $credit_total_cash,
                                                'debit' => $dedit_total_cash,
                                                'set' => $credit_total_cash+$dedit_total_cash
                    
                                            );

                                        }

                                        elseif($valuevv->account_type_id==18 && $valueb->account_type == 0){
                                            $array1[] = array(
                                            
                                                'no' => $i, 
                                                'id' => $valueb->id, 
                                                'account_type' => $valuevv->account_type_id,
                                                'name' => "BANK IN ACCOUNT", 
                                                'trail_view_status' => $trail_view_status,
                                                'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=0',
                                                'credit' => $credit_total_bank,
                                                'debit' => $dedit_total_bank,
                                                'set' => $credit_total_bank+$dedit_total_bank,
                    
                                            );


                                        }

                                    
                                    
                                        

                                   
                         
                        
                       


                        $i++;

                     }
                    
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                    //  $array1 =[];
                     $arrayval=array_merge($array,$array1);

                    // echo "<pre>";print_r($arrayval);
                    // exit;
                     
                     
                     $totalset=$credits1total+$debit1total;
                      $totalsetbank=$credits1totalbank+$debit1totalbank;
                     
                       if($valuevv->account_type_id==18)
                     {
                        
                        
                         $debit1total = $debit1total + $debitbank1 + $bankcash_debit;
                         $credits1total =$credits1total + $creditsbank1 + $bankcash_credit;

                     }
                    //  elseif($valuevv->account_type_id==27)
                    //  {
                    //       $totalsetbank=$creditsbank1+$bankcash_debit;

                    
                         
                    //      $arrayhead[]=array(
                           
                    //      'id'=>$valuevv->account_type_id,
                    //      'account_type_name'=>$valuevv->account_type_name,
                    //      'debit'=>round($bankcash_debit+$debit1total,2),
                    //      'credit'=>round($bankcash_credit+$credits1total,2),
                    //      'set'=>round($totalsetbank+$totalset,2),
                    //      'sub'=>$arrayval
                         
                         
                    //      );
                         
                    //  }
                    //  else
                    //  {
                         $arrayhead[]=array(
                           
                         'id'=>$valuevv->account_type_id,
                         'account_type_name'=>$valuevv->account_type_name,
                         'debit'=>$debit1total,
                         'credit'=>$credits1total,
                         'set'=>$totalset,
                         'sub'=>$arrayval
                         
                         
                         );
                    //  }
                     
                       
                     
                     
                     
                     
                  }
                    
                    
               
                     
                     
                    
                  echo json_encode($arrayhead);

    }
    
    
     public function trial_balance_report_full_copy()
    {

                    
                       $formdate=$_GET['formdate'];
                       $todate=$_GET['fromto'];
                 
                    
                        $resultaset=$this->trial_balance_report1_sub($formdate,$todate);
                
                        $resulta=json_decode($resultaset);
                   
                      
                
                        $a=0;
                        foreach($resulta as $vl)
                        {
                            $a+=$vl->credit;
                        }
                        
                      
                        
                        $resultb=$this->trial_balance_report_sub($formdate,$todate);
                        
                        $resultb=json_decode($resultb);
                            
                            
                        $b=0;
                        foreach($resultb as $vl)
                        {
                            $b+=$vl->credit;
                        }
                           
                         
                      
                        $total=$a-$b;
                       
                        $total=abs($total);
                    

                      
                    
                     
                
                  $resulth=$this->db->query("SELECT b.id as account_type_id,b.name as account_type_name  FROM accountheads_sub_group as a JOIN accounttype as b ON a.account_type=b.id WHERE b.deleteid=0   GROUP BY b.id ORDER BY b.name ASC");
                  $resulth=$resulth->result();
                   
                  $arrayhead=array(); 
                   
                  foreach ($resulth as  $valuevv)
                  {
                     
                     
                     
                  $result=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0  AND account_type='".$valuevv->account_type_id."'   ORDER BY name ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                     $array1=array();
                     $credits1total=0;
                      $debit1total=0;
                      $debit_status=0;
                     foreach ($result as  $value) {
                         
                         
                        $account_head_sub=$value->id;
                        $party_type_sub=$value->party_type;

                        $sub_data = $this->fetch_data_get_ledger_view_all_base_by_beta_copy($formdate,$todate,$account_head_sub,$party_type_sub);
                                                   

                                         $credits1=0;
                                         $debit1=0;
                                         $balance1=0;
                                         $set=0;
                                         
                                         
                                         
                                         if($value->id==104)
                                         {
                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=3 ORDER BY id DESC");
                                         //  $result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid=0 AND party_type=3 group by customer_id ORDER BY payment_date ASC");

$result=$this->db->query("SELECT SUM(a.credits - a.debits) AS totalsum FROM all_ledgers AS a LEFT JOIN accountheads AS b ON a.customer_id = b.id  LEFT JOIN vendor AS c ON a.customer_id = c.id WHERE a.deleteid = '0' AND ((a.party_type ='5' AND b.name = 'grand max') OR (a.party_type = '3')) AND a.account_head_id = 104 AND a.customer_id !=61 AND c.mark_customer_id IN ('1','-1','0')  GROUP BY a.customer_id, b.name ORDER BY a.payment_date ASC");

                                           $debit_status =1;
                                         
                                         }
                                         elseif($value->id==52){
                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==116){

                                              $formdate2=date('2023-04-01');
                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$value->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0  ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==119){

                                              $formdate2=date('2023-04-01');
                                              $result=$this->db->query(" SELECT 
    (SELECT SUM(credits) - SUM(debits) FROM all_ledgers WHERE `payment_date` < '2023-10-01' AND deleteid = 0 AND account_heads_id_2 = 119 
    AND order_id > 0) AS difference,
    SUM(credits-debits) + (SELECT SUM(credits) - SUM(debits) FROM all_ledgers WHERE `payment_date` < '2023-10-01' AND deleteid = 0 AND account_heads_id_2 = 119 AND order_id > 0) AS totalsum,
    SUM(credits) as totalcridit, SUM(debits) as totaldebit FROM all_ledgers 
WHERE deleteid = 0 AND account_heads_id_2 = 119 AND payment_date BETWEEN '2023-10-01' AND '".$todate."' AND order_id > 0 ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==68)
                                         {

                                                 //$result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid=0 AND party_type=1 group by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN admin_users as aa ON aa.id=b.sales_team_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=1  GROUP BY a.customer_id ORDER BY aa.name ASC");



                                                 $debit_status =1;
                                         
                                         }

                                         elseif($value->id==59)
                                         {
                                          $result=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as totalcridit,SUM(a.debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='161' ORDER BY a.id DESC");
                                        }
                                         elseif($value->id==159)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=1 AND payment_date BETWEEN '2023-07-03' AND '".$todate."' ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id==160)
                                         {

// SELECT SUM(a.credits-a.debits) as totalopeingbalance FROM all_ledgers as a WHERE a.deleteid='0' AND a.party_type=2 AND a.driver_collection_status='0' ORDER BY a.idd DESC
                                              $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a WHERE a.deleteid='0' AND a.party_type=2 AND a.driver_collection_status='0' ORDER BY a.id DESC");
                                         
                                         }
                                          elseif($value->id==151)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=220 ORDER BY id DESC");
                                         
                                         }
                                          elseif($value->id==150)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=163 ORDER BY id DESC");
                                         
                                         }
                                          elseif($value->id==106)
                                         {
                                           $result=$this->db->query("SELECT  SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='183' ORDER BY a.id DESC");
                                         }
                                          elseif($value->id==152)
                                         {
                                           $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='229' ORDER BY a.id DESC");
                                         }
                                           elseif($value->id==164)
                                         {
                                           $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='13' ORDER BY a.id DESC");
                                         }
                                        

                                        
                                          elseif($value->id==155)
                                         {

                                      // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_head_id=155 ORDER BY id DESC");


$result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=1 AND order_trancation_status=2 AND payment_date BETWEEN '2023-07-03' AND '".$todate."' ORDER BY id DESC");

                                         
                                         }
                                         elseif($value->id==129)
                                         {
                                            // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum,SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id=129 group by customer_id ORDER BY payment_date ASC");
                                             // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid='0' AND account_head_id=129 GROUP by customer_id ORDER BY payment_date ASC");


$result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a JOIN accountheads as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=5 AND  a.account_head_id=129 GROUP BY a.customer_id");



                                            $debit_status =1;
                                         
                                         }
                                          elseif($value->id==48)
                                         {

                                            //  $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=252 AND comission_transfered NOT IN ('5') ORDER BY id DESC");

                                            $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND account_head_id IN ('48') AND comission_transfered NOT IN ('5') ORDER BY id DESC");
                                         
                                         }
                                          elseif($value->id==2)
                                         {

                             $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='".$value->id."' AND party_type=1 ORDER BY id DESC");
                                         
                                         }
                                          elseif($value->id==120)
                                         {

                                  $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND account_heads_id_2='".$value->id."'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                         
                                         }
                                          elseif($value->id==156)
                                         {

                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=332 ORDER BY id DESC");
                                         
                                         }
                                         elseif($value->id ==153){
                                            $result=$this->db->query("SELECT SUM(credits) as credits, SUM(debits) as debits,SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='270' ORDER BY a.id DESC");

                                         }
                                          elseif($value->id==141){
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='329' ORDER BY a.id DESC");
                                         }
                                         elseif($value->id ==172){
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='3' ORDER BY a.id DESC");
                                         } 
                                         elseif($value->id ==170){
                                            $result=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='180' ORDER BY a.id DESC");
                                        }  
                                         else
                                         {
                                            // $result=$this->db->query("SELECT SUM(credits-debits) as totalsum,SUM(credits) as totalcridit, SUM(debits) as totaldebit,account_head_id FROM all_ledgers 
                                            //  WHERE    deleteid=0 AND account_heads_id_2='".$value->id."' ORDER BY payment_date ASC");
                                            
                                              $result=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as totalcridit,SUM(debits) as totaldebit FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$value->id."' group by customer_id ORDER BY id DESC");
                                               $debit_status =1;
                                         
                                            }
                                         
                                        
                                         
                                         
                                         $result=$result->result();
                                         foreach($result as $partys1ss)
                                         { 
                                                 
                                            
                                            if($debit_status ==1)
                                            {
                                                if($partys1ss->totalsum>0)
                                                {
                                                    $partys1ss->totalcridit=round($partys1ss->totalsum);
                                                    $partys1ss->totaldebit=0;
                                                }
                                                else
                                                {
                
                
                                                    $partys1ss->totaldebit=round(abs($partys1ss->totalsum));
                                                    $partys1ss->totalcridit=0;
                
                                                }

                                                $credits1 += $partys1ss->totalcridit;

                                                $debit1 += $partys1ss->totaldebit;


                                            }
                                            else
                                            {


                                            
                                                  if($value->trail_view_status==0)
                                                  {  
                                                     
                                                     if($partys1ss->totaldebit!='')
                                                     {  
                                                          
                                                          if($value->id==116)
                                                          {


                                                                $totalcommssion=0;
                                                                // $resultset=$this->db->query("SELECT SUM(credits) as totalcridit FROM all_ledgers WHERE deleteid=0 AND customer_id='252' AND party_type=5  AND commission_customer>0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                                                // $resultset=$resultset->result();
                                                                // foreach($resultset as $ss)
                                                                // {
                                                                //    $totalcommssion= $ss->totalcridit;
                                                                // }


                                                              $credits1=$partys1ss->totaldebit-$totalcommssion;
                                                          }
                                                          else
                                                          {
                                                               $credits1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                     }
                                                     else
                                                     {
                                                          $credits1=0;
                                                     }
                                                    
                                                     $credits1=abs($credits1);
                                                     $set=1;
                                                     $creditssell=$credits1;
                                                   


                                                  }
                                                  if($value->trail_view_status==1)
                                                  {
                                                      if($partys1ss->totalcridit!='')
                                                      {
                                                          
                                                          if($value->id==119)
                                                          {
                                                              $debit1=$partys1ss->totalcridit;
                                                          }
                                                          else
                                                          {
                                                              $debit1=$partys1ss->totalcridit-$partys1ss->totaldebit;
                                                          }
                                                          
                                                      }
                                                      else
                                                      {
                                                          $debit1=0;
                                                      } 
                                                      
                                                      $debit1=abs($debit1);
                                                      $creditssell=$debit1;
                                                   
                                                  }
                                                  
                                                }    
                                            


                                                  
                                         

                                                  
                                         }
                                          
                                       

                                   
                                    



                                   
                                    //  $ssurl=base_url().'index.php/report/balancereport_base_ledger?accountshead='.$value->id;

                                       switch ($value->id) {
                                        case 48:
                                            $ssurl=base_url().'index.php/accountheads/others_ledger_find?customer_id=252';
                                            break;
                                        case 156:
                                            $ssurl=base_url().'index.php/accountheads/others_ledger_find?customer_id=332';
                                            break;
                                        case 151:
                                            $ssurl=base_url().'index.php/accountheads/others_ledger_find?customer_id=220';
                                            break;
                                        case 155:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=346";
                                            break;
                                        case 150:
                                            $ssurl=base_url().'index.php/accountheads/others_ledger_find?customer_id=163&party_type=5';
                                            break;
                                        case 159:
                                            $ssurl=base_url().'index.php/driver/ledger?driver_collection_status=1';
                                            break;    
                                        case 160:
                                            $ssurl=base_url().'index.php/driver/ledger?driver_collection_status=0';
                                            break;
                                            case 119:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;
                                        // case 172:
                                        //     $debit1=$credits1;
                                        //     $credits1=0;
                                        //     break;
                                        case 68:
                                            $ssurl=base_url().'index.php/report/customer_balance_report_custome_table?column_status=1';
                                            break;
                                        case 154:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                            break;
                                        case 116:  case 120:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                            break;
                                             
                                        case 2: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id";
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;    
                                        case 124:
                                            $credits1=0;
                                            $result_stock=$this->db->query("SELECT selling_average_price,average_price,stock FROM product_list WHERE deleteid=0 AND stock>0  ORDER BY id DESC");
                                            $result_stock=$result_stock->result();
                                            foreach($result_stock as $stock)
                                            {
                                                $selling_average_price=$stock->selling_average_price;
                                                $average_price=$stock->average_price;
                                                $profile_loss_price=$selling_average_price-$average_price;
                                                $valueprice=abs($profile_loss_price);
                                                //$credits1+=$valueprice*$stock->stock;                                                
                                            }
                                            $ssurl="#";
                                            break;
                                        default:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$value->id&grouped=1";
                                            break;
                                            }
                                            
                                            
                                       $credits1total+=$credits1;
                                       $debit1total+=$debit1;
                        
                                        $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $value->id, 
                                            'name' => $value->name, 
                                            'account_type' => $value->account_type,
                                            'trail_view_status' => $value->trail_view_status,
                                            'url'=> $ssurl,
                                            'credit' => round($credits1,2),
                                            'debit' => round($debit1,2),
                                            'set' => round($credits1+$debit1),
                                            'sub_data' => $sub_data,
                
                                        );
                            
                            

                        $i++;

                     }
                     
                     
                     
                     
                     
                     
                            
                     $result2=$this->db->query("SELECT b.bank_name,b.id,b.account_type FROM  bankaccount as b WHERE b.deleteid=0 and id!=25");

                     $result2=$result2->result();
                     $credit=[];
                     $debit=[];
                     $credit_cash=[];
                     $debit_cash=[];
                   foreach ($result2 as  $value) {


  $result_balance=$this->db->query("SELECT a.bank_account_id,SUM(a.credit) as total_debit,SUM(a.debit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value->id."' AND a.deleteid=0");
                               $resultcheck=$result_balance->result(); 
                             foreach ($resultcheck as  $value1) {

                                // print_r($value1);
                                $total_debit=$value1->total_debit;
                                $total_credit=$value1->total_credit;
                                $total = $total_credit-$total_debit;
                                             

                               
                                                 if($total > 0){
                                                     $credit[] =round($total);
                                                 }else{
                                                     $debit[] = round(abs($total));
                                                 }
                                                
                             }

                           





                            }




                            



                            $result_cash_balance=$this->db->query("SELECT a.bank_account_id,SUM(a.credit) as total_debit,SUM(a.debit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id=25 AND a.deleteid=0");
                             $resultcheck_cash=$result_cash_balance->result(); 
                           foreach ($resultcheck_cash as  $value2) {

                              // print_r($value1);
                              $total_debit=$value2->total_debit;
                              $total_credit=$value2->total_credit;
                              $total = $total_credit-$total_debit;
                                           

                             
                                               if($total > 0){
                                                   $credit_cash[] =round($total);
                                               }else{
                                                   $debit_cash[] = round(abs($total));
                                               }
             
                           }





                            $credit_total_bank=0;
                            $dedit_total_bank=0;
                            $credit_total_cash=0;
                            $dedit_total_cash=0;
                            foreach ($credit as $credits) {
                                $credit_total_bank += $credits;
                            }
                            foreach ($debit as $debits) {
                                $dedit_total_bank += $debits;
                            }
                            foreach ($credit_cash as $credits) {
                                $credit_total_cash = $credits;
                            }
                            foreach ($debit_cash as $debits) {
                                $dedit_total_cash = $debits;
                            }
                            
                           
                    //  $result_balance=$this->db->query("SELECT SUM(a.debit) as total_debit,SUM(a.credit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value->id."' AND a.deleteid=0");

                     
                     $resultbank=$this->db->query("SELECT a.*,SUM(b.credit) as totalcridit,SUM(b.debit) as totaldebit,SUM(b.credit-b.debit) as total FROM bankaccount as a JOIN  bankaccount_manage  as b ON a.id=b.bank_account_id WHERE a.deleteid=0 AND b.deleteid=0  GROUP BY a.account_type ORDER BY a.bank_name ASC");
                     $resultbank=$resultbank->result();
                     
                     
                     $credits1totalbank=0;
                     $debit1totalbank=0;
                     $bankcash_credit=0;
                     $bankcash_debit=0;

                     foreach ($resultbank as  $valueb) 
                     {
                         
                         
                            
                            
                                         $setbank=0;
                                         $debitbank1=0;
                                         $creditsbank1=0;
                                        //  $resultb=$this->db->query("SELECT SUM(credit) as totalcridit,SUM(debit) as totaldebit,SUM(credit-debit) as total FROM bankaccount_manage WHERE deleteid=0 AND bank_account_id='".$valueb->id."'  ORDER BY id DESC");
                                        //  $resultb=$resultb->result();
                                        
                                             
                                             
                                                      $balancebank=$valueb->total;
                                                      
                                                    //   if($balancebank>0)
                                                    //   {
                                                    //       $trail_view_status=0;
                                                    //       $creditsbank1=$balancebank;

                                                    //   }
                                                    //   else
                                                    //   {
                                                    //         $trail_view_status=1;
                                                    //         $debitbank1=$balancebank;
                                                    //         $debitbank1=abs($debitbank1);


                                                    //   }
                                                       
                                                    $debitbank1 = $dedit_total_bank;
                                                    $creditsbank1 = $credit_total_bank;  
                                                //  print_r($creditsbank1);

                                                        // if($balancebank>0)
                                                        // {
                                                          
                                                        //     // $partys1ss->totalcridit=round($partys1ss->totalsum);
                                                        //     // $partys1ss->totaldebit=0;
                                                        //     $creditsbank1=0;
                                                        //     $debitbank1=round(abs($balancebank));
                                                        // }
                                                        // else
                                                        // {
                        
                                                        //     $creditsbank1=$balancebank;
                                                        //     $debitbank1=0;
                                                        
                                                        //     // $partys1ss->totaldebit=round(abs($partys1ss->totalsum));
                                                        //     // $partys1ss->totalcridit=0;
                        
                                                        // }

                                                        


                                                      $balancebank=abs($balancebank);
                    
                    
                                                      
                                                     
                                                      
                                                      
                                                      $setbank=1;
                                                
                                         
                             
                                       
                                       
                                      
                                      
                                       if($valueb->id!=25)
                                       {


                                       $credits1totalbank =$credit_total_bank;
                                       $debit1totalbank =$dedit_total_bank; 

                                       } 

                                       if($valueb->id==25)
                                       {


                                       $bankcash_credit =$credit_total_cash;
                                       $bankcash_debit =$dedit_total_cash; 

                                       }   
                                     
                                        

                                   
                                       
                                        if($valuevv->account_type_id==18 && $valueb->account_type == 1){

                                            $array1[] = array(
                                                'no' => $i, 
                                                'id' => $valueb->id, 
                                                'account_type' => $valuevv->account_type_id,
                                                'name' => "CASH IN HAND", 
                                                'trail_view_status' => $trail_view_status,
                                                'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=1',
                                                'credit' => round($credit_total_cash,2),
                                                'debit' => round($dedit_total_cash,2),
                                                'set' => round($credit_total_cash+$dedit_total_cash,2)
                    
                                            );

                                        }

                                        elseif($valuevv->account_type_id==18 && $valueb->account_type == 0){
                                            $array1[] = array(
                                            
                                                'no' => $i, 
                                                'id' => $valueb->id, 
                                                'account_type' => $valuevv->account_type_id,
                                                'name' => "BANK IN ACCOUNT", 
                                                'trail_view_status' => $trail_view_status,
                                                'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=0',
                                                'credit' => round($credit_total_bank,2),
                                                'debit' => round($dedit_total_bank,2),
                                                'set' => round($credit_total_bank+$dedit_total_bank,2)
                    
                                            );


                                        }

                                    
                                    
                                        

                                   
                         
                        
                       


                        $i++;

                     }
                    
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                    //  $array1 =[];
                     $arrayval=array_merge($array,$array1);

                    // echo "<pre>";print_r($arrayval);
                    // exit;
                     
                     
                     $totalset=$credits1total+$debit1total;
                      $totalsetbank=$credits1totalbank+$debit1totalbank;
                     
                       if($valuevv->account_type_id==18)
                     {
                        
                        
                         $debit1total = $debit1total + $debitbank1 + $bankcash_debit;
                         $credits1total =$credits1total + $creditsbank1 + $bankcash_credit;

                     }
                    //  elseif($valuevv->account_type_id==27)
                    //  {
                    //       $totalsetbank=$creditsbank1+$bankcash_debit;

                    
                         
                    //      $arrayhead[]=array(
                           
                    //      'id'=>$valuevv->account_type_id,
                    //      'account_type_name'=>$valuevv->account_type_name,
                    //      'debit'=>round($bankcash_debit+$debit1total,2),
                    //      'credit'=>round($bankcash_credit+$credits1total,2),
                    //      'set'=>round($totalsetbank+$totalset,2),
                    //      'sub'=>$arrayval
                         
                         
                    //      );
                         
                    //  }
                    //  else
                    //  {
                         $arrayhead[]=array(
                           
                         'id'=>$valuevv->account_type_id,
                         'account_type_name'=>$valuevv->account_type_name,
                         'debit'=>round($debit1total,2),
                         'credit'=>round($credits1total,2),
                         'set'=>round($totalset,2),
                         'sub'=>$arrayval
                         
                         
                         );
                    //  }
                     
                       
                     
                     
                     
                     
                  }
                    
                    
               
                     
                     
                    
                  echo json_encode($arrayhead);

    }


    
        private function fetch_data_get_ledger_view_all_base_by_beta_copy($formdate,$todate,$account_head_sub,$party_type_sub)
        {
            $formdate = $formdate;
            $todate = $todate;
            $accountshead= $account_head_sub;
            $party_type_sub = $party_type_sub;

            $qq="";
            $St="";
            if($accountshead!='0'){
                $qq=' AND account_head_id='.$accountshead;
            }

              if($accountshead=='72'){
                $qq=" AND account_head_id IN ('14','15','16','17','18','20','21','22','23','24','25','27','28','29','30','31','32','33','34','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','53','54','55','57','64','65','66','67','73','74','75','76','77','78','79','80','81','134','135','136','137','138','141','143','144','147','148','152','153')";
            }

            if($accountshead=='116'){
                $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
            }
             if($accountshead=='123'){
                $qq=' AND account_heads_id_2='.$accountshead;
            }
            if($accountshead=='119'){
                $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
            }
            if($accountshead=='2'){
                $qq=' AND account_heads_id_2='.$accountshead;
            }
            if($accountshead=='120'){
                $qq=' AND account_heads_id_2='.$accountshead;
            }

            if($accountshead=='68'){
                $qq=' AND party_type=1';
            }
                     if($accountshead=='380')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=372';
                     }

                     if($accountshead=='381')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='382')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=142 AND tcs_status=1';
                     }

            if($accountshead=='155'){
                $qq=' AND party_type=2 AND driver_collection_status=1';
            }

            if($accountshead=='104'){
                $qq=' AND party_type IN ("3","5") AND account_head_id='.$accountshead;
            }

            if($accountshead=='151'){
                $qq=' AND party_type=5 AND customer_id=220';
            }
            if($accountshead=='156'){
                $qq=' AND party_type=5 AND customer_id=332';
            }


            switch ($accountshead) {
                
                    case 151: case 116:  case 119: case 154:
                    $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a
                    WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='0' $qq  ORDER BY payment_date ASC");
                    break;
                    case 2:
                       $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a
                    WHERE  party_type=1 AND  deleteid='0' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' $qq ORDER BY payment_date ASC");
                    break;
                    case 59:
                       $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='161' ORDER BY a.id DESC");
                    break;
                    case 153:
                    $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='270' ORDER BY a.id DESC");
                    break;
                    case 141:
                    $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='329' ORDER BY a.id DESC");
                    break;
                    case 172:
                    $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='3' ORDER BY a.id DESC");
                    break;
                    case 155:
                    $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0  AND party_type=2 AND driver_collection_status=1 AND order_trancation_status=2 GROUP by customer_id ORDER BY payment_date ASC");
                    break;
                    case 170:
                        $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='180' ORDER BY a.id DESC");
                    break;
                    case 48:
                        $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.account_head_id IN ('48') ORDER BY a.id DESC");
                    break;
                      case 106:
                        $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='183' ORDER BY a.id DESC");
                    break;
                    case 152:
                     $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='229' ORDER BY a.id DESC");
                     break;
                    case 164:
                      $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='13' ORDER BY a.id DESC");
                    break;
                    case 136:
                      $result4=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a WHERE deleteid='0' AND account_head_id=136 AND comission_transfered NOT IN ('5') GROUP by customer_id ORDER BY payment_date ASC");
                    break;
                default:
                $result_sub=$this->db->query("SELECT a.id,a.customer_id,a.account_head_id,a.party_type,SUM(a.credits) as credits, SUM(a.debits) as debits FROM all_ledgers as a
                WHERE deleteid='0' AND account_head_id='".$accountshead."' GROUP by customer_id ORDER BY payment_date ASC");

                // $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
                    break;
                }
            
           
                
                if (!empty($result_sub)) {
                    $result_sub = $result_sub->result();
                }else{

                }

                $sub_array_val=[];
                foreach ($result_sub as  $value)
                {


                       $account_head_idname="";


                         $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                         $result_account_head_text=$result_account_head->result();

                        foreach($result_account_head_text as $ass)
                        {
                                                   $account_head_idname=$ass->name;

                        }






                        if($value->debits==''){ $value->debits=0; }
                        if($value->credits==''){ $value->credits=0; }

                       if($value->party_type==1)
                       {
                           $table='customers';
                           $traget='customer';
                           $traget2='customer_id';
                           $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");

                       }
                       if($value->party_type==2)
                       {
                           $table='driver';
                           $traget='driver';
                           $traget2='customer_id';
                           $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                       }
                        if($value->party_type==3)
                       {
                           $table='vendor';
                           $traget='vendor';
                           $traget2='customer_id';
                           $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");

                       }

                       if($value->party_type==5)
                       {
                                   $table='accountheads';
                                   $traget='accountheads';
                                   $traget2='customer_id';
                                   $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                       }

                       if($value->party_type==6)
                       {
                                   $table='accountheads_sub_group';
                                   $traget='accountheads_sub_group';
                                   $traget2='customer_id';
                                   $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                       }
                        if($value->party_type==7)
                       {
                                   $table='accountheads';
                                   $traget='accountheads';
                                   $traget2='customer_id';

                                    $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                       }

                       if($value->party_type==8)
                       {
                                   $table='admin_users';
                                   $traget='admin_users';
                                   $traget2='customer_id';

                                    $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");


                       }

                        $party_name="";

                        $res=$query->result();


                        foreach($res as $partys)
                        {
                                                   $party_name=$partys->name;
                                                   $customer_id=$partys->id;
                        }

                        $sub_array=array(
                            'id'  => $accountshead,
                            'name' => $account_head_idname .'  - ' . $party_name,
                            'sub_name' =>$party_name,
                            'debit' => $value->debits,
                            'credit' => $value->credits,
                        );
                        $sub_array_val[] = $sub_array;
                    }
                    return $sub_array_val;

        }


         public function trial_balance_report_balance1()
    {

                        $formdate=$_GET['formdate'];
                        $todate=$_GET['fromto'];
                         $resultaset=$this->trial_balance_report1_sub($formdate,$todate);

                        $resulta=json_decode($resultaset);

                        $a=0;
                        foreach($resulta as $vl)
                        {
                            $a+=$vl->credit;
                        }

                        $resultb=$this->trial_balance_report_sub($formdate,$todate);

                        $resultb=json_decode($resultb);

                        $b=0;
                        foreach($resultb as $vl)
                        {
                            $b+=$vl->credit;
                        }


                        $total=$a-$b;

                        $total=abs($total);
                        $total=round($total+1);


                     $creditspayable=0;
                     $resultb=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a JOIN accountheads_sub_group as b On a.account_head_id=b.id WHERE a.deleteid=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND b.account_type IN ('12','10','8','7','6')");
                     $resultb=$resultb->result();
                     foreach($resultb as $partys1pay)
                     {
                         $creditspayable=$partys1pay->debits-$partys1pay->credits;

                     }

                     $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0  AND balance_sheet='1' ORDER BY name ASC");
                     $result=$result->result();

                     $i=1;
                     $array=array();

                     foreach ($result as  $value) {

                             $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                             $result_sub=$result_sub->result();

                             $array2=array();
                             $creditsfull=0;
                             $creditstest=0;
                             foreach ($result_sub as  $valuess)
                             {
                                        if($value->id==$valuess->account_type)
                                       {

                                                          $debitsrr=0;
                                                          $result1rr=$this->db->query("SELECT SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$valuess->id."' AND account_heads_id_2='120' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                                          $party1rr=$result1rr->result();
                                                          foreach($party1rr as $partys1rr)
                                                          {

                                                            $debitsrr=$partys1rr->debits;

                                                          }


                                                          $credits=0;

                                                          // var_dump($valuess->id);
                                                         if($valuess->id==104)
                                                         {



$result1=$this->db->query("SELECT (SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = 119 THEN a.credits * 1.18 ELSE a.credits END) - SUM(a.debits)) AS totalsum,SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers AS a LEFT JOIN accountheads AS b ON a.customer_id = b.id  LEFT JOIN vendor AS c ON a.customer_id = c.id WHERE a.deleteid = '0' AND ((a.party_type ='5' AND b.name = 'grand max') OR (a.party_type = '3')) AND a.account_head_id = 104 AND a.customer_id !=61  AND a.payment_date <='".$todate."'   ORDER BY a.payment_date ASC");

                                                         

                                // $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND party_type=3 AND account_head_id = 104 ORDER BY id DESC");

                                                         }
                                                         elseif($valuess->id==126){
                                                            $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND account_heads_id_2=126 ORDER BY id DESC");

                                                         }

                                                         elseif($valuess->id==142){

                                                            $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_head_id=142 ORDER BY id DESC");
                                                         }
                                                         elseif($valuess->id==168){

// SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid='0' AND account_head_id=168 GROUP by customer_id,party_type ORDER BY payment_dates ASC
                                                            $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_head_id=168 ORDER BY id DESC");
                                                         }
                                                         else
                                                         {

                                                            $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$valuess->id."'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                                         }


                                                          $party1=$result1->result();
                                                          foreach($party1 as $partys1)
                                                          {

                                                            $credits=$partys1->credits-$partys1->debits;
                                                            $credits=abs($credits);
                                                            

                                                          }


                                                          $viewststi="1";

                                                      // var_dump($valuess->name);
                                                      // exit;

                                                      if($valuess->id == '168'){
                                                        // var_dump($partys1->credits);
// 
                                                $credits=$partys1->credits;

                                                // var_dump($partys1->credit);
                                                            // $credits=abs($credits);
                                                      }

                                                       if($valuess->id == '104')
                                                       {
                                                                            // var_dump($partys1->credits);
// 
                                                                            $credits=$partys1->totalsum;

                                                                         // var_dump($partys1->credit);
                                                                         // $credits=abs($credits);
                                                       }

                                                           

 
                                                            if($credits!=0)
                                                            {
                                                             
                                                                 // if($valuess->id=='128')
                                                                 // {
                                                                 //     $credits=0;
                                                                 // }
                                                                 $creditstest=abs($creditstest);
                                                                 $array2[] = array(

                                                                    'no' => $i,
                                                                    'id' => $valuess->id,
                                                                    'name' => $valuess->name,
                                                                    'url'=>base_url().'index.php/report/balancereport_base_ledger_beta?accountshead='.$valuess->id.'&grouped=1&from_date='.$formdate.'&to_date='.$todate,
                                                                    'viewstatus' => $viewststi,
                                                                    'creditstest' => round($creditstest,2),
                                                                    'credit' => round($credits,2),
                                                                 );
                                                           }
                                             $creditsfull+=$credits;
                                       }

                             }



                                                     if($creditsfull!=0)
                                                     {

                                                                $array[] = array(


                                                                    'no' => $i,
                                                                    'id' => $value->id,
                                                                    'name' => $value->name,
                                                                    'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                    'credit' => round($creditsfull,2),
                                                                    'resultsub'=>$array2

                                                              );

                                                     }


                        $i++;

                     }


                    echo json_encode($array);

    }

    
            public function trial_balance_report_balance2()
    {

                    
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['fromto'];
                 
                     $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0  AND balance_sheet='2' ORDER BY name ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                       $credits_cash=0;
                            

                                 $result_cash =$this->db->query("SELECT SUM(debit) as debits,SUM(credit) as credits FROM bankaccount_manage WHERE deleteid=0  AND bank_account_id='25' AND party_type NOT IN('1','2','3','5') AND create_date<='".$todate."' ORDER BY id DESC")->result();
                                                               
                                                              foreach($result_cash as $value_bk){
                                                                                                                                               
                                                                        $credits_cash=$value_bk->credits-$value_bk->debits;
                                                                        
                                                              }


                                                            

                     foreach ($result as  $value) {
                         
                      
                         
                         
                             $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY name ASC");
                             $result_sub=$result_sub->result();
                             
                           $array2=array();
                             
                             foreach ($result_sub as  $valuess) 
                             {
                                       if($value->id==$valuess->account_type)
                                       {
                                           
                                          
                                           
                                                              $debits=0;
                                                              $credits=0;


                                                              if($valuess->id==68)
                                                              {

                                                              
$result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=1 AND a.cnn_status=0 AND a.payment_date<='".$todate."'");




                                                              }
                                                              elseif($valuess->id==129){



                                                              

                                                         $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a JOIN accountheads as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=5 AND  a.account_head_id=129 AND a.payment_date<='".$todate."'");
        

                                                                  // $result=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers as a JOIN accountheads as b ON a.customer_id=b.id  WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=5 AND  a.account_head_id=129 ORDER BY a.id DESC");

                                                              }
                                                              elseif($valuess->id==94){
                                                                $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_head_id=94 ORDER BY id DESC");

                                                              }
                                                              elseif($valuess->id==165){
                                                                $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_head_id=165 ORDER BY id DESC");

                                                              }
                                                              elseif($valuess->id==179){


$result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN admin_users as aa ON aa.id=b.sales_team_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.party_type=1 AND a.cnn_status=1 AND b.CNN='YES'");       
                                                               

                                                              }
                                                              else
                                                              {

                                                                 $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$valuess->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                                              }

                                                             




                                                              $party1=$result1->result();
                                                              foreach($party1 as $partys1)
                                                              {
                                                                 
                                                              
                                                                $credits=$partys1->debits-$partys1->credits;
                                                                $credits=abs($credits);
                                                              }
                                                              


                                                              $sql="";
                                                              if($valuess->id==384)
                                                              {
                                                                    $array2[] = array(                                          
                                                                    'no' => "6", 
                                                                    'id' => "0", 
                                                                    'name' => "CASH IN HAND", 
                                                                    'url'=>base_url().'index.php/report/accountsreport?cash_in_hand=1&from_date='.$formdate.'&to_date='.$todate,
                                                                    'viewstatus' => 0,
                                                                    'credit' => round($credits_cash,2),
                                                                    
                                                                     );
                                                              }
                                                              elseif($valuess->id==107)
                                                              {
                                                                 $sql=" AND bank_account_id!='25'";
                                                              }
                                                              else
                                                              {
                                                                 $sql=" AND account_head_id='".$valuess->id."'";
                                                              }
                                                              
                                                              $credits2=0;
                                                              
                                                              $result1=$this->db->query("SELECT SUM(debit) as debits,SUM(credit) as credits FROM bankaccount_manage WHERE deleteid=0 AND party_type NOT IN('1','2','3','5') AND create_date<='".$todate."'  $sql ORDER BY id DESC");

                                                              $party1=$result1->result();

                                                    
                                                             

                                                              foreach($party1 as $partys1)
                                                              {
                                                                         
                                                                                                                                               
                                                                        $credits2=$partys1->credits-$partys1->debits;
                                                                        $credits2=abs($credits2);

                                                                       
                                                              }

                                                             

                                                            if($valuess->id==107){
                                                              $valuess->name= "BANK IN ACCOUNT";
                                                            }
                                                                
                                                            //    if($valuess->id==94){
                                                            //   var_dump($credits);
                                                            // }
                                                              
                                                            
                                                             //  if($valuess->id == 94){
                                                             //  var_dump( $credits);

                                                             // }
                                                            
                                           
                                             
                                                                 if($valuess->id=='105' || $valuess->id=='107')
                                                                 {
                                                                       $viewststi="0";
                                                                       $credits=$credits2;
                                                                 }
                                                                 // else
                                                                 // {
                                                                 //       $viewststi="0";
                                                                 //       $credits=$credits;
                                                                 // }
                                             
                                             
                                                             
                                                                    if($valuess->id==107)
                                                                    {
                                                                         $url=base_url().'index.php/report/accountsreport?cash_in_hand=0&from_date='.$formdate.'&to_date='.$todate;
                                                                  
                                                                    }
                                                                    elseif($valuess->id==68)
                                                                    {
                                                                         $url=base_url().'index.php/report/customer_balance_comparision?from_date='.$formdate.'&to_date='.$todate;
                                                                  
                                                                    }
                                                                    elseif($valuess->id==179)
                                                                    {
                                                                         $url=base_url().'index.php/customer/ledger?cnn_status=1&party_type=1&from_date='.$formdate.'&to_date='.$todate;
                                                                  
                                                                    }
                                                                    else
                                                                    {
                                                                        $url=base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id.'&grouped=1&from_date='.$formdate.'&to_date='.$todate;
                                                                 
                                                                    }
                                                           // var_dump($valuess->id); 
                                                                 

                                                            if($credits!=0)
                                                            {
                                                                
                                                            
                                                             

                                                               
                                                            $array2[] = array(
                                            
                                            
                                                                'no' => $i, 
                                                                'id' => $valuess->id, 
                                                                'name' => $valuess->name, 
                                                                'url'=>$url,
                                                                'viewstatus' => $viewststi,
                                                                'credit' => round($credits,2),
                                                                
                                                             );


                                                            // var_dump($array2);
                                                             
                                                            }
                                             
                                              
                                           
                                       }

                                 
                             }

                     
                                                              $creditsfull=0;
                                                              $resultfull=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a JOIN accountheads_sub_group as b On a.account_head_id=b.id WHERE a.deleteid=0 AND b.account_type='".$value->id."' ");
                                                              $partyfull=$resultfull->result();
                                                              foreach($partyfull as $ssdata)
                                                              {
                                                                                     
                                                                            
                                                                  $creditsfull=$ssdata->debits-$ssdata->credits;
                                                                                   
                                                              }
                                                              
                                                              
                                                              $creditsfull2=0;
                                                              $resultfull=$this->db->query("SELECT SUM(a.debit) as debits,SUM(a.credit) as credits FROM bankaccount_manage as a JOIN accountheads_sub_group as b On a.account_head_id=b.id WHERE a.deleteid=0 AND b.account_type='".$value->id."'");
                                                              $partyfull=$resultfull->result();
                                                              foreach($partyfull as $ssdata)
                                                              {
                                                                                     
                                                                            
                                                                  $creditsfull2=$ssdata->credits-$ssdata->debits;
                                                                                   
                                                              }
                                                              
                                                              
                                                              
                                                              $creditsfull=$creditsfull+$creditsfull2;
                                                               
                                                   
                                                               
                                                                    
                                                                if($creditsfull!=0)
                                                                {
                                                                    
                                                                
                                                                 $array[] = array(
                                                                    
                                                                    
                                                                    'no' => $i, 
                                                                    'id' => $value->id, 
                                                                    'name' => $value->name, 
                                                                    'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                    'credit' => round($creditsfull,2),
                                                                    'resultsub'=>$array2
                                        
                                                                 );
                                                             
                                                                }
                                                          
                         
                         
                                                
                         


                        $i++;

                     }


                    

                    echo json_encode($array);

    }
    
    
            public function weighted_avg_list(){
                
                // $result= $this->Main_model->where_names('product_list','deleteid','0');
                $result = $this->db->query("SELECT * FROM product_list WHERE deleteid = '0' ORDER BY TRIM(BOTH ' ' FROM product_name) ASC")->result();
                $tot_avg = 0;
                $array = array();
                foreach ($result as $key => $value) {
                    $avg = 0; $totqty = 0; $totamt = 0;
                    $price = intval($value->price);
                    $stock = intval($value->stock);

                    if ($stock != 0) {
                        $avg =  $price * $stock;
                        $avg = abs($avg);
                        $tot_avg += $avg;
                        // var_dump($price);
                    }
                    $currentDate = date('Y-m-d');
                    $query = $this->db->query("SELECT a.qty,a.amount FROM order_product_list_process  as a LEFT JOIN orders_process as b ON a.order_id=b.id WHERE a.deleteid='0' AND b.deleteid='0' AND a.product_id ='" . $value->id ."' AND a.create_date BETWEEN '2023-10-01'  AND '$currentDate'");
                    $resultqty = $query->result();
                    
                    foreach ($resultqty as  $val) {
                        $totqty += $val->qty; 
                        $totamt += $val->amount; 
                    }
                    $totrate = $totamt/$totqty; 
                    $totinward = 0;
                    $totamt = $totinward - $totamt;
                                      
                    $create_by="";
                    $resultvent= $this->Main_model->where_names('admin_users','id',$value->create_by);
                    foreach ($resultvent as  $valuess) {
                                     $create_by= $valuess->name; 
                     }

                     $update_by="";
                     $resultvent= $this->Main_model->where_names('admin_users','id',$value->update_by);
                     foreach ($resultvent as  $valuess) {
                                      $update_by= $valuess->name; 
                      }
                  
                  
                    $array[] = array(
                         'no' => $key+1, 
                        'id' => $value->id, 
                        'avg' => $totamt,
                        // 'avg' => $avg,
                        'product_name' => $value->product_name, 
                        'price' => round(intval($totrate),2),
                        'categories' => $value->categories,
                        'weight' => $value->weight,
                        'uom' => $value->uom,
                        // 'stock' => round(intval($value->stock),2),
                        'stock' => round(intval($totqty),2),
                        'optimal_stock' => round(intval($value->optimal_stock),2),
                        'production_stock' => round(intval($value->production_stock),2),
                        'min_order_stock' => round(intval($value->min_order_stock),2),
                        'create_by' => $create_by,
                        'update_by' =>$update_by,
                    );


                   
                }
             
              echo json_encode($array);
            }
    
    
            public function trial_balance_report2()
    {


                      $formdate=$_GET['formdate'];
                      $formdate_s=$_GET['formdate'];
                      $todate=$_GET['fromto'];


                     $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0 AND trading IN ('2','10') ORDER BY sort_order ASC");
                     $result=$result->result();



                     $i=1;
                     $array=array();
                     
                     
                     // $query = $this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as total_amount FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='116' AND payment_date<'".$formdate."' AND order_id>0  ORDER BY id DESC");
                     // $resultqty = $query->result();


                     //  $query1 = $this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as total,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='2' AND party_type=1 AND payment_date<'".$formdate."' ORDER BY id DESC");
                     // $result1 = $query1->result();
 
                     
                     // $total_sum = round($resultqty[0]->total_amount);
                     // $total_return = round($result1[0]->total);
                     // $total_inw = 0;
                     // $total_sum = ($total_sum - $total_return);


                                    if($formdate_s=='2024-04-01')
                                    {
                                      $formdate_s='2023-06-01';
                                    }  




                     $result_debittotal=$this->db->query("SELECT SUM(b.amount) as total_amount FROM orders_process as a join order_product_list_process as b ON a.id=b.order_id WHERE a.deleteid=0 AND a.order_base>0 AND b.deleteid=0 AND a.create_date BETWEEN '".$formdate_s."' AND '".$todate."' ORDER BY a.id DESC");
                       $resultqty = $result_debittotal->result();
                       $total_sum = round($resultqty[0]->total_amount);

                     
                     $opening_stock_arr[] = array(
                        'no' => $key,
                        'id' => "001",
                        'name' => "OPENING STOCKS",
                        'url'=> base_url(). "index.php/report_new/weighted_average_opening",
                        'viewstatus' => 0,
                        'credit' => '-'.$total_sum,
                        'vll' => 0,
                        'credittot' => '-'.$total_sum,
                        ); 
                        // array_sum($total_sumopen)

                        
                        $array[] = array(
                            'no' => "#",
                            'id' => "002",
                            'name' =>"STOCKS",
                            'url'=> base_url(). "report_new/weighted_average",
                            'credit' => '-'.$total_sum,
                            'resultsub'=>$opening_stock_arr
                             );

                     foreach ($result as  $value) {


                            $array2=array();
                              $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                              $result_sub=$result_sub->result();


                              
                             $creditsfull=0;
                             foreach ($result_sub as  $valuess)
                             {
                                       if($value->id==$valuess->account_type)
                                       {




      

                                            $debits=0;
                                            $credits=0;




                                             if($valuess->id==52)
                                             {

                                                 $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_head_id='".$valuess->id."'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                            // $party1=$result1->result();

                                             }
                                            elseif($valuess->id==42){

                                                   $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_head_id='42' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                            }
                                            elseif($valuess->id==48)
                                         {

                                              // $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=252 AND comission_transfered NOT IN ('5') ORDER BY id DESC");


                                            //$result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid='0'  AND party_type=5 AND customer_id IN ('252','373') AND comission_transfered NOT IN ('5') AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");


                                            $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid='0'  AND party_type=5 AND account_head_id IN ('48') AND comission_transfered NOT IN ('5') AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");


                                         }
                                            elseif($valuess->id==166){
   
                                                   $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_head_id='166' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                            }
                                             elseif($valuess->id==141){


 $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.party_type=5 AND a.account_head_id='141' ORDER BY a.id DESC");

                                           
                                            }
                                             elseif($valuess->id==136){

                                                   $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_head_id='136' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                            }
                                             elseif($valuess->id==119){

                                             $formdate2=date('2023-04-01');

                            $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='119' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0 AND party_type NOT IN ('4','8','10') ORDER BY id DESC");

                                              }
                                               elseif($valuess->id==151)
                                              {

                                              $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=220 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                         }
                                             elseif($valuess->id==155)
                                              {
                                             $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=1 AND order_trancation_status=2 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                              }

                                            elseif($valuess->id ==170){
                                            $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='180' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                               }
                                            elseif($valuess->id ==172){
                                                $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='3' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                              }
                                               elseif($valuess->id ==173){

                                              $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_head_id='173'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                             }
                                            elseif($valuess->id==159)
                                              {

                                                   // $result1=$this->db->query("SELECT SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=1 AND payment_date BETWEEN '2023-10-01' AND '".$todate."' ORDER BY id DESC");

                                                 $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=1 AND payment_date<='".$todate."' ORDER BY id DESC");

                                                 

                                              }
                                              elseif($valuess->id==106)
                                            {
                                           $result1=$this->db->query("SELECT  SUM(a.credits-a.debits) as totalsum,SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='183' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                             }
                                            elseif($valuess->id==160)
                                              {

                                                   $result1=$this->db->query("SELECT SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=2 AND driver_collection_status=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                              }
                                            elseif($valuess->id ==153){
                                             $result1=$this->db->query("SELECT SUM(credits) as credits, SUM(debits) as debits,SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='270' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                             }
                                             else
                                             {

                                                 $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits,SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");


                                             }

                                            $party1=$result1->result();

                                           
                                            

                                            foreach($party1 as $partys1)
                                            {

                                                $credits=$partys1->debits;

                                                if($valuess->id == '159'){
                                                  $credits = $partys1->totalsum;

                                                }
                                                elseif ($valuess->id == '160')
                                                {
                                                    $debits=$partys1->credits-$partys1->debits;
                                                }
                                                // elseif($valuess->id == '48'){
                                                //    $credits=500;
                                                // }


                                                // var_dump($credits);
                                                $debits=$partys1->credits;
                                                $tot_amt=$partys1->credits-$partys1->debits;
                                                $tot_amt=$tot_amt;
                                            }



                                        switch ($valuess->id) {
                                                        case 48:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;

                                            break;
                                        case 156:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=332&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 151:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=220&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 155:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=346&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 175:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=405&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 150:
                                          $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=163&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 159:  case 383:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=1&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;  
                                         case 373:
                                            $ssurl=base_url()."index.php/customer/common_ledger&from_date=".$formdate."&to_date=".$todate;
                                            break;       
                                        case 160:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=0&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;
                                            case 119:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;
                                        // case 172:
                                        //     $debit1=$credits1;
                                        //     $credits1=0;
                                        //     break;
                                        case 68:
                                            $ssurl=base_url()."index.php/report/customer_balance_comparision?from_date=".$formdate."&to_date=".$todate;
                                            break;
                                         case 179:
                                            $ssurl=base_url()."index.php/customer/ledger?cnn_status=1&party_type=1&from_date=".$formdate."&to_date=".$todate;
                                            break;    
                                        case 154:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 381:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;
                                         case 380:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate;
                                             $dnone="d-nones";
                                         break;
                                         case 382:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;   
                                        case 116:  case 120:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                             
                                        case 2: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                        break;    
                                         default:
                $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                            }



                                                                   // $viewststi="1";

                                                                             if($valuess->id=='119')
                                                                             {
                                                                                 $viewststi="0";
                                                                                 $credits= $credits - $debits;
                                                                                 $getval1= $debits;


                                                                             }
                                                                             elseif($valuess->id=='120')
                                                                             {
                                                                                  $credits= $credits;
                                                                                  $viewststi="0";
                                                                                  $getval2= $debits;

                                                                             }
                                                                              elseif($valuess->id=='155')
                                                                             {
                                                                                  $credits= $debits;
                                                                                  $viewststi="0";
                                                                                  $getval2= $debits;

                                                                             }
                                                                                 elseif($valuess->id=='48')
                                                                             {
                                                                                  $credits= $credits - $debits;
                                                                                  $viewststi="1";
                                                                                  $getval2= $debits;

                                                                             }
                                                                             elseif($valuess->id=='159')
                                                                             {
                                                                                  $credits=$credits;
                                                                                  $viewststi="1";
                                                                                  $getval2= $debits;

                                                                             }

                                                                             else
                                                                             {


                                                                                    $viewststi="0";
                                                                                    $credits= $tot_amt;


                                                                             }


                                          $check=0;
                                          if($valuess->account_type>0)
                                          {


                                       
                                              $expences_check=$this->db->query("SELECT SUM(a.credits-a.debits) as totals FROM all_ledgers as a JOIN accountheads_sub_group as b ON a.account_heads_id_2=b.id WHERE a.deleteid=0 AND b.deleteid=0 AND b.account_type='".$valuess->account_type."' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                              $expences_check=$expences_check->result();
                                              foreach($expences_check as $expence)
                                              {
                                                            
                                                           $totals=$expence->totals;
                                                           
                                              }

                                              if($totals>0)
                                              {
                                                  $check=1;
                                              }




                                          }      





                                                                   if($check==0)
                                                                   {


                                                                           if($credits<0)
                                                                           {

                                                                              if($valuess->id!='120')
                                                                              {


                                                                               $array2[] = array(


                                                                                'no' => $i,
                                                                                'id' => $valuess->id,
                                                                                'name' => $valuess->name,
                                                                                'url'=>$ssurl,
                                                                                'viewstatus' => $viewststi,
                                                                                'credit' => abs(round($credits)),
                                                                                'vll' => 0,
                                                                                'credittot' =>round($credits),

                                                                                );

                                                                              }



                                                                           


                                                                            if($valuess->id=='120')
                                                                            {
                                                                               $array2[] = array(


                                                                                'no' => $i,
                                                                                'id' => $valuess->id,
                                                                                'name' => $valuess->name,
                                                                                'url'=>$ssurl,
                                                                                'viewstatus' => $viewststi,
                                                                                'credit' => abs(round($credits)),
                                                                                'vll' => round($credits),
                                                                                'credittot' =>round($credits)

                                                                                );

                                                                             }



                                                                           }  

                                                                       }









                                       }

                             }



                                                                    $credittot=0;
                                                                    $credit_total=0;
                                                                    $debit_total=0;
                                                                    foreach ($array2 as $vvl) {
                                                                      // if ($vvl['id'] != 119) {

                                                                          if ($vvl['credittot'] > 0) {

                                                                              $credit_total += $vvl['credittot'];
                                                                                // Add to credit total
                                                                          } else {

                                                                              $debit_total += abs($vvl['credittot']);
                                                                          }


                                                                      // }
                                                                  }

                                                                   $credittot = abs($credit_total - $debit_total);

                                                                          // var_dump($credittot);
                                                                  // var_dump($credit_total);

                                                                    if($credittot!=0)
                                                                    {
                                                                         $array[] = array(


                                                                        'no' => $i,
                                                                        'id' => $value->id,
                                                                        'name' => $value->name,
                                                                        'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                        'credit' => round($credittot),
                                                                        'resultsub'=>$array2

                                                                         );

                                                                    }






                        $i++;

                     }



                    echo json_encode($array);





    }    
    
            public function trial_balance_report2_sub($formdate,$todate)
    {

                    
                    
                 
                   
                     $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0  AND trading='2' ORDER BY sort_order ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                         
                         
                         
                              $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                              $result_sub=$result_sub->result();
                          
                       
                             $array2=array();
                             $creditsfull=0;
                             foreach ($result_sub as  $valuess) 
                             {
                                      if($value->id==$valuess->account_type)
                                       {
                                           
                                           
                                           
                                            $debits=0;
                                            $credits=0;
                                            $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                            $party1=$result1->result();
                                            foreach($party1 as $partys1)
                                            {
                                                $credits=$partys1->debits;
                                                $debits=$partys1->credits;
                                                  $tot_amt=$partys1->credits-$partys1->debits;
                                                $tot_amt=abs($tot_amt);
                                            }

                                           
                                           
                                           
                                           
                                           
                                                                  
                                             
                                                                             if($valuess->id=='119')
                                                                             {
                                                                                 $viewststi="1";
                                                                                 $credits= $debits;
                                                                                 $getval1= $debits;
                                                                                 
                                                                             }
                                                                             elseif($valuess->id=='120')
                                                                             {
                                                                                  $credits=$credits;
                                                                                  $viewststi="1";
                                                                                  $getval2= $debits;
                                                                                 
                                                                             }
                                                                             else
                                                                             {
                                                                                   $viewststi="0";
                                                                                   $credits= $tot_amt;
                                                                             }
                                                                             
                                             
                                                                    
                                            
                                                                           
                                                                    
                                                                         
                                                                           if($credits!='')
                                                                           {
                                                                              if($valuess->id!='120')
                                                                              {
                                                                                  
                                                                              
                                                                               $array2[] = array(
                                                            
                                                            
                                                                                'no' => $i, 
                                                                                'id' => $valuess->id, 
                                                                                'name' => $valuess->name, 
                                                                                'url'=>base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id,
                                                                                'viewstatus' => $viewststi,
                                                                                'credit' => round($credits,2),
                                                                                'vll' => 0,
                                                                                'credittot' =>round($credits,2),
                                                                                
                                                                                );
                                                                                
                                                                              }
                                                                             
                                                                      
                                                                           }
                                                                           
                                                                           
                                                                            if($valuess->id=='120')
                                                                            {
                                                                               $array2[] = array(
                                                            
                                                            
                                                                                'no' => $i, 
                                                                                'id' => $valuess->id, 
                                                                                'name' => $valuess->name, 
                                                                                'url'=>base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id,
                                                                                'viewstatus' => $viewststi,
                                                                                'credit' => round($credits,2),
                                                                                'vll' => round($credits,2),
                                                                                'credittot' => str_replace('-','',round($getval1-$credits,2))
                                                                                
                                                                                );
                                                                                
                                                                             }
                                                                             
                                                                      
                                                                          
                                                                           
                                                                     
                                                                     
                                                                    
                                                                   
                                           
                                       }
                                 
                             }
                     
                     
                     
                                                                    $credittot=0;
                                                                    foreach($array2 as $vvl)
                                                                    {
                                                                        
                                                                        
                                                                       if($vvl['id']!=119)
                                                                       {
                                                                            $credittot+=$vvl['credittot'];
                                                                       }
                                                                       
                                                                       
                                                                        
                                                                    }
                                                                  
                                                                  
                             
                                                                    if($credittot!=0)
                                                                    {
                                                                         $array[] = array(
                                                                        
                                                                        
                                                                        'no' => $i, 
                                                                        'id' => $value->id, 
                                                                        'name' => $value->name, 
                                                                        'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                        'credit' => round($credittot,2),
                                                                        'resultsub'=>$array2
                                            
                                                                         );
                                                             
                                                                    }
                                                                    
                                                        
                         
                         


                        $i++;

                     }
                     
                

                    return json_encode($array);
                    
                    
                    
                    

    }
    
    
    

    
    
            public function trial_balance_report3()
    {


                    $formdate=$_GET['formdate'];
                    $todate=$_GET['fromto'];

                     $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0  AND trading IN ('1','10') ORDER BY sort_order ASC");
                     $result=$result->result();



                     $i=1;
                     $array=array();

                     foreach ($result as  $value) {



                              $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                             $result_sub=$result_sub->result();


                             $array2=array();
                             $creditsfull=0;
                             foreach ($result_sub as  $valuess)
                             {
                                      if($value->id==$valuess->account_type)
                                       {



                                            $debits=0;
                                            $credits=0;

                                            if($valuess->id == '2'){
                                            $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='2' AND party_type=1 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");





                                              }
                                              elseif($valuess->id==59)
                                               {

                                              

$result1=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.payment_date<='".$todate."' AND a.party_type=5 AND a.customer_id='161' ORDER BY a.id DESC");



                                              }
                                              elseif($valuess->id==154)
                                               {
                                                
                                              

$result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(debits) as credits,SUM(credits) as debits FROM all_ledgers WHERE deleteid='0' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0 ORDER BY id DESC");



                                              }
                                            elseif($valuess->id==116)
                                            {

                                    if($formdate=='2024-04-01')
                                    {
                                      $formdate='2023-06-01';
                                    }  


$result1=$this->db->query("SELECT SUM((b.rate+b.commission)*b.qty) as totalsum, SUM((b.rate+b.commission)*b.qty) as credits,SUM((b.rate+b.commission)*b.qty) as debits FROM orders_process as a join order_product_list_process as b ON a.id=b.order_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.order_base>0 AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");


                                           }
                                           else
                                           {

                                                  $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum,SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                           }


                                            $party1=$result1->result();
                                            foreach($party1 as $partys1)
                                            {


                                                $credits=$partys1->debits;
                                                $debits=$partys1->credits;
                                            }








                                                                      if($valuess->id=='116')
                                                                     {

                                                                          $totalcommssion=0;
                                                                        // $resultset=$this->db->query("SELECT SUM(credits) as totalcridit FROM all_ledgers WHERE deleteid=0 AND customer_id='252' AND party_type=5  AND commission_customer>0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY id DESC");
                                                                        // $resultset=$resultset->result();
                                                                        // foreach($resultset as $ss)
                                                                        // {
                                                                        //    $totalcommssion= $ss->totalcridit;
                                                                        // }


                                                                         $viewststi="0";
                                                                         $credits= $credits-$totalcommssion;
                                                                         $getval1= $credits-$totalcommssion;



                                                                     }
                                                                     elseif($valuess->id == 59){
                                                                     $credits = $partys1->totalsum;
                                                                       $viewststi="0";
                                                                     }
                                                                     elseif($valuess->id=='154'){
                                                                        $credits = '-'.$credits;
                                                                        $viewststi="0";
                                                                     }
                                                                     elseif($valuess->id=='2')
                                                                     {

                                                                          $credits= $debits;
                                                                          $viewststi="0";
                                                                          $getval2= $debits;



                                                                     }
                                                                     elseif($valuess->id=='124')
                                                                     {


                                                                            $closeing_stock=0;
                                                                            $result_stock=$this->db->query("SELECT selling_average_price,average_price,stock FROM product_list WHERE deleteid=0 AND stock>0  ORDER BY id DESC");
                                                                            $result_stock=$result_stock->result();
                                                                            foreach($result_stock as $stock)
                                                                            {

                                                                                $selling_average_price=$stock->selling_average_price;
                                                                                $average_price=$stock->average_price;
                                                                                $profile_loss_price=$selling_average_price-$average_price;
                                                                                $valueprice=str_replace('-','',round($profile_loss_price,2));
                                                                                //$closeing_stock+=$valueprice*$stock->stock;

                                                                            }


                                                                          $credits=round($closeing_stock,2);
                                                                          $viewststi="0";
                                                                          $getval3= $credits;



                                                                     }
                                                                     else
                                                                     {

                                                                                   $viewststi="0";
                                                                                   $credits= $partys1->totalsum;
                                                                                 


                                                                     }

                                        switch ($valuess->id) {
                                         
                                        case 48:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;

                                            break;
                                        case 156:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=332&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 151:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=220&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 155:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=346&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 175:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=405&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 150:
                          $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=163&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 159:  case 383:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=1&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;  
                                         case 373:
                                            $ssurl=base_url()."index.php/customer/common_ledger&from_date=".$formdate."&to_date=".$todate;
                                            break;       
                                        case 160:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=0&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;
                                            case 119:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;
                                        // case 172:
                                        //     $debit1=$credits1;
                                        //     $credits1=0;
                                        //     break;
                                        case 68:
                                            $ssurl=base_url()."index.php/report/customer_balance_comparision?from_date=".$formdate."&to_date=".$todate;
                                            break;
                                         case 179:
                                            $ssurl=base_url()."index.php/customer/ledger?cnn_status=1&party_type=1&from_date=".$formdate."&to_date=".$todate;
                                            break;    
                                        case 154:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 381:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;
                                         case 380:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate;
                                             $dnone="d-nones";
                                         break;
                                         case 382:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;   
                                        case 116:  case 120:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                             
                                        case 2: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                        break;    
                                        default:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                            }













                                         if($valuess->account_type>0)
                                         {


                                       
                                              $expences_check=$this->db->query("SELECT SUM(a.credits-a.debits) as totals FROM all_ledgers as a JOIN accountheads_sub_group as b ON a.account_heads_id_2=b.id WHERE a.deleteid=0 AND b.deleteid=0 AND b.account_type='".$valuess->account_type."' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                              $expences_check=$expences_check->result();
                                              foreach($expences_check as $expence)
                                              {
                                                            
                                                           $totals=$expence->totals;
                                                           
                                              }

                                              if($totals>0)
                                              {
                                                  $check=1;
                                              }




                                           }
                                           if($check==1)
                                           {
                                                                                   $credits=1;
                                           }






                                                                if($credits>0)
                                                                {

                                                                    
                                                                 if($valuess->id==2)
                                                                 {

                                                                     $array2[] = array(


                                                                        'no' => $i,
                                                                        'id' => $valuess->id,
                                                                        'name' => $valuess->name,
                                                                        'url'=>$ssurl,
                                                                        'viewstatus' => $viewststi,
                                                                        'credit' => round($credits),
                                                                        'credittot' => round($getval1-$getval2)

                                                                     );


                                                                 }

                                                                 if($valuess->id!=2)
                                                                 {

                                                                     $array2[] = array(


                                                                        'no' => $i,
                                                                        'id' => $valuess->id,
                                                                        'name' => $valuess->name,
                                                                        'url'=>$ssurl,
                                                                        'viewstatus' => $viewststi,
                                                                        'credit' => round($credits),
                                                                        'credittot' => round($credits)

                                                                     );

                                                                 }


                                                                }







                                       }

                             }





                                                                    $credittot=0;
                                                                    foreach($array2 as $vvl)
                                                                    {


                                                                           if($vvl['id']!=116)
                                                                           {
                                                                                $credittot+=$vvl['credittot'];

                                                                           }





                                                                    }

                                                                    if($credittot!=0)
                                                                    {
                                                                         $array[] = array(


                                                                        'no' => $i,
                                                                        'id' => $value->id,
                                                                        'name' => $value->name,
                                                                        'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                        'credit' => round($credittot),
                                                                        'resultsub'=>$array2
                                                                         );

                                                                    }

                                                                   













                        $i++;

                     }

                  $currentDate = date('Y-m-d');
                     //sales value
                     $query = $this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as total_amount FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='116' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' AND order_id>0  ORDER BY id DESC");
                    $resultqty = $query->result();
   $openstock1=$this->db->query("SELECT SUM(opening_val/opening_qty) as openstock  FROM product_list WHERE deleteid=0  ")->result();
 
                     $query1 = $this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as total,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0   AND account_heads_id_2='2' AND party_type=1 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                     $result1 = $query1->result();
 
                     //Commision
                    //  $query_commision = $this->db->query("SELECT SUM(debits) as dtotalvalue FROM all_ledgers WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND deleteid=0 AND account_head_id=154 ORDER BY id DESC")->result();
 
                     // Store the sum of total in $tot_tot
                     $total_sum = round($resultqty[0]->total_amount);
                     $total_return = round($result1[0]->total);
                     $total_comm = round($query_commision[0]->dtotalvalue);
                     $total_inw = 0;
                      $total_sum = ($total_sum - $total_return);
                      $total_sum=0-$total_sum;
 
                      $weighted_avg[] = array(
                         'no' => $key,
                         'id' => "004",
                         'name' => "CLOSING STOCKS",
                         'url'=> base_url() . "index.php/report_new/weighted_average?formdate=" . urlencode($formdate) . "&todate=" . urlencode($todate),
                         'viewstatus' => 0,
                         'credit' => round(intval($total_sum),2),
                         'vll' => 0,
                         'credittot' =>array_sum($total_sum)
                         ); 
 
                         $array[] = array(
                             'no' => "#",
                             'id' => "003",
                             'name' =>"STOCKS",
                             'url'=> base_url(). "report_new/weighted_average",
                             'credit' =>round(intval($total_sum),2),
                             'resultsub'=>$weighted_avg
                        );


                    echo json_encode($array);

    }



    
    
    
            public function trial_balance_report3_sub($formdate,$todate)
    {

                    
                    
                 
                      $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0  AND trading='1' ORDER BY sort_order ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                         
                         
                         
                              $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                             $result_sub=$result_sub->result();
                          
                       
                             $array2=array();
                             $creditsfull=0;
                             foreach ($result_sub as  $valuess) 
                             {
                                      if($value->id==$valuess->account_type)
                                       {
                                           
                                           
                                           
                                            $debits=0;
                                            $credits=0;
                                            $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."'  AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                            $party1=$result1->result();
                                            foreach($party1 as $partys1)
                                            {
                                                 
                                              
                                                $credits=$partys1->debits;
                                                $debits=$partys1->credits;
                                            }

                                           
                                           
                                           
                                           
                                           
                                                                  
                                             
                                                                      if($valuess->id=='116')
                                                                     {
                                                                         $viewststi="1";
                                                                         
                                                                         $getval1= $credits;
                                                                         
                                                                        
                                                                         
                                                                     }
                                                                     elseif($valuess->id=='2')
                                                                     {
                                                                        
                                                                          $credits=$debits;
                                                                          $viewststi="1";
                                                                          $getval2= $debits;
                                                                         
                                                                         
                                                                         
                                                                     }
                                                                     elseif($valuess->id=='124')
                                                                     {
                                                                         
                                                                         
                                                                            $closeing_stock=0;
                                                                            $result_stock=$this->db->query("SELECT selling_average_price,average_price,stock FROM product_list WHERE deleteid=0 AND stock>0  ORDER BY id DESC");
                                                                            $result_stock=$result_stock->result();
                                                                            foreach($result_stock as $stock)
                                                                            {
                                                                                
                                                                                $selling_average_price=$stock->selling_average_price;
                                                                                $average_price=$stock->average_price;
                                                                                $profile_loss_price=$selling_average_price-$average_price;
                                                                                $valueprice=str_replace('-','',round($profile_loss_price,2));
                                                                                //$closeing_stock+=$valueprice*$stock->stock;
                                                                                
                                                                            }
                             
                                                                        
                                                                          $credits=round($closeing_stock,2);
                                                                          $viewststi="0";
                                                                          $getval3= $credits;
                                                                          
                                                                          
                                                                         
                                                                     }
                                                                     else
                                                                     {
                                                                         
                                                                                   $viewststi="0";
                                                                                   if($credits==0)
                                                                                   {
                                                                                      
                                                                                       $credits= $debits;
                                                                                   }
                                                                           
                                                                           
                                                                     }
                                                                     
                                             
                                             
                                            
                                                
                                                                 if($valuess->id==2)
                                                                 {
                                                                     
                                                                     $array2[] = array(
                                                    
                                                    
                                                                        'no' => $i, 
                                                                        'id' => $valuess->id, 
                                                                        'name' => $valuess->name, 
                                                                        'url'=>base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id,
                                                                        'viewstatus' => $viewststi,
                                                                        'credit' => round($credits,2),
                                                                        'credittot' => round($getval1-$getval2,2)
                                                                        
                                                                     );
                                                                     
                                                                     
                                                                 }
                                                                 
                                                                 if($valuess->id!=2)
                                                                 {
                                                                     
                                                                     $array2[] = array(
                                                    
                                                    
                                                                        'no' => $i, 
                                                                        'id' => $valuess->id, 
                                                                        'name' => $valuess->name, 
                                                                        'url'=>base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id,
                                                                        'viewstatus' => $viewststi,
                                                                        'credit' => round($credits,2),
                                                                        'credittot' => round($credits,2)
                                                                        
                                                                     );
                                                                     
                                                                 }
                                                                 
                                                                     
                                                                    
                                                                    
                                                                     
                                                                    
                                           
                                       }
                                 
                             }
                     
                     
                     
                     
                     
                                                                    $credittot=0;
                                                                    foreach($array2 as $vvl)
                                                                    {
                                                                        
                                                                           
                                                                           if($vvl['id']!=116)
                                                                           {
                                                                                $credittot+=$vvl['credittot'];
                                                                       
                                                                           }
                                                                       
                                                                           
                                                                       
                                                                       
                                                                        
                                                                    }
                             
                                                                    if($credittot!=0)
                                                                    {
                                                                         $array[] = array(
                                                                        
                                                                        
                                                                        'no' => $i, 
                                                                        'id' => $value->id, 
                                                                        'name' => $value->name, 
                                                                        'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                        'credit' => round($credittot,2),
                                                                        'resultsub'=>$array2
                                                                         );
                                                             
                                                                    }
                                                                    
                                                             
                                                           
                         
                         
                                               
                         
                         
                         
                         
                         


                        $i++;

                     }
             
              
                    return json_encode($array);

    }
    
    
    
    
    
    
    
    
        public function trial_balance_report()
    {

                       $formdate=$_GET['formdate'];
                       $todate=$_GET['fromto'];




                       $resultaset=$this->trial_balance_report2_sub($formdate,$todate);
                       $resulta=json_decode($resultaset);
                           
                              
                        
                        $a=0;
                        foreach($resulta as $vl)
                        {
                            $a+=$vl->credit;
                        }
                        
                      
                        
                        $resultb=$this->trial_balance_report3_sub($formdate,$todate);
                        
                        $resultb=json_decode($resultb);


                  
                            
                        $b=0;
                        foreach($resultb as $vl)
                        {
                            $b+=$vl->credit;
                        }
                           
                         
                        
                        $total=0;
                        if($a<$b)
                        {
                            $total=$b-$a;
                        }
                    
                    
                       
                 
                         $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0 AND showno=0 AND spilt_status='1' AND trading IN ('0','12') ORDER BY sort_order ASC");
                         $result=$result->result();
                         
                 
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                         
                         
                         
                              $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                             $result_sub=$result_sub->result();
                             
                          
                       
                             $array2=array();
                              $creditsfull=0;
                             foreach ($result_sub as  $valuess) 
                             {
                                      if($value->id==$valuess->account_type)
                                       {
                                              $debits=0;
                                              $credits=0;

                                          if($valuess->id==156)
                                         {

                                          

                                               $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND party_type=5 AND customer_id=332 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                         
                                         }
                                        elseif($valuess->id==151)
                                         {

                                          

                                            $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5  AND a.customer_id='220' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                         
                                         }
                                         else
                                         {

                                              $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                         }

                                             
                                              $party1=$result1->result();
                                              foreach($party1 as $partys1)
                                              {


                                              

                                                 
                                              
                                                              $credits=$partys1->credits-$partys1->debits;
                                                              $credits=$credits;
                                                              $creditsval=$credits;
                                                
                                                
                                                
                                               
                                              }



                                                switch ($valuess->id) {
                                                        case 48:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;

                                            break;
                                        case 156:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=332&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 151:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=220&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 155:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=346&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 175:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=405&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 150:
                                          $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=163&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 159:  case 383:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=1&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;  
                                         case 373:
                                            $ssurl=base_url()."index.php/customer/common_ledger&from_date=".$formdate."&to_date=".$todate;
                                            break;       
                                        case 160:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=0&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;
                                            case 119:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;
                                        // case 172:
                                        //     $debit1=$credits1;
                                        //     $credits1=0;
                                        //     break;
                                        case 68:
                                            $ssurl=base_url()."index.php/report/customer_balance_comparision?from_date=".$formdate."&to_date=".$todate;
                                            break;
                                         case 179:
                                            $ssurl=base_url()."index.php/customer/ledger?cnn_status=1&party_type=1&from_date=".$formdate."&to_date=".$todate;
                                            break;    
                                        case 154:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 381:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;
                                         case 380:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate;
                                             $dnone="d-nones";
                                         break;
                                         case 382:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;   
                                        case 116:  case 120:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                             
                                        case 2: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                        break;    
                                        
                                                        default:
                                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;
                                                            break;
                                                            }
                                                            

                                          if($valuess->account_type>0)
                                          {


                                       
                                              $expences_check=$this->db->query("SELECT SUM(a.credits-a.debits) as totals FROM all_ledgers as a JOIN accountheads_sub_group as b ON a.account_heads_id_2=b.id WHERE a.deleteid=0 AND b.deleteid=0 AND b.account_type='".$valuess->account_type."' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                              $expences_check=$expences_check->result();
                                              foreach($expences_check as $expence)
                                              {
                                                            
                                                           $totals=$expence->totals;
                                                           
                                              }

                                              if($totals>0)
                                              {
                                                  $check=1;
                                              }




                                          }
                                           if($check==1)
                                           {
                                                                                   $credits=1;
                                           }

                                                         
                                                         if($credits>0)
                                                         {
                                                             
                                                          if($creditsval!=0)
                                                            {

                                                            $array2[] = array(
                                            
                                            
                                                                'no' => $i, 
                                                                'id' => $valuess->id, 
                                                                'name' => $valuess->name, 
                                                                'url'=>$ssurl,
                                                                'credit' => round($creditsval,2)
                                                                
                                                             );



                                                              $creditsfull+=$creditsval;

                                                            }
                                                             
                                                         }
                                             
                                             
                                           
                                       }
                                 
                             }
                     
                     
                     
                     
                     
                     
                                                 
                                                
                                                   
                                                   
                                                            if($creditsfull==0)
                                                            {
                                                                
                                                           
                                                            
                                                                 $array[] = array(
                                                                    
                                                                    
                                                                    'no' => $i, 
                                                                    'id' => $value->id, 
                                                                    'name' => '0', 
                                                                    'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                    'credit' => round($creditsfull),
                                                                    'resultsub'=>$array2
                                        
                                                                 );
                                                             
                                                             
                                                            }
                                                            
                                                            if($creditsfull!=0)
                                                            {
                                                                
                                                           
                                                            
                                                                 $array[] = array(
                                                                    
                                                                    
                                                                    'no' => $i, 
                                                                    'id' => $value->id, 
                                                                    'name' => $value->name, 
                                                                    'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                    'credit' => round($creditsfull),
                                                                    'resultsub'=>$array2
                                        
                                                                 );
                                                             
                                                             
                                                            }
                         
                         
                                                
                         
                         
                         
                         
                         


                        $i++;

                     }

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
    
            public function trial_balance_report_sub($formdate,$todate)
    {

                       $resultaset=$this->trial_balance_report2_sub($formdate,$todate);
                
                        $resulta=json_decode($resultaset);
                           
                              
                        
                        $a=0;
                        foreach($resulta as $vl)
                        {
                            $a+=$vl->credit;
                        }
                        
                      
                        
                        $resultb=$this->trial_balance_report3_sub($formdate,$todate);
                        
                        $resultb=json_decode($resultb);
                            
                            
                        $b=0;
                        foreach($resultb as $vl)
                        {
                            $b+=$vl->credit;
                        }
                           
                         
                        $total=0;
                        if($a<$b)
                        {
                            $total=$b-$a;
                        }
                    
                    
                    
                 
                     $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0 AND showno=0 AND spilt_status='1' AND trading='0' ORDER BY sort_order ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                         
                         
                         
                              $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                             $result_sub=$result_sub->result();
                             
                          
                       
                             $array2=array();
                              $creditsfull=0;
                             foreach ($result_sub as  $valuess) 
                             {
                                      if($value->id==$valuess->account_type)
                                       {
                                              $debits=0;
                                              $credits=0;
                                              $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                              $party1=$result1->result();
                                              foreach($party1 as $partys1)
                                              {
                                                 
                                              
                                                $credits=$partys1->credits;
                                               
                                              }

                                                         
                                                         if($credits!=0)
                                                         {
                                                             
                                                         

                                                            $array2[] = array(
                                            
                                            
                                                                'no' => $i, 
                                                                'id' => $valuess->id, 
                                                                'name' => $valuess->name, 
                                                                'url'=>base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id,
                                                                'credit' => round($credits,2)
                                                                
                                                             );
                                                             
                                                         }
                                             
                                               $creditsfull+=$credits;
                                           
                                       }
                                 
                             }
                     
                     
                     
                     
                     
                     
                                                 
                                                
                                                   
                                                   
                                                            if($total!=0)
                                                            {
                                                                
                                                           
                                                            
                                                             $array[] = array(
                                                                
                                                                
                                                                'no' => $i, 
                                                                'id' => $value->id, 
                                                                'name' => $value->name, 
                                                                'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                'credit' => round($creditsfull+$total,2),
                                                                'resultsub'=>$array2
                                    
                                                             );
                                                             
                                                             
                                                            }
                         
                         
                                                
                         
                         
                         
                         
                         


                        $i++;

                     }

                    return json_encode($array);

    }
    
    
    
    
    
    
    
    
    
    
        public function trial_balance_report1()
    {

                    
                    
                $formdate=$_GET['formdate'];
                $todate=$_GET['fromto'];
                    
                    
                    
                $resultaset=$this->trial_balance_report2_sub($formdate,$todate);
                
                $resulta=json_decode($resultaset);
                   
                      
                
                $a=0;
                foreach($resulta as $vl)
                {
                    $a+=$vl->credit;
                }
                
              
                
                $resultb=$this->trial_balance_report3_sub($formdate,$todate);
                
                $resultb=json_decode($resultb);
                    
                    
                $b=0;
                foreach($resultb as $vl)
                {
                    $b+=$vl->credit;
                }
                   
                 
                $total=0;
                if($a>$b)
                {
                    $total=$a-$b;
                }
                    
                    
                
      
                    
                     
                     $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0  AND trading IN ('3','12') ORDER BY sort_order ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                         
                        
                          
                             $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                             $result_sub=$result_sub->result();
                        
                           
                       
                             $array2=array();
                                $creditsfull=0;
                                 
                             foreach ($result_sub as  $valuess) 
                             {
                                 $debits=0;
                                 $credits=0;
                               
                                      if($value->id==$valuess->account_type)
                                       {
                                           
                                                     

                                          if($valuess->id==156){

                                              $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=332 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                         }
                                           elseif($valuess->id==150)
                                         {

                                              $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0  AND party_type=5 AND customer_id=163 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                         
                                         }
                                          elseif($valuess->id==151)
                                         {
                                           $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5  AND a.customer_id='220' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                         }
                                          elseif($valuess->id==372)
                                         {
                                           $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5  AND a.account_heads_id_2='372' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                         }
                                           elseif($valuess->id==152)
                                         {
                                           $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum,SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='229' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                         }
                                         elseif($valuess->id ==17){
                                            $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_head_id='17' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                         }
                                         elseif($valuess->id ==175)
                                         {

                                            $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND party_type=5 AND customer_id='405' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");

                                         }
                                        elseif($valuess->id==164)
                                         {
                                        $result1=$this->db->query("SELECT SUM(a.credits-a.debits) as totalsum, SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='13' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                          }
                                         elseif($valuess->id==174)
                                         {


                                            $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers WHERE deleteid=0 AND account_head_id='174' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                          }
                                          else 
                                          {
                                                      $result1=$this->db->query("SELECT SUM(credits-debits) as totalsum, SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                          }

                                                      $party1=$result1->result();

                                                      $total_credit=0;
                                                      $total_debit=0;
                                                      $expences=0;
                                                      foreach($party1 as $partys1)
                                                      {
                                                         
                                                     

                                                        $credits=$partys1->credits;

                                                        $debits=$partys1->totalsum;

                                                        $totalsum = $partys1->totalsum;

                                                      

                                                      if($valuess->id==174){
                                                     
                                                        $debits = $credits-$partys1->debits;
                                                        $credits = $credits;
                                                        $expences = $partys1->debits;
                                                        //   var_dump($partys1);
                                                        // $debits=$partys1->debits;
                                                        $value_status = 1;
                                                      }
                                                      if($valuess->id==17)
                                                      {
                                                     
                                                        $debits= $partys1->credits;
                                                        $value_status = 1;
                                                      }

                                                        if($valuess->id==151)
                                                        {
                                                       
                                                          $debits=$partys1->totalsum;
                                                         

                                                        }
                                                        if($valuess->id==372)
                                                        {
                                                       
                                                         $debits=$partys1->totalsum;
                                                        

                                                        }


                                                             $tot_amt=$totalsum;

                                                      }

                                                  switch ($valuess->id) {
                                                        case 48:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;

                                            break;
                                        case 156:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=332&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 151:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=220&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 155:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=346&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 175:
                                            $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=405&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 150:
                                          $ssurl=base_url()."index.php/accountheads/others_ledger_find?customer_id=163&party_type=5&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 159:  case 383:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=1&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;  
                                         case 373:
                                            $ssurl=base_url()."index.php/customer/common_ledger&from_date=".$formdate."&to_date=".$todate;
                                            break;       
                                        case 160:
                                            $ssurl=base_url()."index.php/driver/ledger?driver_collection_status=0&party_type=2&from_date=".$formdate."&to_date=".$todate;;
                                            break;
                                            case 119:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            $debit1=$credits1;
                                            $credits1=0;
                                            break;
                                        // case 172:
                                        //     $debit1=$credits1;
                                        //     $credits1=0;
                                        //     break;
                                        case 68:
                                           // $ssurl=base_url()."index.php/report/customer_balance_comparision?from_date=".$formdate."&to_date=".$todate;

                                        $ssurl=base_url()."index.php/customer/ledger?trail_balance=1from_date=".$formdate."&to_date=".$todate;


                                            break;
                                         case 179:
                                            $ssurl=base_url()."index.php/customer/ledger?cnn_status=1&party_type=1&from_date=".$formdate."&to_date=".$todate;
                                            break;    
                                        case 154:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                        case 381:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;
                                         case 380:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate;
                                             $dnone="d-nones";
                                         break;
                                         case 382:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                             $dnone="d-nones";
                                         break;   
                                        case 116:  case 120:
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                            break;
                                             
                                        case 2: 
                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&from_date=".$formdate."&to_date=".$todate;
                                        break;    
                                        
                                                        default:
                                                            $ssurl=base_url()."index.php/report/balancereport_base_ledger_beta?accountshead=$valuess->id&grouped=1&from_date=".$formdate."&to_date=".$todate;
                                                            break;
                                                            }
                                                            

                                               // if($valuess->id==174){
                                               //      $array2[] = array(
                                    
                                    
                                               //      'no' => $i, 
                                               //      'id' => $valuess->id, 
                                               //      'name' => $valuess->name,
                                               //      'value_status' => $value_status, 
                                               //      'debit' => round($credits),
                                               //      'url'=>base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id,
                                               //      'credit' => round($credits)
                                                    
                                               //   );

                                               // }

                                           $check=1;
                                          if($valuess->account_type>0)
                                          {


                                       
                                              $expences_check=$this->db->query("SELECT SUM(a.credits-a.debits) as totals FROM all_ledgers as a JOIN accountheads_sub_group as b ON a.account_heads_id_2=b.id WHERE a.deleteid=0 AND b.deleteid=0 AND b.account_type='".$valuess->account_type."' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                               $totals=0;
                                              $expences_check=$expences_check->result();
                                              foreach($expences_check as $expence)
                                              {
                                                            
                                                           $totals=$expence->totals;
                                                           
                                              }

                                              if($totals<0)
                                              {
                                                  $check=1;
                                              }




                                          }

                                                    if($tot_amt<0)
                                                    {


                                                       if($check==0)
                                                      {

                                                        
                                                   
                                               
                                                     $array2[] = array(
                                    
                                    
                                                        'no' => $i, 
                                                        'id' => $valuess->id, 
                                                        'name' => $valuess->name,
                                                        'value_status' => $value_status, 
                                                        'debit' => abs(round($debits)),
                                                        'url'=>$ssurl,
                                                        'credit' => round($credits)
                                                        
                                                     );


                                                      $creditsfull+=$tot_amt;

                                                      }
                                                 
                                                    } 
                                              
                                           
                                       }
                                 
                             }
                     
                     
                             $credit_total=0;
                             $debit_total=0;
                            //  $credittot=0;
                                       foreach ($array2 as $vvl) {

                                         if($vvl['debit'] > 0){
                                                 $credit_total += $vvl['debit'];
                                             } else { 
                                                 $debit_total += $vvl['debit'];                                                
                                             }
                                             $credittot = $credit_total - $debit_total;
                                    }

                                                          if($creditsfull<0)
                                                          {

                                                             $array[] = array(
                                                                
                                                                'no' => $i, 
                                                                'id' => $value->id, 
                                                                'name' => $value->name, 
                                                                'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                'credit' => abs(round($credittot)),
                                                                'resultsub'=>$array2
                                    
                                                             );
                                                             
                                                             
                                                          }
                                                             
                        $i++;

                     }


                    

                    echo json_encode($array);
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        public function trial_balance_report1_sub($formdate,$todate)
    {

                    
                    
                   
                 $resultaset=$this->trial_balance_report2_sub($formdate,$todate);
                
                $resulta=json_decode($resultaset);
                   
                      
                
                $a=0;
                foreach($resulta as $vl)
                {
                    $a+=$vl->credit;
                }
                
              
                
                $resultb=$this->trial_balance_report3_sub($formdate,$todate);
                
                $resultb=json_decode($resultb);
                    
                    
                $b=0;
                foreach($resultb as $vl)
                {
                    $b+=$vl->credit;
                }
                   
                 
                $total=0;
                if($a>$b)
                {
                    $total=$a-$b;
                }
                    
                    
                
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                 $result=$this->db->query("SELECT * FROM accounttype WHERE deleteid=0 AND showno=0 AND spilt_status='0' AND trading='0' ORDER BY sort_order ASC");
                     $result=$result->result();
                     
                 
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                         
                         
                          
                             $result_sub=$this->db->query("SELECT * FROM accountheads_sub_group WHERE deleteid=0 AND account_type='".$value->id."'  ORDER BY sort_order ASC");
                             $result_sub=$result_sub->result();
                        
                           
                       
                             $array2=array();
                                $creditsfull=0;
                             foreach ($result_sub as  $valuess) 
                             {
                                 
                                 
                                  
                                      if($value->id==$valuess->account_type)
                                       {
                                           
                                                      $debits=0;
                                                      $credits=0;
                                           
                                           
                                     
                                                   
                                                      $result1=$this->db->query("SELECT SUM(debits) as debits,SUM(credits) as credits FROM all_ledgers WHERE deleteid=0 AND account_heads_id_2='".$valuess->id."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY id DESC");
                                                      $party1=$result1->result();
                                                      foreach($party1 as $partys1)
                                                      {
                                                         
                                                      
                                                        $credits=$partys1->debits;

                                                         $tot_amt=$partys1->credits-$partys1->debits;
                                                             $tot_amt=abs($tot_amt);



                                                       
                                                      }
                             
                                           
                                               
                                                    if($credits!=0)
                                                    {
                                                        
                                                   
                                               
                                                     $array2[] = array(
                                    
                                    
                                                        'no' => $i, 
                                                        'id' => $valuess->id, 
                                                        'name' => $valuess->name, 
                                                        'url'=>base_url().'index.php/report/balancereport_base_ledger?accountshead='.$valuess->id,
                                                        'credit' => round($tot_amt,2)
                                                        
                                                     );
                                                 
                                                    } 
                                               $creditsfull+=$tot_amt;
                                           
                                       }
                                 
                             }
                     
                     
                     
                     
                     
                     
                    
                                                         
                                                         
                                                         
                                                         
                                                          if($creditsfull!=0)
                                                          {
                                                              
                                                         
                     
                                                             $array[] = array(
                                                                
                                                                
                                                                'no' => $i, 
                                                                'id' => $value->id, 
                                                                'name' => $value->name, 
                                                                'url'=>base_url().'index.php/report/trial_balance_full?accountstype='.$value->id,
                                                                'credit' => round($creditsfull+$total),
                                                                'resultsub'=>$array2
                                    
                                                             );
                                                             
                                                             
                                                          }
                                                             
                         
                         
                                                
                         
                         
                         
                         
                         


                        $i++;

                     }
                    
                   
                    return  json_encode($array);
    }
    
    
    
        public function fetch_data_sales_balance_report()
    {

                    
                    
                    

                    
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     
                    
                 
                     $stat=' ';
                     
                     if($payment_mode!='undefined') 
                     {   
                         if($payment_mode!='ALL') 
                         {
                             $stat.=' AND a.payment_mode="'.$payment_mode.'"';
                         }
                         
                         
                     }
                     
                     if($order_status=='undefined') 
                     {
                         
                     
                      $stat.=' AND a.finance_status IN ("3","4")';
                      
                      $stat.=' AND a.assign_status IN ("1","2","3","11","12")';
                      
                     }
                     else
                     {
                         
                         if($order_status=='ALL')
                         {
                              $stat.=' AND a.finance_status IN ("3","4")';
                              $stat.=' AND a.assign_status IN ("1","2","3","11","12")';
                         }
                         else
                         {
                             
                              $order_status=explode(',', $order_status);
                              $order_status=implode("','", $order_status);
                              $stat.=' AND a.finance_status IN ("3","4")';
                              $stat.=" AND a.assign_status IN ('$order_status')";
                            
                             
                         }
                        
                     }
                      
                    
                      
                      
                    $userslog="";
                  
                    
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                                 
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                         $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  a.sales_group IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                      
                      
                     
                     
                     
                     if($_GET['formdate']=='undefined')
                     {
                         
                        
                         $formdate=date('Y-m-01');
                         $todate=date('Y-m-t');
                         $result=$this->db->query("SELECT a.*,b.company_name,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND  a.deleteid=0 AND a.order_base='1' $stat $userslog ORDER BY a.id DESC");
                     
                     }
                     else
                     {
                         
                       $result=$this->db->query("SELECT a.*,b.company_name,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND a.order_base='1' $stat $userslog ORDER BY a.id DESC");
                       
                     }
                     
                    
                    //echo "SELECT a.*,b.company_name,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND a.order_base='1' $stat ORDER BY a.id DESC";
                    //exit;
                    
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                       
                       
                       
                                 
                                
                                    
                                     
                                     $sales_group="";
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id='".$value->sales_group."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group=$val->name;
                         
                                    }
                                    
                                    
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_team=$val->name;
                         
                                    }
                                    
                                    
                                     $sales_head="";
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id='".$value->sales_head."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_head=$val->name;
                         
                                    }
                                    
                                    
                                    
                                    
                       
                       
                         $status="Order Completed";
                         if($value->assign_status=='11')
                         {
                             $status='UN Dispatched / Sheet In Factory';
                         }
                         
                         if($value->assign_status=='12')
                         {
                             $status='Driver UN-Picked';
                         }
                         
                         if($value->assign_status=='1')
                         {
                             $status='Trip Not Started';
                         }
                         
                         
                         if($value->assign_status=='2')
                         {
                             $status='Trip Started & Un-Delivered';
                         }
                         
                         if($value->assign_status=='3' && $value->finance_status=='4')
                         {
                             $status='Delivered & Pending collection';
                         }
                         if($value->assign_status=='3' && $value->finance_status=='4')
                                                 {
                                                    
                                                     $payment_status='Pending';
                                                 }
                                                 else
                                                 {
                                                     $payment_status='Pending';
                                                 }
                                                  
                         
                         
                         if($value->pending_amount=='')
                         {
                              $value->pending_amount=0;
                         }
                         
                         if($value->collectamount=='')
                         {
                              $value->collectamount=0;
                         }
                         
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no,
                            'sales_group' => $sales_group,
                            'sales_head' => $sales_head,
                            'sales_team' => $sales_team,
                            'customername' => $value->company_name,
                            'payment_mode' => $value->payment_mode,
                            'collectamount' => $value->collectamount,
                            'pending_amount' => $value->pending_amount,
                            'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                            'total' => round($value->bill_amount,2),
                            'status' => $status,
                            'payment_status' => $payment_status
                            

                        );


                        $i++;

                     }

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    








































        public function fetch_data_customer_balance_report_outstanding()
    {

                    
                    
                    
                    
                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     
                     $searchsql="  AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."'";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql.=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
                     }



                     






                        // date removed 
                     $result=$this->db->query("SELECT ss.id as sales_group_id,b.id as customer_id,aa.name as sales_name,ss.name as sales_group_name,SUM(a.credits) as credits,SUM(a.debits) as debits,ROUND(SUM(a.credits-a.debits)) as totalvalue,b.company_name,b.phone,b.feedback_details,b.locality,b.opening_balance,b.payment_status,b.sales_team_id  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  LEFT JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id LEFT JOIN sales_group as ss ON ssg.sales_group_id=ss.id  LEFT JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0   AND a.party_type='1'   $stat $userslog $usersgroup $searchsql  GROUP BY a.customer_id HAVING totalvalue!=0 ORDER BY aa.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $subresult=array();
                         $temp  = array();
                          $tempw  = array();
                     foreach ($result as  $valuessg) 
                     {



                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$valuessg->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }


                                                        

                       
                                  
                                             if($valuessg->payment_status==1)
                                            {
                                                $opening_balance_cr=$valuessg->opening_balance;

                                                if($opening_balance_cr==0)
                                                {
                                                    $opening_balance_cr='';
                                                }
                                                $opening_balance_dr='';
                                                
                                            }
                                            else
                                            {
                                                $opening_balance_dr=$valuessg->opening_balance;

                                                  if($opening_balance_dr==0)
                                                {
                                                    $opening_balance_dr='';
                                                }
                                                $opening_balance_cr='';
                                               
                                            }

                                     

                                            if($valuessg->totalvalue>0)
                                            {
                                                 $closeing=$valuessg->totalvalue;
                                                 $payment_status_bu_closeing='CR';
                                            }
                                            else
                                            {

                                                 $closeing=abs($valuessg->totalvalue);
                                                 $payment_status_bu_closeing='DR';

                                            }

                                              $hidestatus="";
                                              if($closeing==0)
                                              {
                                                  //$hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                 $hidestatus="";
                                                   
                                              }
                                             
                                            
                                           if($closeing>0)
                                          {


                                              $sales_name=""; 
                                             if(!in_array($valuessg->sales_name, $temp))
                                             {
                                                   $sales_name=$valuessg->sales_name;
                                                   $temp[] = $valuessg->sales_name;
                                             } 


                                              $sales_group_name=""; 
                                             if(!in_array($valuessg->sales_group_name, $tempw))
                                             {
                                                   $sales_group_name=$valuessg->sales_group_name;
                                                   $tempw[] = $valuessg->sales_group_name;
                                             }                       
                                                    


                                            $subresult[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->customer_id, 
                                            'route_name'=>$route_name,
                                            'sales_name'=>$sales_name,
                                            'sales_group_name'=>$sales_group_name,
                                            'sales_team_id' => $valuessg->sales_team_id, 
                                            'customername' => $valuessg->company_name, 
                                            'customerphone' => $valuessg->phone,
                                            'opening_balance_dr' => $opening_balance_dr,
                                            'opening_balance_cr' => $opening_balance_cr,
                                            'credits' => round($valuessg->credits,2),
                                            'debits' => round($valuessg->debits,2),
                                            'closeing' => round($closeing,2),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'feedback_details' => $valuessg->feedback_details, 
                                            'hidestatus'=>$hidestatus
                                            
                                            
                
                                        );


                                             $i++;

                                        }
                                        


                                       
                                    
                                       
                                        
                       
                       

                     }
                     
                     
                  
                    

                    echo json_encode($subresult);

    }
    
    
    
    







        public function fetch_data_customer_balance_report_export_outstanding()
    {

                    
                    
                    
                    
                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['cate_id'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="  AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."'";
                     if($search!="")
                     {
                         
                         $searchsql.=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";

                         
                     }
                     



                     


                        // date removed 
                     $result=$this->db->query("SELECT ss.id as sales_group_id,b.id as customer_id,aa.name as sales_name,ss.name as sales_group_name,SUM(a.credits) as credits,SUM(a.debits) as debits,ROUND(SUM(a.credits-a.debits)) as totalvalue,b.company_name,b.phone,b.feedback_details,b.locality,b.opening_balance,b.payment_status,b.sales_team_id  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  LEFT JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id LEFT JOIN sales_group as ss ON ssg.sales_group_id=ss.id  LEFT JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0   AND a.party_type='1'   $stat $userslog $usersgroup $searchsql GROUP BY a.customer_id HAVING totalvalue!=0  ORDER BY aa.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $subresult=array();
                     $temp  = array();
                     $tempw  = array();
                     foreach ($result as  $valuessg) 
                     {



                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$valuessg->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }


                                                        

                       
                                  
                                             if($valuessg->payment_status==1)
                                            {
                                                $opening_balance_cr=$valuessg->opening_balance;

                                                if($opening_balance_cr==0)
                                                {
                                                    $opening_balance_cr='';
                                                }
                                                $opening_balance_dr='';
                                                
                                            }
                                            else
                                            {
                                                $opening_balance_dr=$valuessg->opening_balance;

                                                  if($opening_balance_dr==0)
                                                {
                                                    $opening_balance_dr='';
                                                }
                                                $opening_balance_cr='';
                                               
                                            }

                                     

                                            if($valuessg->totalvalue>0)
                                            {
                                                 $closeing=$valuessg->totalvalue;
                                                 $payment_status_bu_closeing='CR';
                                            }
                                            else
                                            {

                                                 $closeing=abs($valuessg->totalvalue);
                                                 $payment_status_bu_closeing='DR';

                                            }

                                              $hidestatus="";
                                              if($closeing==0)
                                              {
                                                  //$hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                 $hidestatus="";
                                                   
                                              }
                                             
                                            
                                           if($closeing>0)
                                          {


                                              $sales_name=""; 
                                             if(!in_array($valuessg->sales_name, $temp))
                                             {
                                                   $sales_name=$valuessg->sales_name;
                                                   $temp[] = $valuessg->sales_name;
                                             } 


                                              $sales_group_name=""; 
                                             if(!in_array($valuessg->sales_group_name, $tempw))
                                             {
                                                   $sales_group_name=$valuessg->sales_group_name;
                                                   $tempw[] = $valuessg->sales_group_name;
                                             }                       
                                                    


                                            $subresult[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->customer_id, 
                                            'route_name'=>$route_name,
                                            'sales_name'=>$sales_name,
                                            'sales_group_name'=>$sales_group_name,
                                            'sales_team_id' => $valuessg->sales_team_id, 
                                            'customername' => $valuessg->company_name, 
                                            'customerphone' => $valuessg->phone,
                                            'opening_balance_dr' => $opening_balance_dr,
                                            'opening_balance_cr' => $opening_balance_cr,
                                            'credits' => round($valuessg->credits,2),
                                            'debits' => round($valuessg->debits,2),
                                            'closeing' => round($closeing,2),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'feedback_details' => $valuessg->feedback_details, 
                                            'hidestatus'=>$hidestatus
                                            
                                            
                
                                        );


                                             $i++;

                                        }
                                        


                                       
                                    
                                       
                                        
                       
                       

                     }





                        $filename='Customer_outstanding_report_'.$formdate.'_TO_'.$todate; 
                        header("Content-Type: application/xls");    
                        header("Content-Disposition: attachment; filename=$filename.xls");  
                        header("Pragma: no-cache"); 
                        header("Expires: 0");

                     ?>

  <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="12"><h3>Customer Outstanding Report <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                    <tr style="text-align: left;background: #dfdfdf;">

                                       <th>No</th>
                                       <th >Sales Person</th>
                                       <th >Customer_Name</th>
                                       <th >Phone No</th>
                                       <th >Area</th>
                                       <th >Opening Balance Dr</th>
                                       <th >Opening Balance Cr</th>
                                       <th >Debit</th>
                                       <th >Credit</th>
                                       <th >Closing</th>
                                       <th >Closing Status</th>
                                 
                                      <th >Remarks</th>
                                     
                                     
                        
                                    </tr>
                                  
                                  
                                  
                                  
                                  
                                  <?php
                                  
                                   foreach($subresult as $val)
                                   { 
                                       
                                   ?>
                                   <tr style="text-align: right;">
                                   <th style="text-align: left;"><?php echo $val['no']; ?></th>
                                   <th style="text-align: left;">

                                    <h5 style="color:#ff5e14;font-weight: 800;"><?php echo $val['sales_group_name']; ?></h5>

                                   <h6 stylie="font-weght: 800;"><?php echo $val['sales_name']; ?></h6>
                                       

                                   </th>
                                    <th style="text-align: left;"><?php echo $val['customername']; ?></th>
                                     <th style="text-align: left;"><?php echo $val['customerphone']; ?></th>
                                      <th style="text-align: left;"><?php echo $val['route_name']; ?></th>
                                       <th style="text-align: left;"><?php echo $val['opening_balance_dr']; ?></th>
                                        <th style="text-align: left;"><?php echo $val['opening_balance_cr']; ?></th>
                                         <th style="text-align: left;"><?php echo $val['debits']; ?></th>
                                          <th style="text-align: left;"><?php echo $val['credits']; ?></th>

                                          <th style="text-align: left;"><?php
                                          if($val['payment_status_bu_closeing']=='CR')
                                          {
                                              echo "<span style='color:green;font-weight: 800;''>".$val['closeing']."</span>";
                                          }


                                           if($val['payment_status_bu_closeing']=='DR')
                                          {
                                              echo "<span style='color:red;font-weight: 800;''>".$val['closeing']."</span>";
                                          }
                                         

                                            ?></th>
                                          <th style="text-align: left;"><?php echo $val['payment_status_bu_closeing']; ?></th>
                                          <th style="text-align: left;"><?php echo $val['feedback_details']; ?></th>

                                  
                                   </tr>
                                   
                                  <?php 
                                  }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  

                     <?php

                     
                     
                  
                    

                    

    }
    











    
     public function update_set_val()
    {

$diffrence=abs($_GET['diffrence']);
if($diffrence>0)
{



$diffrence=round($diffrence,2);

$diffrenceset=round($diffrence-3991.15,2);
echo $diffrenceset;
echo "<br>";
if($diffrence!=3991.15)
{


if($diffrenceset>0)
{





//$this->db->query("UPDATE accountheads SET  op_status =2,payment_status=2,op='".$diffrenceset."',opening_balance='".$diffrenceset."' WHERE id = 720"); 
//$this->db->query("UPDATE all_ledgers SET  debits='".$diffrenceset."',credits=0 WHERE customer_id='720' AND party_type='5' AND opening_balance_status='1'  AND deleteid=0"); 
echo "success";

}


}




}




    }
    
    
    
        public function fetch_data_customer_balance_report()
    {

                    
                      $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                      $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                    
                     $testMode = (isset($_GET['test']) && $_GET['test']);


                     //Making TestMode completed and Live

                     $testMode = true;

                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";


                    if($cateid=='ALL')
                    {
                         $userslog.=' AND a.cnn_status="0"';
                    }


                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                     $result=$this->db->query("SELECT  ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1' AND b.deleteid=0  $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                     // echo "Query 1 - " . date("Y-m-d H:i:s"); 
                     // echo "</br>"; 
                     // echo "SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC"; 
                    
                     
                    
                     
                     
                     $i=1;
                     $array=array();
                     $totals = [];
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                     // date removed 

                                     $salesperson=array();
                     $invertsTotal = [];

                                      $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                    
                                     $sheettotal_sales_full=0;
                                     $totabetbalance=0;
                                    
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 AND aa.status=1 AND aa.deleteid=0  $userslog GROUP BY aa.id ORDER BY aa.username ASC");

                                     // echo "</br>"; 
                                     // echo "Query 2 - " . date("Y-m-d H:i:s"); 
                                     // echo "</br>"; 
                                     // echo "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC"; 
                
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                      $sl_totals = [];
                     // $inverts = [];
                                        
                                     
                       
                                     
                                      // date removed 
                                     $resultsubdata=$this->db->query("SELECT b.mark_vendor_id,a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                    
                                     // echo "</br>"; 
                                     // echo "Query 3 - " . date("Y-m-d H:i:s"); 
                                     // echo "</br>";
                                     // echo "SELECT b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,SUM(a.debits) as debits,SUM(a.credits) as credits,b.opening_balance,b.company_name,b.payment_status  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id   WHERE    a.deleteid=0 AND a.party_type='1'  AND b.sales_team_id='".$valueget->sales_team_id."'  $stat $userslog $searchsql2 GROUP BY a.customer_id ORDER BY b.company_name ASC"; 
                                    
                                     $k=1;
                                     $balanceset_total_sales=0;
                                     $sheettotal_sales=0;


                                     foreach ($resultsubdata as  $value) 
                                     {
                                       
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();

                                                               // echo "</br>"; 
                                                               // echo "Query 4 - " . date("Y-m-d H:i:s"); 
                                                               // echo "</br>";
                                                               // echo "SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'"; 
                                                              
                                                                                        
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                                               
                                                               
                                                               
                                                                 
                                                                $tcs_status=0;
                                                                $customers_data = $this->Main_model->where_names('customers', 'id', $value->id);
                                                                foreach ($customers_data as $csvalv) {
                                                                    $tcs_status = $csvalv->tcs_status;
                                                                   
                                                                }

                                                               
                                                               
                                                               //In Production

                                                                // assign_status_0_date - Order Created Date
                                                                // assign_status_12_date - Load Completed / Dispatch Loaded Date
                                                                // assign_status_3_date - Reconcile Date




         if($testMode){

                $resultsub_production=$this->db->query("SELECT 
                                         CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,
                                        b.tcsamount,
                                        b.roundoff,
                                        b.roundoffstatus,
                                        b.discount 
                                   FROM 
                                        order_product_list_process AS a 
                                    JOIN 
                                        orders_process AS b ON a.order_id = b.id 
                                        JOIN all_ledgers al ON al.order_id = b.id
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid = 0  AND b.return_status=0
                                        AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$todate'  AND (b.assign_status_12_date > '$todate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$todate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    GROUP BY 
                                        b.id 
                                    ORDER BY 
                                        a.id DESC");
                                                                
                                                               }else{
                                                                $resultsub_production=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason != 'Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $discount1=0;
                                                                
                                                                 $resultsub_production=$resultsub_production->result();


                                                                 // echo "</br>"; 
                                                                 // echo "Query 5 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 
                                                                
  
                                                                 $production=0;
                                                                 foreach($resultsub_production as $val)
                                                                 { 
                                                                               
                                                                              $roundoff=$val->roundoff; 
                                                                              if($val->roundoffstatus==1)
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                              else
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                               
                                                                             $discount1+=$val->discount;


                                                                             $totalvalue=$totalvalue-$val->discount;
                                                                             $production+=round($totalvalue+$roundoff+$val->tcsamount);
                                                     
                                                                 }
                                                                 
                                                               
                                                                  
                                                                  
                                                                 $discount2=0;

                                                                 //Sheet in Factory
 // assign_status_0_date - Order Created Date
// assign_status_12_date - Load Completed / Dispatch Loaded Date
// assign_status_3_date - Reconcile Date
//delivery_status - 1 means Client Scope Order
//delivery_status - 2 means Own Scope Order
                                                                  if($testMode){
                                                                      $resultsub=$this->db->query("SELECT 
                                                                       CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,
                                                                      b.tcsamount,
                                                                      b.roundoff,
                                                                      b.roundoffstatus,
                                                                      b.discount 
                                                                FROM  order_product_list_process AS a 
                                    JOIN 
                                        orders_process AS b ON a.order_id = b.id 
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'  AND b.order_base > 0
                                         AND b.reason != 'Return To Re-sale' AND b.return_status=0
                                                                      AND b.deleteid = 0  
                                                                      AND (
                                                                           CASE
                                                                              WHEN (b.delivery_status = 2 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$todate' OR b.assign_status_2_date IS NULL)) OR (b.delivery_status = 1 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)) THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  
                                                                  GROUP BY 
                                                                      b.id 
                                                                  ORDER BY 
                                                                      a.id DESC
                                                                  ");
                                                               
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();
                                                                  // print_r($resultsub);
                                                                  // exit;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 6 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                              $roundoff=$val->roundoff; 
                                                                              if($val->roundoffstatus==1)
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                              else
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                   
                                                                   $discount2+=$val->discount;
                                                                   $totalvalue=$totalvalue-$val->discount;
                                                                   $total+=round($totalvalue+$roundoff+$val->tcsamount);


                                                                  
                                                     
                                                                 }
                                                                 
                                                                 
                                                               
                                                                           
                                                                  
                                                                 
                                                                     if($testMode){  
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND date(b.create_date) <= '".$todate."'   AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub_inproduction=$resultsub_inproduction->result();
                                                                 $inproduction_total_return=0;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 7 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 foreach($resultsub_inproduction as $vals)
                                                                 { 
                                                                   
                                                                  
                                                                             $inproduction_total_return=round($vals->bill_total);
                                                     
                                                                 }
                                                                 
                                                                 
                                                                 //$production=$inproduction_total_return+$production;


                                                                  if($testMode){  
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0  AND b.create_date <= '".$todate."' ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0   ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 8 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 $total_return=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                  
                                                                             $total_return=round($val->bill_total);
                                                     
                                                                 }
                            
                                                               
                                                               
                                                               
                                                                  $discount3=0;
                                                                  if($testMode){ 
                                                                 $resultsub=$this->db->query("SELECT 
                                        CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,
                                        b.tcsamount,
                                        b.roundoff,
                                        b.roundoffstatus,
                                        b.discount 
                                        FROM
                                   order_product_list_process AS a 
                                    JOIN 
                                        orders_process AS b ON a.order_id = b.id 
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'
                                        AND b.order_base > 0
                                        AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0  AND b.return_status=0
                                        AND (
                                             CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$todate' AND ((b.trip_end_date > '$todate' OR b.trip_end_date IS NULL) AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$todate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    GROUP BY 
                                        b.id 
                                    ORDER BY 
                                        a.id DESC");
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2') AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 9 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total_transit=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                   
                                                                             $roundoff=$val->roundoff; 
                                                                            
                                                                              if($val->roundoffstatus==1)
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                              else
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                              $discount3+=$val->discount;
                                                                              $totalvalue=$totalvalue-$val->discount;
                                                                              $total_transit+=round($totalvalue+$roundoff+$val->tcsamount);
                                                     
                                                                }
                                                                
                                                                
                                                                
                                                               
                                                                  
                                                                  

                                             
                                            $total_credit_balance=0; 
                                            $total_debit_balance=0;
                                            $total_credit_balance_new=0;
                                            $total_debit_balance_new=0;
                                            $opening_balance=0;
                                            $resultDRss=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND   a.cnn_status = 0  AND a.customer_id='".$value->id."'");
                                            $resultDRss=$resultDRss->result();
                                             $old_date_opening_balance=$resultDRss[0]->credits-$resultDRss[0]->debits; 
                                           

                                             // echo "</br>"; 
                                             // echo "Query 10 - " . date("Y-m-d H:i:s"); 
                                             // echo "</br>";
                                             // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 


                                              if($value->mark_vendor_id>0)
                                             {



            $resultDRsscurrentdate_s=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.opening_balance_status='0'  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$value->mark_vendor_id."','".$value->id."')");
                                               $resultDRsscurrentdate_s=$resultDRsscurrentdate_s->result();


                    // $op_vender_credit_s= $resultDRss[0]->credits+$resultDRsscurrentdate_s[0]->credits;
                    // $op_vender_debit_s= $resultDRss[0]->debits+$resultDRsscurrentdate_s[0]->debits;
                    // $old_date_opening_balance=$op_vender_credit_s-$op_vender_debit_s;


 $old_date_opening_balance=$resultDRsscurrentdate_s[0]->credits-$resultDRsscurrentdate_s[0]->debits; 


                                             }

                       
                                            if($old_date_opening_balance>0)
                                            {
                                                $total_credit_balance=$old_date_opening_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance=$old_date_opening_balance;
                                            }
                                            
                                             
                                               
                                                                
                                             
                                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND   a.cnn_status = 0 AND a.customer_id='".$value->id."'");
                                            $resultDRsscurrentdate=$resultDRsscurrentdate->result(); 

                                            // echo "</br>"; 
                                            // echo "Query 11 - " . date("Y-m-d H:i:s"); 
                                            // echo "</br>";
                                            // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'   AND a.customer_id='".$value->id."'"; 
                                            

                                            $opeinging_balance=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;


                                            if($value->mark_vendor_id>0)
                                             {



                    $resultDRsscurrentdate_vendor=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1' AND a.cnn_status = 0  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$value->mark_vendor_id."','".$value->id."')");
                    $resultDRsscurrentdate_vendor=$resultDRsscurrentdate_vendor->result();

                    // $op_vender_credit= $resultDRsscurrentdate[0]->credits+$resultDRsscurrentdate_vendor[0]->credits;
                    // $op_vender_debit= $resultDRsscurrentdate[0]->debits+$resultDRsscurrentdate_vendor[0]->debits;
                    // $opeinging_balance=$op_vender_credit-$op_vender_debit;

                    $opeinging_balance=$resultDRsscurrentdate_vendor[0]->credits-$resultDRsscurrentdate_vendor[0]->debits; 



                                             } 
                                             



                                            
                                             if($opeinging_balance>0)
                                            {
                                                $total_credit_balance_new=$opeinging_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance_new=$opeinging_balance;
                                            }



                                             
                                            $totalvaluecrited= round($total_credit_balance+$total_credit_balance_new,2);
                                            $totalvaluedebit= round($total_debit_balance+$total_debit_balance_new,2);



                                            
                                            $totalvaluecrited=abs($totalvaluecrited);
                                            $totalvaluedebit=abs($totalvaluedebit);
                     // echo $opening_balance_cr."= =".$value->id."==".$totalvaluedebit.'<br/>';
                                              
                                            $opening_balance_val=$totalvaluecrited-$totalvaluedebit;
                                            
                                    
                                    
                                    
                                            $payment_status="";



                                           // $opening_balance_cr=$totalvaluecrited;
                                           // $opening_balance_dr=$totalvaluedebit;

                                                                if($opening_balance_val>0)
                                                                 {
                                                                   $opening_balance_cr=abs($opening_balance_val);
                                                                   $opening_balance_dr=0;
                                                                 }
                                                                 else
                                                                 {


                                                                   $opening_balance_dr=abs($opening_balance_val);
                                                                   $opening_balance_cr=0;

                                                                 }



                                            $opening_balance=abs($opening_balance_val);
                                            
                                            
                                            if($opening_balance_val>0)
                                            {
                                                $payment_status='CR';
                                                
                                            }
                                            else
                                            {
                                                $payment_status='DR';  
                                               
                                            }
                               
                               
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                     
                                     
                                     
                                      
                         
                                         
                                         
                                         
                                          
                                         
                                          
                                        
                                          
                                          $sheet_in_factory=round($total+$total_return,2);
                                          
                                          //   echo $total_return;
                                          // exit;
                                          
                                          
                                         // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'");
                                         $resultDR=$resultDR->result();

                                         // echo "</br>"; 
                                         // echo "Query 12 - " . date("Y-m-d H:i:s"); 
                                         // echo "</br>";
                                         // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$vald->debits;
                                             $trnCr=$vald->credits;
                                         }


if($value->mark_vendor_id>0)
{

                                           // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.credits) as credits,SUM(a.debits) as debits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->mark_vendor_id."'");
                                         $resultDR=$resultDR->result();

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$trnDr+$vald->debits;
                                             $trnCr=$trnCr+$vald->credits;
                                         }
                                         
}   
                                         
           
                                         
                                         
                                          $creditsset=0;
                                          $debitsset=0;
                                          $Toatbalance=0;
                                          $closeing=0;
                                          $Total_trn_dr=0;
                                          $Total_trn_cr=0;
                                          $payment_status_bu_closeing="";
                                          
                                          $TotalDr=$opening_balance_dr;
                                          $TotalCr=$opening_balance_cr;
                                          $totbalance=  $trnCr-$trnDr;
                                          
                                          $Total_trn_dr=$opening_balance_dr+$trnDr;
                                          $Total_trn_cr=$opening_balance_cr+$trnCr;
                                         
                                        
  
                                          

                                          
                                          if($Total_trn_dr<$Total_trn_cr)
                                          {
                                              $creditsset=$Total_trn_dr-$Total_trn_cr;
                                              $creditsset=abs($creditsset);
                                              $payment_status_bu_closeing='CR';
                                              $closeing= $creditsset;
                                              //$closeing= $creditsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                             
                                              
                                          }
                                          else
                                          {
                                              
                                              $debitsset=$Total_trn_cr-$Total_trn_dr; 
                                              $debitsset_val=$Total_trn_cr-$Total_trn_dr;
                                              $debitsset=abs($debitsset);
                                              $payment_status_bu_closeing='DR';
                                              if($debitsset==0)
                                              {
                                                  $payment_status_bu_closeing='CR';
                                              }
                                              else
                                              {
                                                  $payment_status_bu_closeing='DR';
                                              }
                                              //$closeing= $debitsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                              $closeing= $debitsset;


                                              
                                          }
                                          
                                          
                                          

                     // echo $creditsset."==".$value->id."==".$debitsset.'<br/>';
                                          
                                          

                                         
                                         if($payment_status_bu_closeing=='DR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit;
                                             $Totaltranspotval= $closeing-$Totaltranspot;
                                             $Totaltranspotval= $Totaltranspotval-$inproduction_total_return;

                                             //$Totaltranspotval=abs($Totaltranspotval);
                                             if($closeing<$Totaltranspot)
                                             {
                                                 $getstatus=1;
                                                 if($closeing>0)
                                                 {
                                                      $getstatus=1;
                                                      //$Totaltranspotval=$closeing;
                                                 }
                                                 
                                             }
                                             else
                                             {
                                                   $getstatus=0;
                                                 
                                             }
                                             
                                             
                                         }
                                         
                                         
                                         
                                          if($payment_status_bu_closeing=='CR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit+$inproduction_total_return;
                                             //$Totaltranspotval= $closeing-$Totaltranspot;
                                             if($closeing>0)
                                             {

                                                $Totaltranspot=$closeing+$Totaltranspot;
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                             else
                                             {
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                            
                                            $getstatus=1;
                                             
                                         }
                                         
                                         
                                         
                                          
                                         
                                         $debitssettotal+=$debitsset;
                                         $creditssettotal+=$creditsset;
                                         $closeingtotal+=$closeing;
                                         
                                         $productiontotal+=$production;
                                         $productiontotal_return+=$inproduction_total_return;

                                         
                                         $sheet_in_factory_val+=round($total+$total_return,2);
                                         $transit+=round($total_transit,2);
                                         
                                         $Tran_Dr+=round($trnDr,2);
                                         $Tran_Cr+=round($trnCr,2);
                                         
                                         
                                         $Tot_Dr+=round($Total_trn_dr,2);
                                         $Tot_Cr+=round($Total_trn_cr,2);
                                         
                                         
                                         $Open_Dr+=round($opening_balance_dr,2);
                                         $Open_Cr+=round($opening_balance_cr,2);
                                         $Open_Bal+=round($opening_balance,2);
                                         
                                         
                                         if($getstatus==0)
                                         { 
                                             
                                            $totalcheck=round($production+$sheet_in_factory+$total_transit+$Totaltranspotval+$inproduction_total_return,2);
                                          
                                         }
                                         else
                                         {
                                            $totalcheck=round($production+$closeing+$sheet_in_factory+$total_transit+$inproduction_total_return,2);
                                         
                                         }
                                      
                                      
                                      
                                     
                                          
                                          if($totalcheck>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                   $hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                   $hidestatus="getview";
                                              }
                                             
                                          }
                                          
                                          
                                          
                                          if($Totaltranspotval>5)
                                          {
                                              
                                              //$Totaltranspotval=round($Totaltranspotval,2);
                                          }
                                          else
                                          {
                                              //$Totaltranspotval='';
                                          }


                                          $sheet=0;
                                          $st=$production+$sheet_in_factory+$inproduction_total_return+$total_transit;

                                          $totalcloseingbalance=$debitsset-$creditsset;
                                          // echo $debitsset." ".$creditsset." ".$value->id.'<br>';
                                          $netbalance_total_set=$totalcloseingbalance-$st;
                                           if($getstatus==0)
                                           {  

                                               if($netbalance_total_set>0)
                                               {
                                                   $balanceset_total+=$netbalance_total_set;
                                                   $balanceset_total_sales+=$netbalance_total_set;
                                                    $balancetoatal+=$netbalance_total_set;
                                                   $sl_totals['balance'] += round($Totaltranspotval, 2);

                                               }

                                           }

                                           if($netbalance_total_set>0)
                                           {
                                                  $sheet=$st;
                                           }
                                           else
                                           {
                                                  $sheet=$debitsset;
                                           }




                                          
                                           
                                          $sheettotal_sales+=round($sheet,2);
                                          $sheettotal_sales_full+=round($sheet,2);
                                          $totabetbalance+=$debitsset-$sheet;



                                          


                                         $subresult[] = array(
                                             
                                            
                                            'no' => $k, 
                                            'id' => $value->id, 
                                            'l_id' => $value->l_id,
                                            'payment_status' => $payment_status, 
                                            'route_name'=>$route_name,
                                            'sales_team_id' => $value->sales_team_id, 
                                            'customername' => $value->company_name, 
                                            'customerphone' => $value->phone,
                                            'mark_vendor_id' => $value->mark_vendor_id, 
                                            'opening_balance_dr' => $opening_balance_dr,
                                            'opening_balance_cr' => $opening_balance_cr,
                                            'opening_balance' => round($opening_balance,2),
                                            'trnDr' => round($trnDr,2),
                                            'trnCr' => round($trnCr,2),
                                            'trnDrtotal' => round($Total_trn_dr,2),
                                            'trnCrtotal' => round($Total_trn_cr,2),
                                            'debit' => round($debitsset,2),
                                            'credit' => round($creditsset,2),
                                            'closeing' => round($closeing,2),
                                            'md_verification' => $value->md_verification,
                                            'excess_status' => intval($value->excess_status),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'production' => round($production,2),
                                            'inproduction_total_return'=>round($inproduction_total_return,2),
                                            'sheet_in_factory' => $sheet_in_factory,
                                            'sheet' => $sheet,
                                            'transit'=>round($total_transit,2),
                                            'getstatus'=>$getstatus,
                                            'balance' => round($Totaltranspotval,2),
                                            'feedback_details' => $value->feedback_details, 
                                            'phone' => $value->phone,
                                            'hidestatus' => $hidestatus
                
                                        );


                                         // if((!$checked120=='checked')){
                                         
                                           
                                         // }else{
                                         //   $inverts['opening_balance_dr']            += $opening_balance_dr;
                                         //    $inverts['opening_balance_cr']            += $opening_balance_cr;
                                         //    $inverts['opening_balance']               += round($opening_balance);
                                         //    $inverts['trnDr']                         += round($trnDr, 2);
                                         //    $inverts['trnCr']                         += round($trnCr, 2);
                                         //    $inverts['trnDrtotal']                    += round($Total_trn_dr, 2);
                                         //    $inverts['trnCrtotal']                    += round($Total_trn_cr, 2);
                                         // }
                                        
                                        $sl_totals['opening_balance_dr']            += $opening_balance_dr;
                                            $sl_totals['opening_balance_cr']            += $opening_balance_cr;
                                            $sl_totals['opening_balance']               +=  ($opening_balance);
                                            $sl_totals['trnDr']                         +=  ($trnDr);
                                            $sl_totals['trnCr']                         +=  ($trnCr);
                                            $sl_totals['trnDrtotal']                    +=  ($Total_trn_dr);
                                            $sl_totals['trnCrtotal']                    +=  ($Total_trn_cr);
                                            $sl_totals['debit']                         += round($debitsset, 2);
                                            $sl_totals['credit']                        += round($creditsset, 2);
                                            $sl_totals['closeing']                      += round($debitsset - $creditsset , 2);
                                            $sl_totals['payment_status_bu_closeing']    += $payment_status_bu_closeing;
                                            $sl_totals['production']                    += round($production, 2);
                                            $sl_totals['inproduction_total_return']     += round($inproduction_total_return, 2);
                                            $sl_totals['sheet_in_factory']              += $sheet_in_factory;
                                            $sl_totals['sheet']                         += $sheet;
                                            $sl_totals['transit']                       += round($total_transit, 2);

                                            if($checked120 == 'checked' && $hidestatus != ''){
// exit;
                                  $sl_totals['opening_balance_dr'] = $sl_totals['opening_balance_dr'] -  $opening_balance_dr;  
                                  $sl_totals['opening_balance_cr'] = $sl_totals['opening_balance_cr'] - $opening_balance_cr;   
                                  $sl_totals['opening_balance'] = $sl_totals['opening_balance']     - round($opening_balance,2);    
                                  $sl_totals['trnDr'] = $sl_totals['trnDr']     - round($trnDr, 2);     
                                  $sl_totals['trnCr'] = $sl_totals['trnCr']     -  round($trnCr, 2);     
                                  $sl_totals['trnDrtotal']  = $sl_totals['trnDrtotal']     - round($Total_trn_dr, 2);     
                                  $sl_totals['trnCrtotal'] = $sl_totals['trnCrtotal']     - round($Total_trn_cr, 2);    



                                              $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                            $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                            $invertsTotal['opening_balance']               += round($opening_balance);
                                            $invertsTotal['trnDr']                         += round($trnDr, 2);
                                            $invertsTotal['trnCr']                         += round($trnCr, 2);
                                            $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                            $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                            }
                                        
                                      $k++; 
                                     
                                     }
                                     
                                     
                                      

                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                            'sl_totals' => $sl_totals,
                                             'subarray'=>$subresult,
                                        );
                                      
                                      
                                     }
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                     $totalcloseing= round($debitssettotal-$creditssettotal,2);
                                     $totalcloseing=abs($totalcloseing);



                                     
                                     
                                     $totabetbalance=abs($totabetbalance);
                                     
                                      // if($checked120=='checked'){
 
                                      //       $Tran_Dr =   $Tran_Dr - $inverts['trnDr'];
                                      //       $Tran_Cr =   $Tran_Cr - $inverts['trnCr'];
                                      //       $Tot_Dr =    $Tot_Dr - $inverts['trnDrtotal'];
                                      //       $Tot_Cr =    $Tot_Cr - $inverts['trnCrtotal'];
                                      //       $Open_Dr =   $Open_Dr - $inverts['opening_balance_dr'];
                                      //       $Open_Cr =   $Open_Cr - $inverts['opening_balance_cr'];
                                      //       $Open_Bal =  $Open_Bal - $inverts['opening_balance'];


                                      // }


                                      if($checked120 == 'checked'){
// exit;     
                                          // $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                          //   $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                          //   $invertsTotal['opening_balance']               += round($opening_balance);
                                          //   $invertsTotal['trnDr']                         += round($trnDr, 2);
                                          //   $invertsTotal['trnCr']                         += round($trnCr, 2);
                                          //   $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                          //   $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                  $Open_Dr =  $Open_Dr -   $invertsTotal['opening_balance_dr'] ;  
                                  $Open_Cr =   $Open_Cr  -  $invertsTotal['opening_balance_cr'];   
                                  $Open_Bal =  $Open_Bal       - $invertsTotal['opening_balance'];    
                                  $Tran_Dr =   $Tran_Dr      - $invertsTotal['trnDr']   ;     
                                  $Tran_Cr =   $Tran_Cr     -  $invertsTotal['trnCr'] ;     
                                  $Tot_Dr  =   $Tot_Dr     - $invertsTotal['trnDrtotal'];     
                                  $Tot_Cr =    $Tot_Cr    -  $invertsTotal['trnCrtotal'];     
                                            }






                                    $totals['debit'] += round($debitssettotal,2);
                                    $totals['credit'] += round($creditssettotal,2);
                                    $totals['closeing'] +=  round($totalcloseing,2);
                                    $totals['production'] +=round($productiontotal,2);
                                    $totals[ 'production_return']+=round($productiontotal_return,2);
                                    $totals['sheet_in_factory']+=round($sheet_in_factory_val,2);
                                    $totals['transit']+=round($transit,2);
                                    $totals['net_balance']+=round($totabetbalance,2);
                                    $totals['sheet_total']+=round($sheettotal_sales_full,2);
                                    $totals['Tran_Dr']+=round($Tran_Dr,2);
                                    $totals['Tran_Cr']+=round($Tran_Cr,2);
                                    $totals['Tot_Dr']+=round($Tot_Dr,2);
                                    $totals['Tot_Cr']+=round($Tot_Cr,2);
                                    $totals['Open_Dr']+=round($Open_Dr,2);
                                    $totals['Open_Cr']+=round($Open_Cr,2);
                                    $totals['Open_Bal']+=round($Open_Bal,2);

                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'debit' => round($debitssettotal,2),
                                            'credit' => round($creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val,2),
                                            'transit'=>round($transit,2),
                                            'net_balance'=>round($totabetbalance,2),
                                            'sheet_total'=>round($sheettotal_sales_full,2),
                                            'Tran_Dr'=>round($Tran_Dr,2),
                                            'Tran_Cr'=>round($Tran_Cr,2) ,
                                            'Tot_Dr'=>round($Tot_Dr,2),
                                            'Tot_Cr'=>round($Tot_Cr,2),
                                            'Open_Dr'=>round($Open_Dr,2),
                                            'Open_Cr'=>round($Open_Cr,2),
                                            'Open_Bal'=>round($Open_Bal,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                        $i++;

                     }
                     
                     
                  
                    $arrayMain = [];
                    $arrayMain['totals'] = $totals;
                    $arrayMain['data'] = $array;

                    echo json_encode($arrayMain);

    }
    
     public function fetch_data_customer_balance_report_partial()
    {

                    
                      $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                      $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                    
                     $testMode = (isset($_GET['test']) && $_GET['test']);


                     //Making TestMode completed and Live

                     $testMode = true;

                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";


                    if($cateid=='ALL')
                    {
                         $userslog.=' AND a.cnn_status="0"';
                    }


                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                     $result=$this->db->query("SELECT  ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1' AND b.deleteid=0  $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                     // echo "Query 1 - " . date("Y-m-d H:i:s"); 
                     // echo "</br>"; 
                     // echo "SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC"; 
                    
                     
                    
                     
                     
                     $i=1;
                     $array=array();
                     $totals = [];
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                     // date removed 

                                     $salesperson=array();
                     $invertsTotal = [];

                                      $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                    
                                     $sheettotal_sales_full=0;
                                     $totabetbalance=0;
                                    
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 AND aa.status=1 AND aa.deleteid=0  $userslog GROUP BY aa.id ORDER BY aa.username ASC");

                                     // echo "</br>"; 
                                     // echo "Query 2 - " . date("Y-m-d H:i:s"); 
                                     // echo "</br>"; 
                                     // echo "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC"; 
                
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                      $sl_totals = [];
                     // $inverts = [];
                                        
                                     
                       
                                     
                                      // date removed 
                                     $resultsubdata=$this->db->query("SELECT b.mark_vendor_id,a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                    
                                     // echo "</br>"; 
                                     // echo "Query 3 - " . date("Y-m-d H:i:s"); 
                                     // echo "</br>";
                                     // echo "SELECT b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,SUM(a.debits) as debits,SUM(a.credits) as credits,b.opening_balance,b.company_name,b.payment_status  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id   WHERE    a.deleteid=0 AND a.party_type='1'  AND b.sales_team_id='".$valueget->sales_team_id."'  $stat $userslog $searchsql2 GROUP BY a.customer_id ORDER BY b.company_name ASC"; 
                                    
                                     $k=1;
                                     $balanceset_total_sales=0;
                                     $sheettotal_sales=0;


                                     foreach ($resultsubdata as  $value) 
                                     {
                                       
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();

                                                               // echo "</br>"; 
                                                               // echo "Query 4 - " . date("Y-m-d H:i:s"); 
                                                               // echo "</br>";
                                                               // echo "SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'"; 
                                                              
                                                                                        
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                                               
                                                               
                                                               
                                                                 
                                                                $tcs_status=0;
                                                                $customers_data = $this->Main_model->where_names('customers', 'id', $value->id);
                                                                foreach ($customers_data as $csvalv) {
                                                                    $tcs_status = $csvalv->tcs_status;
                                                                   
                                                                }

                                                               
                                                               
                                                               //In Production

                                                                // assign_status_0_date - Order Created Date
                                                                // assign_status_12_date - Load Completed / Dispatch Loaded Date
                                                                // assign_status_3_date - Reconcile Date




         if($testMode){

          $resultsub_production = $this->db->query("
   SELECT 
    CASE 
        WHEN b.create_date > '2024-05-31' THEN 
            SUM(CASE WHEN b.tcs_status = 1 THEN (a.amount * 1.18) * 1.001 ELSE a.amount * 1.18 END) -  SUM(CASE 
                WHEN (slp.loadstatus = 1  OR slp.delivered_products = 1 OR a.dispatch_status = 1) AND slp.pickedstatus = 1
                THEN CASE WHEN b.tcs_status = 1 THEN slp.amount * 1.181 ELSE slp.amount * 1.18 END
                ELSE 0 
            END)
        ELSE 
            SUM(CASE WHEN b.tcs_status = 1 THEN a.amount * 1.001 ELSE a.amount END) - 
            SUM(CASE WHEN (slp.loadstatus = 1   OR slp.delivered_products = 1 OR a.dispatch_status = 1) AND slp.pickedstatus = 1
                THEN CASE WHEN b.tcs_status = 1  THEN (a.amount) * 1.001 ELSE a.amount  END
                ELSE 0 
            END)
    END AS totalvalue,
        COUNT(a.id) as orderlist_prods,
        COUNT(CASE WHEN (slp.loadstatus = 1   OR slp.delivered_products = 1 OR a.dispatch_status = 1) AND slp.pickedstatus = 1 THEN 1 ELSE 0 END) as loadlist_prods,
        b.tcsamount,
        b.roundoff,
        b.roundoffstatus,
        b.discount  
    FROM 
        order_product_list_process AS a 
    LEFT JOIN 
        orders_process AS b ON a.order_id = b.id 
    LEFT JOIN 
        all_ledgers al ON al.order_id = b.id
    LEFT JOIN 
        sales_load_products slp ON slp.order_product_id = a.id
    WHERE 
        a.deleteid = 0 
        AND b.customer_id = '".$value->id."' 
        AND a.return_status = 0 
        AND b.order_base > 0
        AND b.reason != 'Return To Re-sale'
        AND b.deleteid = 0 
        AND a.deleteid = 0 
        AND b.return_status = 0 
    GROUP BY 
        b.id 
");
          
                                                               }else{
                                                                $resultsub_production=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason != 'Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $discount1=0;
                                                                
                                                                 $resultsub_production=$resultsub_production->result();


                                                                 // echo "</br>"; 
                                                                 // echo "Query 5 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 
                                                                
  
                                               $production=0;
                                                  foreach($resultsub_production as $val)
                                                  { 

                                                  $roundoff=$val->roundoff; 
                                                  if($val->roundoffstatus==1)
                                                  {
                                                  $totalvalue=$val->totalvalue;
                                                  }
                                                  else
                                                  {
                                                  $totalvalue=$val->totalvalue;
                                                  }

                                                  // $discount1+=$val->discount;



                                                  if($val->orderlist_prods != $val->loadlist_prods){
                                                  $totalvalue=$totalvalue-$val->discount;

                                                  $production+=round($totalvalue+$roundoff+$val->tcsamount);

                                                  }else{

                                                  $production+=round($totalvalue);
                                                  }

                                               }
                                                                 
                                                               
                                                                  
                                                                  
                                                                 $discount2=0;

                                                                 //Sheet in Factory
 // assign_status_0_date - Order Created Date
// assign_status_12_date - Load Completed / Dispatch Loaded Date
// assign_status_3_date - Reconcile Date
//delivery_status - 1 means Client Scope Order
//delivery_status - 2 means Own Scope Order
                                                                  if($testMode){
                                                                      $resultsub=$this->db->query("SELECT 
    CASE 
        WHEN b.create_date > '2024-05-31' THEN 
            SUM(CASE 
                WHEN (slp.pickedstatus = 0 AND slp.delivered_products = 0 )   
                THEN CASE WHEN b.tcs_status = 1 THEN slp.amount * 1.181 ELSE slp.amount * 1.18 END
                ELSE 0 
            END)
        ELSE 
            
            SUM(CASE WHEN    (slp.pickedstatus = 0 AND slp.delivered_products = 0 )   
                THEN CASE WHEN b.tcs_status = 1  THEN (a.amount) * 1.001 ELSE a.amount  END
                ELSE 0 
            END)
    END AS totalvalue,
                                                                      b.tcsamount,
                                                                      b.roundoff,
                                                                      b.roundoffstatus,
                                                                      b.discount,
        COUNT(a.id) as orderlist_prods,
        COUNT(CASE WHEN (slp.pickedstatus = 0 AND slp.delivered_products = 0)  AND slp.randam_id = ''  THEN 1 ELSE 0 END) as loadlist_prods
                                                                FROM  order_product_list_process AS a 
                                    JOIN 
                                        orders_process AS b ON a.order_id = b.id 
                                         LEFT JOIN sales_load_products slp ON slp.order_product_id = a.id
                                    WHERE 
        a.deleteid = 0 
        AND b.customer_id = '".$value->id."' 
        AND a.return_status = 0 
        AND b.order_base > 0
        AND b.reason != 'Return To Re-sale'
        AND b.deleteid = 0 
        AND a.deleteid = 0 
        AND b.return_status = 0  GROUP BY b.id 
                                                                  ORDER BY 
                                                                      a.id DESC
                                                                  ");
                                                               
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();
                                                                  // print_r($resultsub);
                                                                  // exit;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 6 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                              $roundoff=$val->roundoff; 
                                                                              if($val->roundoffstatus==1)
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                              else
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                   
                                                                   // $discount2+=$val->discount;
                                                                   if($val->orderlist_prods != $val->loadlist_prods){
                                                                   $totalvalue=$totalvalue-$val->discount;

                                                                   $total+=round($totalvalue+$roundoff+$val->tcsamount);
                                                                 }
                                                                   // $totalvalue=$totalvalue-$val->discount;
                                                                   $total+=round($totalvalue);


                                                                  
                                                     
                                                                 }
                                                                 
                                                                 
                                                               
                                                                           
                                                                  
                                                                 
                                                                     if($testMode){  
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND date(b.create_date) <= '".$todate."'   AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub_inproduction=$resultsub_inproduction->result();
                                                                 $inproduction_total_return=0;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 7 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 foreach($resultsub_inproduction as $vals)
                                                                 { 
                                                                   
                                                                  
                                                                             $inproduction_total_return=round($vals->bill_total);
                                                     
                                                                 }
                                                                 
                                                                 
                                                                 //$production=$inproduction_total_return+$production;


                                                                  if($testMode){  
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0  AND b.create_date <= '".$todate."' ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0   ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 8 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 $total_return=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                  
                                                                             $total_return=round($val->bill_total);
                                                     
                                                                 }
                            
                                                               
                                                               
                                                               
                                                                  $discount3=0;
                                                                  if($testMode){ 
                                                                 $resultsub=$this->db->query("SELECT 
    CASE 
        WHEN b.create_date > '2024-05-31' THEN 
             SUM(CASE 
                WHEN  (slp.pickedstatus = 1 AND slp.delivered_products = 0  AND slp.randam_id != '')   
                THEN CASE WHEN b.tcs_status = 1 THEN slp.amount * 1.181 ELSE slp.amount * 1.18 END
                ELSE 0 
            END)
        ELSE 
          
            SUM(CASE WHEN  (slp.pickedstatus = 1 AND slp.delivered_products = 0  AND slp.randam_id != '')   
                THEN CASE WHEN b.tcs_status = 1  THEN (a.amount) * 1.001 ELSE a.amount  END
                ELSE 0 
            END)
    END AS totalvalue,
                                        b.tcsamount,
                                        b.roundoff,
                                        b.roundoffstatus,
                                        b.discount,

        COUNT(a.id) as orderlist_prods,
        COUNT(CASE WHEN (slp.loadstatus = 1 AND slp.pickedstatus = 1)  AND slp.randam_id != ''  THEN 1 ELSE 0 END) as loadlist_prods
                                        FROM
                                   order_product_list_process AS a 
                                    JOIN 
                                        orders_process AS b ON a.order_id = b.id 
                                         LEFT JOIN sales_load_products slp ON slp.order_product_id = a.id
                                    WHERE 
                                        a.deleteid = 0  AND b.customer_id = '".$value->id."' 
        AND a.return_status = 0 
        AND b.order_base > 0
        AND b.reason != 'Return To Re-sale'
        AND b.deleteid = 0 
        AND a.deleteid = 0 
        AND b.return_status = 0  GROUP BY b.id 
                                    ");
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2') AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 9 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total_transit=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                   
                                                                             $roundoff=$val->roundoff; 
                                                                            
                                                                              if($val->roundoffstatus==1)
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                              else
                                                                              {
                                                                                  $totalvalue=$val->totalvalue;
                                                                              }
                                                                              // $discount3+=$val->discount;
                                                                              // $totalvalue=$totalvalue-$val->discount;
                                                                              // $total_transit+=round($totalvalue+$roundoff+$val->tcsamount);
                                                                   if($val->orderlist_prods != $val->loadlist_prods){
                                                                     $totalvalue=$totalvalue-$val->discount;
                                                                              $total_transit+=round($totalvalue+$roundoff+$val->tcsamount);
                                                                      }
                                                                              $total_transit+=round($totalvalue);
                                                     
                                                                }
                                                                
                                                                
                                                                
                                                               
                                                                  
                                                                  

                                             
                                            $total_credit_balance=0; 
                                            $total_debit_balance=0;
                                            $total_credit_balance_new=0;
                                            $total_debit_balance_new=0;
                                            $opening_balance=0;
                                            $resultDRss=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND   a.cnn_status = 0  AND a.customer_id='".$value->id."'");
                                            $resultDRss=$resultDRss->result();
                                             $old_date_opening_balance=$resultDRss[0]->credits-$resultDRss[0]->debits; 
                                           

                                             // echo "</br>"; 
                                             // echo "Query 10 - " . date("Y-m-d H:i:s"); 
                                             // echo "</br>";
                                             // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 

                       
                                            if($old_date_opening_balance>0)
                                            {
                                                $total_credit_balance=$old_date_opening_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance=$old_date_opening_balance;
                                            }
                                            
                                             
                                               
                                                                
                                             
                                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND   a.cnn_status = 0 AND a.customer_id='".$value->id."'");
                                            $resultDRsscurrentdate=$resultDRsscurrentdate->result(); 

                                            // echo "</br>"; 
                                            // echo "Query 11 - " . date("Y-m-d H:i:s"); 
                                            // echo "</br>";
                                            // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'   AND a.customer_id='".$value->id."'"; 
                                            

                                            $opeinging_balance=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                             if($opeinging_balance>0)
                                            {
                                                $total_credit_balance_new=$opeinging_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance_new=$opeinging_balance;
                                            }


                                            if($value->mark_vendor_id>0)
                                             {



                                               $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = 119 THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$value->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                $total_credit_balance_new=$total_credit_balance_new+$opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                $total_debit_balance_new=$total_debit_balance_new+$opeinging_balance_vendor;
                                              }






                                             }
                                             

                                             
                                            $totalvaluecrited= round($total_credit_balance+$total_credit_balance_new,2);
                                            $totalvaluedebit= round($total_debit_balance+$total_debit_balance_new,2);



                                            
                                            $totalvaluecrited=abs($totalvaluecrited);
                                            $totalvaluedebit=abs($totalvaluedebit);
                     // echo $opening_balance_cr."= =".$value->id."==".$totalvaluedebit.'<br/>';
                                              
                                            $opening_balance_val=$totalvaluecrited-$totalvaluedebit;
                                            
                                    
                                    
                                    
                                            $payment_status="";



                                           // $opening_balance_cr=$totalvaluecrited;
                                           // $opening_balance_dr=$totalvaluedebit;

                                                                if($opening_balance_val>0)
                                                                 {
                                                                   $opening_balance_cr=abs($opening_balance_val);
                                                                   $opening_balance_dr=0;
                                                                 }
                                                                 else
                                                                 {


                                                                   $opening_balance_dr=abs($opening_balance_val);
                                                                   $opening_balance_cr=0;

                                                                 }



                                            $opening_balance=abs($opening_balance_val);
                                            
                                            
                                            if($opening_balance_val>0)
                                            {
                                                $payment_status='CR';
                                                
                                            }
                                            else
                                            {
                                                $payment_status='DR';  
                                               
                                            }
                               
                               
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                     
                                     
                                     
                                      
                         
                                         
                                         
                                         
                                          
                                         
                                          
                                        
                                          
                                          $sheet_in_factory=round($total+$total_return,2);
                                          
                                          //   echo $total_return;
                                          // exit;
                                          
                                          
                                         // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'");
                                         $resultDR=$resultDR->result();

                                         // echo "</br>"; 
                                         // echo "Query 12 - " . date("Y-m-d H:i:s"); 
                                         // echo "</br>";
                                         // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$vald->debits;
                                             $trnCr=$vald->credits;
                                         }


if($value->mark_vendor_id>0)
{

                                           // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = 119 THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->mark_vendor_id."'");
                                         $resultDR=$resultDR->result();

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$trnDr+$vald->debits;
                                             $trnCr=$trnCr+$vald->credits;
                                         }
                                         
}   
                                         
           
                                         
                                         
                                          $creditsset=0;
                                          $debitsset=0;
                                          $Toatbalance=0;
                                          $closeing=0;
                                          $Total_trn_dr=0;
                                          $Total_trn_cr=0;
                                          $payment_status_bu_closeing="";
                                          
                                          $TotalDr=$opening_balance_dr;
                                          $TotalCr=$opening_balance_cr;
                                          $totbalance=  $trnCr-$trnDr;
                                          
                                          $Total_trn_dr=$opening_balance_dr+$trnDr;
                                          $Total_trn_cr=$opening_balance_cr+$trnCr;
                                         
                                        
  
                                          

                                          
                                          if($Total_trn_dr<$Total_trn_cr)
                                          {
                                              $creditsset=$Total_trn_dr-$Total_trn_cr;
                                              $creditsset=abs($creditsset);
                                              $payment_status_bu_closeing='CR';
                                              $closeing= $creditsset;
                                              //$closeing= $creditsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                             
                                              
                                          }
                                          else
                                          {
                                              
                                              $debitsset=$Total_trn_cr-$Total_trn_dr; 
                                              $debitsset_val=$Total_trn_cr-$Total_trn_dr;
                                              $debitsset=abs($debitsset);
                                              $payment_status_bu_closeing='DR';
                                              if($debitsset==0)
                                              {
                                                  $payment_status_bu_closeing='CR';
                                              }
                                              else
                                              {
                                                  $payment_status_bu_closeing='DR';
                                              }
                                              //$closeing= $debitsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                              $closeing= $debitsset;


                                              
                                          }
                                          
                                          
                                          

                     // echo $creditsset."==".$value->id."==".$debitsset.'<br/>';
                                          
                                          

                                         
                                         if($payment_status_bu_closeing=='DR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit;
                                             $Totaltranspotval= $closeing-$Totaltranspot;
                                             $Totaltranspotval= $Totaltranspotval-$inproduction_total_return;

                                             //$Totaltranspotval=abs($Totaltranspotval);
                                             if($closeing<$Totaltranspot)
                                             {
                                                 $getstatus=1;
                                                 if($closeing>0)
                                                 {
                                                      $getstatus=1;
                                                      //$Totaltranspotval=$closeing;
                                                 }
                                                 
                                             }
                                             else
                                             {
                                                   $getstatus=0;
                                                 
                                             }
                                             
                                             
                                         }
                                         
                                         
                                         
                                          if($payment_status_bu_closeing=='CR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit+$inproduction_total_return;
                                             //$Totaltranspotval= $closeing-$Totaltranspot;
                                             if($closeing>0)
                                             {

                                                $Totaltranspot=$closeing+$Totaltranspot;
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                             else
                                             {
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                            
                                            $getstatus=1;
                                             
                                         }
                                         
                                         
                                         
                                          
                                         
                                         $debitssettotal+=$debitsset;
                                         $creditssettotal+=$creditsset;
                                         $closeingtotal+=$closeing;
                                         
                                         $productiontotal+=$production;
                                         $productiontotal_return+=$inproduction_total_return;

                                         
                                         $sheet_in_factory_val+=round($total+$total_return,2);
                                         $transit+=round($total_transit,2);
                                         
                                         $Tran_Dr+=round($trnDr,2);
                                         $Tran_Cr+=round($trnCr,2);
                                         
                                         
                                         $Tot_Dr+=round($Total_trn_dr,2);
                                         $Tot_Cr+=round($Total_trn_cr,2);
                                         
                                         
                                         $Open_Dr+=round($opening_balance_dr,2);
                                         $Open_Cr+=round($opening_balance_cr,2);
                                         $Open_Bal+=round($opening_balance,2);
                                         
                                         
                                         if($getstatus==0)
                                         { 
                                             
                                            $totalcheck=round($production+$sheet_in_factory+$total_transit+$Totaltranspotval+$inproduction_total_return,2);
                                          
                                         }
                                         else
                                         {
                                            $totalcheck=round($production+$closeing+$sheet_in_factory+$total_transit+$inproduction_total_return,2);
                                         
                                         }
                                      
                                      
                                      
                                     
                                          
                                          if($totalcheck>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                   $hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                   $hidestatus="getview";
                                              }
                                             
                                          }
                                          
                                          
                                          
                                          if($Totaltranspotval>5)
                                          {
                                              
                                              //$Totaltranspotval=round($Totaltranspotval,2);
                                          }
                                          else
                                          {
                                              //$Totaltranspotval='';
                                          }


                                          $sheet=0;
                                          $st=$production+$sheet_in_factory+$inproduction_total_return+$total_transit;

                                          $totalcloseingbalance=$debitsset-$creditsset;
                                          // echo $debitsset." ".$creditsset." ".$value->id.'<br>';
                                          $netbalance_total_set=$totalcloseingbalance-$st;
                                           if($getstatus==0)
                                           {  

                                               if($netbalance_total_set>0)
                                               {
                                                   $balanceset_total+=$netbalance_total_set;
                                                   $balanceset_total_sales+=$netbalance_total_set;
                                                    $balancetoatal+=$netbalance_total_set;
                                                   $sl_totals['balance'] += round($Totaltranspotval, 2);

                                               }

                                           }

                                           if($netbalance_total_set>0)
                                           {
                                                  $sheet=$st;
                                           }
                                           else
                                           {
                                                  $sheet=$debitsset;
                                           }




                                          
                                           
                                          $sheettotal_sales+=round($sheet,2);
                                          $sheettotal_sales_full+=round($sheet,2);
                                          $totabetbalance+=$debitsset-$sheet;



                                          


                                         $subresult[] = array(
                                             
                                            
                                            'no' => $k, 
                                            'id' => $value->id, 
                                            'l_id' => $value->l_id,
                                            'payment_status' => $payment_status, 
                                            'route_name'=>$route_name,
                                            'sales_team_id' => $value->sales_team_id, 
                                            'customername' => $value->company_name, 
                                            'customerphone' => $value->phone,
                                            'mark_vendor_id' => $value->mark_vendor_id, 
                                            'opening_balance_dr' => $opening_balance_dr,
                                            'opening_balance_cr' => $opening_balance_cr,
                                            'opening_balance' => round($opening_balance),
                                            'trnDr' => round($trnDr,2),
                                            'trnCr' => round($trnCr,2),
                                            'trnDrtotal' => round($Total_trn_dr,2),
                                            'trnCrtotal' => round($Total_trn_cr,2),
                                            'debit' => round($debitsset,2),
                                            'credit' => round($creditsset,2),
                                            'closeing' => round($closeing,2),
                                            'md_verification' => $value->md_verification,
                                            'excess_status' => intval($value->excess_status),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'production' => round($production,2),
                                            'inproduction_total_return'=>round($inproduction_total_return,2),
                                            'sheet_in_factory' => $sheet_in_factory,
                                            'sheet' => $sheet,
                                            'transit'=>round($total_transit,2),
                                            'getstatus'=>$getstatus,
                                            'balance' => round($Totaltranspotval,2),
                                            'feedback_details' => $value->feedback_details, 
                                            'phone' => $value->phone,
                                            'hidestatus' => $hidestatus
                
                                        );


                                         // if((!$checked120=='checked')){
                                         
                                           
                                         // }else{
                                         //   $inverts['opening_balance_dr']            += $opening_balance_dr;
                                         //    $inverts['opening_balance_cr']            += $opening_balance_cr;
                                         //    $inverts['opening_balance']               += round($opening_balance);
                                         //    $inverts['trnDr']                         += round($trnDr, 2);
                                         //    $inverts['trnCr']                         += round($trnCr, 2);
                                         //    $inverts['trnDrtotal']                    += round($Total_trn_dr, 2);
                                         //    $inverts['trnCrtotal']                    += round($Total_trn_cr, 2);
                                         // }
                                        
                                        $sl_totals['opening_balance_dr']            += $opening_balance_dr;
                                            $sl_totals['opening_balance_cr']            += $opening_balance_cr;
                                            $sl_totals['opening_balance']               +=  ($opening_balance);
                                            $sl_totals['trnDr']                         +=  ($trnDr);
                                            $sl_totals['trnCr']                         +=  ($trnCr);
                                            $sl_totals['trnDrtotal']                    +=  ($Total_trn_dr);
                                            $sl_totals['trnCrtotal']                    +=  ($Total_trn_cr);
                                            $sl_totals['debit']                         += round($debitsset, 2);
                                            $sl_totals['credit']                        += round($creditsset, 2);
                                            $sl_totals['closeing']                      += round($debitsset - $creditsset , 2);
                                            $sl_totals['payment_status_bu_closeing']    += $payment_status_bu_closeing;
                                            $sl_totals['production']                    += round($production, 2);
                                            $sl_totals['inproduction_total_return']     += round($inproduction_total_return, 2);
                                            $sl_totals['sheet_in_factory']              += $sheet_in_factory;
                                            $sl_totals['sheet']                         += $sheet;
                                            $sl_totals['transit']                       += round($total_transit, 2);

                                            if($checked120 == 'checked' && $hidestatus != ''){
// exit;
                                  $sl_totals['opening_balance_dr'] = $sl_totals['opening_balance_dr'] -  $opening_balance_dr;  
                                  $sl_totals['opening_balance_cr'] = $sl_totals['opening_balance_cr'] - $opening_balance_cr;   
                                  $sl_totals['opening_balance'] = $sl_totals['opening_balance']     - round($opening_balance);    
                                  $sl_totals['trnDr'] = $sl_totals['trnDr']     - round($trnDr, 2);     
                                  $sl_totals['trnCr'] = $sl_totals['trnCr']     -  round($trnCr, 2);     
                                  $sl_totals['trnDrtotal']  = $sl_totals['trnDrtotal']     - round($Total_trn_dr, 2);     
                                  $sl_totals['trnCrtotal'] = $sl_totals['trnCrtotal']     - round($Total_trn_cr, 2);    



                                              $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                            $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                            $invertsTotal['opening_balance']               += round($opening_balance);
                                            $invertsTotal['trnDr']                         += round($trnDr, 2);
                                            $invertsTotal['trnCr']                         += round($trnCr, 2);
                                            $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                            $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                            }
                                        
                                      $k++; 
                                     
                                     }
                                     
                                     
                                      

                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                            'sl_totals' => $sl_totals,
                                             'subarray'=>$subresult,
                                        );
                                      
                                      
                                     }
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                     $totalcloseing= round($debitssettotal-$creditssettotal,2);
                                     $totalcloseing=abs($totalcloseing);



                                     
                                     
                                     $totabetbalance=abs($totabetbalance);
                                     
                                      // if($checked120=='checked'){
 
                                      //       $Tran_Dr =   $Tran_Dr - $inverts['trnDr'];
                                      //       $Tran_Cr =   $Tran_Cr - $inverts['trnCr'];
                                      //       $Tot_Dr =    $Tot_Dr - $inverts['trnDrtotal'];
                                      //       $Tot_Cr =    $Tot_Cr - $inverts['trnCrtotal'];
                                      //       $Open_Dr =   $Open_Dr - $inverts['opening_balance_dr'];
                                      //       $Open_Cr =   $Open_Cr - $inverts['opening_balance_cr'];
                                      //       $Open_Bal =  $Open_Bal - $inverts['opening_balance'];


                                      // }


                                      if($checked120 == 'checked'){
// exit;     
                                          // $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                          //   $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                          //   $invertsTotal['opening_balance']               += round($opening_balance);
                                          //   $invertsTotal['trnDr']                         += round($trnDr, 2);
                                          //   $invertsTotal['trnCr']                         += round($trnCr, 2);
                                          //   $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                          //   $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                  $Open_Dr =  $Open_Dr -   $invertsTotal['opening_balance_dr'] ;  
                                  $Open_Cr =   $Open_Cr  -  $invertsTotal['opening_balance_cr'];   
                                  $Open_Bal =  $Open_Bal       - $invertsTotal['opening_balance'];    
                                  $Tran_Dr =   $Tran_Dr      - $invertsTotal['trnDr']   ;     
                                  $Tran_Cr =   $Tran_Cr     -  $invertsTotal['trnCr'] ;     
                                  $Tot_Dr  =   $Tot_Dr     - $invertsTotal['trnDrtotal'];     
                                  $Tot_Cr =    $Tot_Cr    -  $invertsTotal['trnCrtotal'];     
                                            }






                                    $totals['debit'] += round($debitssettotal,2);
                                    $totals['credit'] += round($creditssettotal,2);
                                    $totals['closeing'] +=  round($totalcloseing,2);
                                    $totals['production'] +=round($productiontotal,2);
                                    $totals[ 'production_return']+=round($productiontotal_return,2);
                                    $totals['sheet_in_factory']+=round($sheet_in_factory_val,2);
                                    $totals['transit']+=round($transit,2);
                                    $totals['net_balance']+=round($totabetbalance,2);
                                    $totals['sheet_total']+=round($sheettotal_sales_full,2);
                                    $totals['Tran_Dr']+=round($Tran_Dr,2);
                                    $totals['Tran_Cr']+=round($Tran_Cr,2);
                                    $totals['Tot_Dr']+=round($Tot_Dr,2);
                                    $totals['Tot_Cr']+=round($Tot_Cr,2);
                                    $totals['Open_Dr']+=round($Open_Dr,2);
                                    $totals['Open_Cr']+=round($Open_Cr,2);
                                    $totals['Open_Bal']+=round($Open_Bal,2);

                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'debit' => round($debitssettotal,2),
                                            'credit' => round($creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val,2),
                                            'transit'=>round($transit,2),
                                            'net_balance'=>round($totabetbalance,2),
                                            'sheet_total'=>round($sheettotal_sales_full,2),
                                            'Tran_Dr'=>round($Tran_Dr,2),
                                            'Tran_Cr'=>round($Tran_Cr,2) ,
                                            'Tot_Dr'=>round($Tot_Dr,2),
                                            'Tot_Cr'=>round($Tot_Cr,2),
                                            'Open_Dr'=>round($Open_Dr,2),
                                            'Open_Cr'=>round($Open_Cr,2),
                                            'Open_Bal'=>round($Open_Bal,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                        $i++;

                     }
                     
                     
                  
                    $arrayMain = [];
                    $arrayMain['totals'] = $totals;
                    $arrayMain['data'] = $array;

                    echo json_encode($arrayMain);

    }
        public function fetch_data_customer_balance_report_opti()
    {

                    
                    
                    
                     $testMode = (isset($_GET['test']) && $_GET['test']);


                     //Making TestMode completed and Live

                     $testMode = true;

                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";


                    if($cateid=='ALL')
                    {
                         $userslog.=' AND a.cnn_status="0"';
                    }


                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                     $result=$this->db->query("SELECT  ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1' AND b.deleteid=0  $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                     // echo "Query 1 - " . date("Y-m-d H:i:s"); 
                     // echo "</br>"; 
                     // echo "SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC"; 
                    
                     
                    
                     
                     
                     $i=1;
                     $array=array();
                     $totals = [];
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                     // date removed 

                                     $salesperson=array();
                     $invertsTotal = [];

                                      $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                    
                                     $sheettotal_sales_full=0;
                                     $totabetbalance=0;
                                    
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 AND aa.status=1 AND aa.deleteid=0  $userslog GROUP BY aa.id ORDER BY aa.username ASC");

                                     // echo "</br>"; 
                                     // echo "Query 2 - " . date("Y-m-d H:i:s"); 
                                     // echo "</br>"; 
                                     // echo "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC"; 
                
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                      $sl_totals = [];
                     // $inverts = [];
                                        
                                     
                       
                                     
                                      // date removed 
                                     $resultsubdata=$this->db->query("SELECT b.mark_vendor_id,a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                    

                                      $resultsubdata2=$this->db->query(" SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC")->result();

                                      // echo " SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC";
                                      // exit;

   // $resultsubdata2=$this->db->query("SELECT GROUP_CONCAT(distinct b.id SEPARATOR ',')  as customersList   FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC")->result();
   
                    // print_r($resultsubdata2);
                    // exit;
                    $customerData = $resultsubdata2;
                    // $customerIds = explode(",", $customerData);
                    $customerIdsFromated = [];
                   foreach ($customerData as $key => $value) {
                       // if (is_numeric($value)) {
                           $customerIdsFromated[] = "'" . $value->customersList . "'";
                       // }
                   }
                   $customerData = implode(",", $customerIdsFromated);

                   // echo $customerData;
                   // exit;

 $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id   JOIN all_ledgers al ON al.order_id = b.id
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid = 0  AND b.return_status=0
                                        AND al.party_type = '1'

                     AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$todate'  AND (b.assign_status_12_date > '$todate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$todate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        ) 


                                         GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
// print_r($overallProduction);
// exit;
                                    $custData = [];
        foreach ($overallProduction as $item) {
            // $custData[$item->customer_id]['prod_totalvalue'] =  0;
            // $custData[$item->customer_id]['production'] =  0;
            // $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['prod_totalvalue'] = round($totalValue);
            $custData[$item->customer_id]['production'] = round($totalValue + $item->roundoff + $item->tcsamount);
        }

        $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND b.reason != 'Return To Re-sale'  AND b.order_base>0
                                                                      AND b.deleteid = 0  AND b.return_status=0

                   AND (
                                                                           CASE
                                                                              WHEN 

                                                                              (b.delivery_status = 2 AND (b.assign_status_11_date <= '$todate' OR b.assign_status_12_date <= '$todate') AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$todate' OR b.assign_status_2_date IS NULL)) 


                                                                              OR 


                                                                              (b.delivery_status = 1 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)) 

                                                                              THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  

                                                                       GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();

        foreach ($overallTotal as $item) {
            // $custData[$item->customer_id]['prod_totalvalue'] =  0;
            // $custData[$item->customer_id]['production'] =  0;
            // $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total_totalvalue'] = round($totalValue);
            $custData[$item->customer_id]['total_total'] = round($totalValue + $item->roundoff + $item->tcsamount);
        }


         $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)  AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0   AND b.order_base>0 AND b.return_status = 0
                       AND (
                                             CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$todate' AND ((b.trip_end_date > '$todate' OR b.trip_end_date IS NULL)AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$todate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        ) 
 GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                                      foreach ($overallTransit as $item) {
            // $custData[$item->customer_id]['prod_totalvalue'] =  0;
            // $custData[$item->customer_id]['production'] =  0;
            // $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['transit_totalvalue'] = round($totalValue);
            $custData[$item->customer_id]['transit_total'] = round($totalValue + $item->roundoff + $item->tcsamount);
        }


                   $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$todate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
        foreach($overallOld as $item){
            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
               
        }
                   $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                          
                   $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$todate ."' AND '" .$todate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   




                    $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$todate ."' AND '" .$todate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   



                                     $k=1;
                                     $balanceset_total_sales=0;
                                     $sheettotal_sales=0;


                                     foreach ($resultsubdata as  $value) 
                                     {
                                       
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();

                                                               // echo "</br>"; 
                                                               // echo "Query 4 - " . date("Y-m-d H:i:s"); 
                                                               // echo "</br>";
                                                               // echo "SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'"; 
                                                              
                                                                                        
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                                               
                                                               
                                                               
                                                                 
                                                                $tcs_status=0;
                                                                $customers_data = $this->Main_model->where_names('customers', 'id', $value->id);
                                                                foreach ($customers_data as $csvalv) {
                                                                    $tcs_status = $csvalv->tcs_status;
                                                                   
                                                                }

                                                               
                                                               
                                                               //In Production

                                                                // assign_status_0_date - Order Created Date
                                                                // assign_status_12_date - Load Completed / Dispatch Loaded Date
                                                                // assign_status_3_date - Reconcile Date

                                                               if($testMode){

                                   //                                    $resultsub_production=$this->db->query("SELECT 
                                   //      SUM(a.amount) AS totalvalue,
                                   //      b.tcsamount,
                                   //      b.roundoff,
                                   //      b.roundoffstatus,
                                   //      b.discount 
                                   // FROM 
                                   //      order_product_list_process AS a 
                                   //  JOIN 
                                   //      orders_process AS b ON a.order_id = b.id 
                                   //  WHERE 
                                   //      a.deleteid = 0 
                                   //      AND b.customer_id = '".$value->id."'   AND a.return_status=0 AND b.order_base>0
                                   //      AND b.reason != 'Return To Re-sale'
                                   //      AND b.deleteid = 0  AND b.return_status=0
                                   //      AND (
                                   //          CASE
                                   //              WHEN b.assign_status_0_date <= '$todate'  AND (b.assign_status_12_date > '$todate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$todate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)  THEN 1
                                   //              ELSE 0
                                   //          END
                                   //      )  
                                   //  GROUP BY 
                                   //      b.id 
                                   //  ORDER BY 
                                   //      a.id DESC");
                                                                
                                                               }else{
                                                                $resultsub_production=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason != 'Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $discount1=0;
                                                                
                                                                 // $resultsub_production=$resultsub_production->result();


                                                                 // echo "</br>"; 
                                                                 // echo "Query 5 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 
                                                                
  
                                                                 $production=0;
                                                                 // foreach($resultsub_production as $val)
                                                                 // { 
                                                                               
                                                                             //  $roundoff=$val->roundoff; 
                                                                             //  if($val->roundoffstatus==1)
                                                                             //  {
                                                                             //      $totalvalue=$val->totalvalue;
                                                                             //  }
                                                                             //  else
                                                                             //  {
                                                                             //      $totalvalue=$val->totalvalue;
                                                                             //  }
                                                                               
                                                                             // $discount1+=$val->discount;


                                                                             $totalvalue=$custData[$value->id]['prod_totalvalue'];
                                                                             $production+=$custData[$value->id]['production'];
                                                     
                                                                 // }
                                                                 
                                                               
                                                                  
                                                                  
                                                                 $discount2=0;

                                                                 //Sheet in Factory
 // assign_status_0_date - Order Created Date
// assign_status_12_date - Load Completed / Dispatch Loaded Date
// assign_status_3_date - Reconcile Date
//delivery_status - 1 means Client Scope Order
//delivery_status - 2 means Own Scope Order
                                                                  if($testMode){
                                    //                                   $resultsub=$this->db->query("SELECT 
                                    //                                   SUM(a.amount) AS totalvalue,
                                    //                                   b.tcsamount,
                                    //                                   b.roundoff,
                                    //                                   b.roundoffstatus,
                                    //                                   b.discount 
                                    //                             FROM  order_product_list_process AS a 
                                    // JOIN 
                                    //     orders_process AS b ON a.order_id = b.id 
                                    // WHERE 
                                    //     a.deleteid = 0 
                                    //     AND b.customer_id = '".$value->id."'  AND b.order_base > 0
                                    //      AND b.reason != 'Return To Re-sale' AND b.return_status=0
                                    //                                   AND b.deleteid = 0  
                                    //                                   AND (
                                    //                                        CASE
                                    //                                           WHEN (b.delivery_status = 2 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$todate' OR b.assign_status_2_date IS NULL)) OR (b.delivery_status = 1 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)) THEN 1
                                    //                                           ELSE 0
                                    //                                       END
                                    //                                   )  
                                    //                               GROUP BY 
                                    //                                   b.id 
                                    //                               ORDER BY 
                                    //                                   a.id DESC
                                    //                               ");
                                                               
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 // $resultsub=$resultsub->result();
                                                                  // print_r($resultsub);
                                                                  // exit;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 6 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total=0;
                                                                 // foreach($resultsub as $val)
                                                                 // { 
                                                                   
                                                                 //              $roundoff=$val->roundoff; 
                                                                 //              if($val->roundoffstatus==1)
                                                                 //              {
                                                                 //                  $totalvalue=$val->totalvalue;
                                                                 //              }
                                                                 //              else
                                                                 //              {
                                                                 //                  $totalvalue=$val->totalvalue;
                                                                 //              }
                                                                   
                                                                 //   $discount2+=$val->discount;
                                                                   $totalvalue=$custData[$value->id]['total_totalvalue'];
                                                                   $total+=$custData[$value->id]['total_total'];


                                                                  
                                                     
                                                                 // }
                                                                 
                                                                 
                                                               
                                                                           
                                                                  
                                                                 
                                                                     if($testMode){  
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND date(b.create_date) <= '".$todate."'   AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2  AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub_inproduction=$resultsub_inproduction->result();
                                                                 $inproduction_total_return=0;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 7 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 foreach($resultsub_inproduction as $vals)
                                                                 { 
                                                                   
                                                                  
                                                                             $inproduction_total_return=round($vals->bill_total);
                                                     
                                                                 }
                                                                 
                                                                 
                                                                 //$production=$inproduction_total_return+$production;


                                                                  if($testMode){  
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0  AND b.create_date <= '".$todate."' ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0   ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 8 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 $total_return=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                  
                                                                             $total_return=round($val->bill_total);
                                                     
                                                                 }
                            
                                                               
                                                               
                                                               
                                                                  $discount3=0;
                                                                  if($testMode){ 
                                   //                               $resultsub=$this->db->query("SELECT 
                                   //      SUM(a.amount) AS totalvalue,
                                   //      b.tcsamount,
                                   //      b.roundoff,
                                   //      b.roundoffstatus,
                                   //      b.discount 
                                   //      FROM
                                   // order_product_list_process AS a 
                                   //  JOIN 
                                   //      orders_process AS b ON a.order_id = b.id 
                                   //  WHERE 
                                   //      a.deleteid = 0 
                                   //      AND b.customer_id = '".$value->id."'
                                   //      AND b.order_base > 0
                                   //      AND b.reason != 'Return To Re-sale' 
                                   //      AND b.deleteid = 0  AND b.return_status=0
                                   //      AND (
                                   //           CASE
                                   //              WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$todate' AND ((b.trip_end_date > '$todate' OR b.trip_end_date IS NULL) AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$todate' )) ) )  THEN 1
                                   //              ELSE 0
                                   //          END
                                   //      )  
                                   //  GROUP BY 
                                   //      b.id 
                                   //  ORDER BY 
                                   //      a.id DESC");
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2') AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 // $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 9 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total_transit=0;
                                                                 // foreach($resultsub as $val)
                                                                 // { 
                                                                   
                                                                   
                                                                 //             $roundoff=$val->roundoff; 
                                                                            
                                                                 //              if($val->roundoffstatus==1)
                                                                 //              {
                                                                 //                  $totalvalue=$val->totalvalue;
                                                                 //              }
                                                                 //              else
                                                                 //              {
                                                                 //                  $totalvalue=$val->totalvalue;
                                                                 //              }
                                                                 //              $discount3+=$val->discount;
                                                                              $totalvalue=$custData[$value->id]['transit_totalvalue'];
                                                                              $total_transit+$custData[$value->id]['transit_total'];
                                                     
                                                                // }
                                                                
                                                                
                                                                
                                                               
                                                                  
                                                                  

                                             
                                            $total_credit_balance=0; 
                                            $total_debit_balance=0;
                                            $total_credit_balance_new=0;
                                            $total_debit_balance_new=0;
                                            $opening_balance=0;
                                            // $resultDRss=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND   a.cnn_status = 0  AND a.customer_id='".$value->id."'");
                                            // $resultDRss=$resultDRss->result();
                                             $old_date_opening_balance=$custData[$value->id]['old_date_opening_balance']; 
                                           

                                             // echo "</br>"; 
                                             // echo "Query 10 - " . date("Y-m-d H:i:s"); 
                                             // echo "</br>";
                                             // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 

                       
                                            if($old_date_opening_balance>0)
                                            {
                                                $total_credit_balance=$old_date_opening_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance=$old_date_opening_balance;
                                            }
                                            
                                             
                                               
                                                                
                                             
                                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND   a.cnn_status = 0 AND a.customer_id='".$value->id."'");
                                            $resultDRsscurrentdate=$resultDRsscurrentdate->result(); 

                                            // echo "</br>"; 
                                            // echo "Query 11 - " . date("Y-m-d H:i:s"); 
                                            // echo "</br>";
                                            // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'   AND a.customer_id='".$value->id."'"; 
                                            

                                            $opeinging_balance=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                             if($opeinging_balance>0)
                                            {
                                                $total_credit_balance_new=$opeinging_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance_new=$opeinging_balance;
                                            }


                                            if($value->mark_vendor_id>0)
                                             {



                                               $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = 119 THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$value->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                $total_credit_balance_new=$total_credit_balance_new+$opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                $total_debit_balance_new=$total_debit_balance_new+$opeinging_balance_vendor;
                                              }






                                             }
                                             

                                             
                                            $totalvaluecrited= round($total_credit_balance+$total_credit_balance_new,2);
                                            $totalvaluedebit= round($total_debit_balance+$total_debit_balance_new,2);



                                            
                                            $totalvaluecrited=abs($totalvaluecrited);
                                            $totalvaluedebit=abs($totalvaluedebit);
                     // echo $opening_balance_cr."= =".$value->id."==".$totalvaluedebit.'<br/>';
                                              
                                            $opening_balance_val=$totalvaluecrited-$totalvaluedebit;
                                            
                                    
                                    
                                    
                                            $payment_status="";



                                           // $opening_balance_cr=$totalvaluecrited;
                                           // $opening_balance_dr=$totalvaluedebit;

                                                                if($opening_balance_val>0)
                                                                 {
                                                                   $opening_balance_cr=abs($opening_balance_val);
                                                                   $opening_balance_dr=0;
                                                                 }
                                                                 else
                                                                 {


                                                                   $opening_balance_dr=abs($opening_balance_val);
                                                                   $opening_balance_cr=0;

                                                                 }



                                            $opening_balance=abs($opening_balance_val);
                                            
                                            
                                            if($opening_balance_val>0)
                                            {
                                                $payment_status='CR';
                                                
                                            }
                                            else
                                            {
                                                $payment_status='DR';  
                                               
                                            }
                               
                               
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                     
                                     
                                     
                                      
                         
                                         
                                         
                                         
                                          
                                         
                                          
                                        
                                          
                                          $sheet_in_factory=round($total+$total_return,2);
                                          
                                          //   echo $total_return;
                                          // exit;
                                          
                                          
                                         // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'");
                                         $resultDR=$resultDR->result();

                                         // echo "</br>"; 
                                         // echo "Query 12 - " . date("Y-m-d H:i:s"); 
                                         // echo "</br>";
                                         // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$vald->debits;
                                             $trnCr=$vald->credits;
                                         }


if($value->mark_vendor_id>0)
{

                                           // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = 119 THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->mark_vendor_id."'");
                                         $resultDR=$resultDR->result();

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$trnDr+$vald->debits;
                                             $trnCr=$trnCr+$vald->credits;
                                         }
                                         
}   
                                         
           
                                         
                                         
                                          $creditsset=0;
                                          $debitsset=0;
                                          $Toatbalance=0;
                                          $closeing=0;
                                          $Total_trn_dr=0;
                                          $Total_trn_cr=0;
                                          $payment_status_bu_closeing="";
                                          
                                          $TotalDr=$opening_balance_dr;
                                          $TotalCr=$opening_balance_cr;
                                          $totbalance=  $trnCr-$trnDr;
                                          
                                          $Total_trn_dr=$opening_balance_dr+$trnDr;
                                          $Total_trn_cr=$opening_balance_cr+$trnCr;
                                         
                                        
  
                                          

                                          
                                          if($Total_trn_dr<$Total_trn_cr)
                                          {
                                              $creditsset=$Total_trn_dr-$Total_trn_cr;
                                              $creditsset=abs($creditsset);
                                              $payment_status_bu_closeing='CR';
                                              $closeing= $creditsset;
                                              //$closeing= $creditsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                             
                                              
                                          }
                                          else
                                          {
                                              
                                              $debitsset=$Total_trn_cr-$Total_trn_dr; 
                                              $debitsset_val=$Total_trn_cr-$Total_trn_dr;
                                              $debitsset=abs($debitsset);
                                              $payment_status_bu_closeing='DR';
                                              if($debitsset==0)
                                              {
                                                  $payment_status_bu_closeing='CR';
                                              }
                                              else
                                              {
                                                  $payment_status_bu_closeing='DR';
                                              }
                                              //$closeing= $debitsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                              $closeing= $debitsset;


                                              
                                          }
                                          
                                          
                                          

                     // echo $creditsset."==".$value->id."==".$debitsset.'<br/>';
                                          
                                          

                                         
                                         if($payment_status_bu_closeing=='DR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit;
                                             $Totaltranspotval= $closeing-$Totaltranspot;
                                             $Totaltranspotval= $Totaltranspotval-$inproduction_total_return;

                                             //$Totaltranspotval=abs($Totaltranspotval);
                                             if($closeing<$Totaltranspot)
                                             {
                                                 $getstatus=1;
                                                 if($closeing>0)
                                                 {
                                                      $getstatus=1;
                                                      //$Totaltranspotval=$closeing;
                                                 }
                                                 
                                             }
                                             else
                                             {
                                                   $getstatus=0;
                                                 
                                             }
                                             
                                             
                                         }
                                         
                                         
                                         
                                          if($payment_status_bu_closeing=='CR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit+$inproduction_total_return;
                                             //$Totaltranspotval= $closeing-$Totaltranspot;
                                             if($closeing>0)
                                             {

                                                $Totaltranspot=$closeing+$Totaltranspot;
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                             else
                                             {
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                            
                                            $getstatus=1;
                                             
                                         }
                                         
                                         
                                         
                                          
                                         
                                         $debitssettotal+=$debitsset;
                                         $creditssettotal+=$creditsset;
                                         $closeingtotal+=$closeing;
                                         
                                         $productiontotal+=$production;
                                         $productiontotal_return+=$inproduction_total_return;

                                         
                                         $sheet_in_factory_val+=round($total+$total_return,2);
                                         $transit+=round($total_transit,2);
                                         
                                         $Tran_Dr+=round($trnDr,2);
                                         $Tran_Cr+=round($trnCr,2);
                                         
                                         
                                         $Tot_Dr+=round($Total_trn_dr,2);
                                         $Tot_Cr+=round($Total_trn_cr,2);
                                         
                                         
                                         $Open_Dr+=round($opening_balance_dr,2);
                                         $Open_Cr+=round($opening_balance_cr,2);
                                         $Open_Bal+=round($opening_balance,2);
                                         
                                         
                                         if($getstatus==0)
                                         { 
                                             
                                            $totalcheck=round($production+$sheet_in_factory+$total_transit+$Totaltranspotval+$inproduction_total_return,2);
                                          
                                         }
                                         else
                                         {
                                            $totalcheck=round($production+$closeing+$sheet_in_factory+$total_transit+$inproduction_total_return,2);
                                         
                                         }
                                      
                                      
                                      
                                     
                                          
                                          if($totalcheck>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                   $hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                   $hidestatus="getview";
                                              }
                                             
                                          }
                                          
                                          
                                          
                                          if($Totaltranspotval>5)
                                          {
                                              
                                              //$Totaltranspotval=round($Totaltranspotval,2);
                                          }
                                          else
                                          {
                                              //$Totaltranspotval='';
                                          }


                                          $sheet=0;
                                          $st=$production+$sheet_in_factory+$inproduction_total_return+$total_transit;

                                          $totalcloseingbalance=$debitsset-$creditsset;
                                          // echo $debitsset." ".$creditsset." ".$value->id.'<br>';
                                          $netbalance_total_set=$totalcloseingbalance-$st;
                                           if($getstatus==0)
                                           {  

                                               if($netbalance_total_set>0)
                                               {
                                                   $balanceset_total+=$netbalance_total_set;
                                                   $balanceset_total_sales+=$netbalance_total_set;
                                                    $balancetoatal+=$netbalance_total_set;
                                                   $sl_totals['balance'] += round($Totaltranspotval, 2);

                                               }

                                           }

                                           if($netbalance_total_set>0)
                                           {
                                                  $sheet=$st;
                                           }
                                           else
                                           {
                                                  $sheet=$debitsset;
                                           }




                                          
                                           
                                          $sheettotal_sales+=round($sheet,2);
                                          $sheettotal_sales_full+=round($sheet,2);
                                          $totabetbalance+=$debitsset-$sheet;



                                          


                                         $subresult[] = array(
                                             
                                            
                                            'no' => $k, 
                                            'id' => $value->id, 
                                            'l_id' => $value->l_id,
                                            'payment_status' => $payment_status, 
                                            'route_name'=>$route_name,
                                            'sales_team_id' => $value->sales_team_id, 
                                            'customername' => $value->company_name, 
                                            'customerphone' => $value->phone,
                                            'mark_vendor_id' => $value->mark_vendor_id, 
                                            'opening_balance_dr' => $opening_balance_dr,
                                            'opening_balance_cr' => $opening_balance_cr,
                                            'opening_balance' => round($opening_balance),
                                            'trnDr' => round($trnDr,2),
                                            'trnCr' => round($trnCr,2),
                                            'trnDrtotal' => round($Total_trn_dr,2),
                                            'trnCrtotal' => round($Total_trn_cr,2),
                                            'debit' => round($debitsset,2),
                                            'credit' => round($creditsset,2),
                                            'closeing' => round($closeing,2),
                                            'md_verification' => $value->md_verification,
                                            'excess_status' => intval($value->excess_status),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'production' => round($production,2),
                                            'inproduction_total_return'=>round($inproduction_total_return,2),
                                            'sheet_in_factory' => $sheet_in_factory,
                                            'sheet' => $sheet,
                                            'transit'=>round($total_transit,2),
                                            'getstatus'=>$getstatus,
                                            'balance' => round($Totaltranspotval,2),
                                            'feedback_details' => $value->feedback_details, 
                                            'phone' => $value->phone,
                                            'hidestatus' => $hidestatus
                
                                        );


                                         // if((!$checked120=='checked')){
                                         
                                           
                                         // }else{
                                         //   $inverts['opening_balance_dr']            += $opening_balance_dr;
                                         //    $inverts['opening_balance_cr']            += $opening_balance_cr;
                                         //    $inverts['opening_balance']               += round($opening_balance);
                                         //    $inverts['trnDr']                         += round($trnDr, 2);
                                         //    $inverts['trnCr']                         += round($trnCr, 2);
                                         //    $inverts['trnDrtotal']                    += round($Total_trn_dr, 2);
                                         //    $inverts['trnCrtotal']                    += round($Total_trn_cr, 2);
                                         // }
                                        
                                        $sl_totals['opening_balance_dr']            += $opening_balance_dr;
                                            $sl_totals['opening_balance_cr']            += $opening_balance_cr;
                                            $sl_totals['opening_balance']               +=  ($opening_balance);
                                            $sl_totals['trnDr']                         +=  ($trnDr);
                                            $sl_totals['trnCr']                         +=  ($trnCr);
                                            $sl_totals['trnDrtotal']                    +=  ($Total_trn_dr);
                                            $sl_totals['trnCrtotal']                    +=  ($Total_trn_cr);
                                            $sl_totals['debit']                         += round($debitsset, 2);
                                            $sl_totals['credit']                        += round($creditsset, 2);
                                            $sl_totals['closeing']                      += round($debitsset - $creditsset , 2);
                                            $sl_totals['payment_status_bu_closeing']    += $payment_status_bu_closeing;
                                            $sl_totals['production']                    += round($production, 2);
                                            $sl_totals['inproduction_total_return']     += round($inproduction_total_return, 2);
                                            $sl_totals['sheet_in_factory']              += $sheet_in_factory;
                                            $sl_totals['sheet']                         += $sheet;
                                            $sl_totals['transit']                       += round($total_transit, 2);

                                            if($checked120 == 'checked' && $hidestatus != ''){
// exit;
                                  $sl_totals['opening_balance_dr'] = $sl_totals['opening_balance_dr'] -  $opening_balance_dr;  
                                  $sl_totals['opening_balance_cr'] = $sl_totals['opening_balance_cr'] - $opening_balance_cr;   
                                  $sl_totals['opening_balance'] = $sl_totals['opening_balance']     - round($opening_balance);    
                                  $sl_totals['trnDr'] = $sl_totals['trnDr']     - round($trnDr, 2);     
                                  $sl_totals['trnCr'] = $sl_totals['trnCr']     -  round($trnCr, 2);     
                                  $sl_totals['trnDrtotal']  = $sl_totals['trnDrtotal']     - round($Total_trn_dr, 2);     
                                  $sl_totals['trnCrtotal'] = $sl_totals['trnCrtotal']     - round($Total_trn_cr, 2);    



                                              $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                            $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                            $invertsTotal['opening_balance']               += round($opening_balance);
                                            $invertsTotal['trnDr']                         += round($trnDr, 2);
                                            $invertsTotal['trnCr']                         += round($trnCr, 2);
                                            $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                            $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                            }
                                        
                                      $k++; 
                                     
                                     }
                                     
                                     
                                      

                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                            'sl_totals' => $sl_totals,
                                             'subarray'=>$subresult,
                                        );
                                      
                                      
                                     }
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                     $totalcloseing= round($debitssettotal-$creditssettotal,2);
                                     $totalcloseing=abs($totalcloseing);



                                     
                                     
                                     $totabetbalance=abs($totabetbalance);
                                     
                                      // if($checked120=='checked'){
 
                                      //       $Tran_Dr =   $Tran_Dr - $inverts['trnDr'];
                                      //       $Tran_Cr =   $Tran_Cr - $inverts['trnCr'];
                                      //       $Tot_Dr =    $Tot_Dr - $inverts['trnDrtotal'];
                                      //       $Tot_Cr =    $Tot_Cr - $inverts['trnCrtotal'];
                                      //       $Open_Dr =   $Open_Dr - $inverts['opening_balance_dr'];
                                      //       $Open_Cr =   $Open_Cr - $inverts['opening_balance_cr'];
                                      //       $Open_Bal =  $Open_Bal - $inverts['opening_balance'];


                                      // }


                                      if($checked120 == 'checked'){
// exit;     
                                          // $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                          //   $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                          //   $invertsTotal['opening_balance']               += round($opening_balance);
                                          //   $invertsTotal['trnDr']                         += round($trnDr, 2);
                                          //   $invertsTotal['trnCr']                         += round($trnCr, 2);
                                          //   $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                          //   $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                  $Open_Dr =  $Open_Dr -   $invertsTotal['opening_balance_dr'] ;  
                                  $Open_Cr =   $Open_Cr  -  $invertsTotal['opening_balance_cr'];   
                                  $Open_Bal =  $Open_Bal       - $invertsTotal['opening_balance'];    
                                  $Tran_Dr =   $Tran_Dr      - $invertsTotal['trnDr']   ;     
                                  $Tran_Cr =   $Tran_Cr     -  $invertsTotal['trnCr'] ;     
                                  $Tot_Dr  =   $Tot_Dr     - $invertsTotal['trnDrtotal'];     
                                  $Tot_Cr =    $Tot_Cr    -  $invertsTotal['trnCrtotal'];     
                                            }






                                    $totals['debit'] += round($debitssettotal,2);
                                    $totals['credit'] += round($creditssettotal,2);
                                    $totals['closeing'] +=  round($totalcloseing,2);
                                    $totals['production'] +=round($productiontotal,2);
                                    $totals[ 'production_return']+=round($productiontotal_return,2);
                                    $totals['sheet_in_factory']+=round($sheet_in_factory_val,2);
                                    $totals['transit']+=round($transit,2);
                                    $totals['net_balance']+=round($totabetbalance,2);
                                    $totals['sheet_total']+=round($sheettotal_sales_full,2);
                                    $totals['Tran_Dr']+=round($Tran_Dr,2);
                                    $totals['Tran_Cr']+=round($Tran_Cr,2);
                                    $totals['Tot_Dr']+=round($Tot_Dr,2);
                                    $totals['Tot_Cr']+=round($Tot_Cr,2);
                                    $totals['Open_Dr']+=round($Open_Dr,2);
                                    $totals['Open_Cr']+=round($Open_Cr,2);
                                    $totals['Open_Bal']+=round($Open_Bal,2);

                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'debit' => round($debitssettotal,2),
                                            'credit' => round($creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val,2),
                                            'transit'=>round($transit,2),
                                            'net_balance'=>round($totabetbalance,2),
                                            'sheet_total'=>round($sheettotal_sales_full,2),
                                            'Tran_Dr'=>round($Tran_Dr,2),
                                            'Tran_Cr'=>round($Tran_Cr,2) ,
                                            'Tot_Dr'=>round($Tot_Dr,2),
                                            'Tot_Cr'=>round($Tot_Cr,2),
                                            'Open_Dr'=>round($Open_Dr,2),
                                            'Open_Cr'=>round($Open_Cr,2),
                                            'Open_Bal'=>round($Open_Bal,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                        $i++;

                     }
                     
                     
                  
                    $arrayMain = [];
                    $arrayMain['totals'] = $totals;
                    $arrayMain['data'] = $array;

                    echo json_encode($arrayMain);

    }
    
    
    
    
    
    
    
    
    
         public function fetch_data_customer_balance_report_production()
    {

                    
                      $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                      $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                    
                    
                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                     $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                       
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                     // date removed 
                                     $salesperson=array();

                                      $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                     $balancetoatal=0;
                                    
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                     
                       
                                     
                                      // date removed 
                                     $resultsubdata=$this->db->query("SELECT b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,SUM(a.debits) as debits,SUM(a.credits) as credits,b.opening_balance,b.company_name,b.payment_status  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id   WHERE    a.deleteid=0 AND a.party_type='1'  AND b.sales_team_id='".$valueget->sales_team_id."'  $stat $userslog $searchsql2 GROUP BY a.customer_id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                    
                                    
                                     $k=1;
                                     foreach ($resultsubdata as  $value) 
                                     {
                                       
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                                               
                                                               
                                                               
                                                               
                                                                 $discount1=0;
                                                                 $resultsub_production=$this->db->query("SELECT b.bill_total as totalvalue FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.create_date BETWEEN '".$formdate."' AND '".$todate."' AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.reason!='Return To Re-sale' GROUP BY b.id ORDER BY a.id DESC");
                                                                 $resultsub_production=$resultsub_production->result();
                                                                 $production=0;
                                                                 foreach($resultsub_production as $val)
                                                                 { 
                                                                               
                                                                             $totalvalue=$val->totalvalue;
                                                                             $production+=round($totalvalue,2);
                                                     
                                                                 }
                                                                 
                                                               
                                                               
                                                                 $discount2=0;
                                                                 $resultsub=$this->db->query("SELECT b.bill_total as totalvalue FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.create_date BETWEEN '".$formdate."' AND '".$todate."' AND b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 GROUP BY b.id ORDER BY a.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 $total=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                     $totalvalue=$val->totalvalue;
                                                                     $total+=round($totalvalue,2);
                                                     
                                                                 }
                                                                 
                                                                                  
                                                                  
                                                                 
                                                                      
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."' AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' AND b.order_base=2 AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                                 $resultsub_inproduction=$resultsub_inproduction->result();
                                                                 $inproduction_total_return=0;
                                                                 foreach($resultsub_inproduction as $vals)
                                                                 { 
                                                                   
                                                                  
                                                                             $inproduction_total_return=round($vals->bill_total);
                                                     
                                                                 }
                                                                 
                                                                 
                                                                 //$production=$inproduction_total_return+$production;


                                                                 
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."' AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' AND b.order_base=1 AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 $total_return=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                  
                                                                             $total_return=round($val->bill_total);
                                                     
                                                                 }
                            
                                                               
                                                               
                                                               
                                                                 $discount3=0;
                                                                 $resultsub=$this->db->query("SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2') AND b.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 GROUP BY b.id ORDER BY a.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 $total_transit=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                             $totalvalue=$val->totalvalue;
                                                                             $total_transit+=round($totalvalue,2);
                                                     
                                                                }
                                                                
                                                               
                                                               $sheet_in_factory=round($total+$total_return,2);
                                                               $Totaltranspot= $production+$sheet_in_factory+$total_transit+$inproduction_total_return;
                                          
                                      
                                         
                                         
                                         
                                          
                                        
                                         
                                                              $productiontotal+=$production;
                                                              $productiontotal_return+=$inproduction_total_return;
                                                              $sheet_in_factory_val+=round($total+$total_return,2);
                                                              $transit+=round($total_transit,2);
                                                               
                                      
                                                                
                                                                if($Totaltranspot>0)
                                                                {
                                                                    
                                                                
                                         
                                                                 $subresult[] = array(
                                                                    
                                                                    
                                                                    'no' => $k, 
                                                                    'id' => $value->id, 
                                                                    'payment_status' => $payment_status, 
                                                                    'route_name'=>$route_name,
                                                                    'sales_team_id' => $value->sales_team_id, 
                                                                    'customername' => $value->company_name, 
                                                                    'customerphone' => $value->phone,
                                                                    'production' => round($production,2),
                                                                    'inproduction_total_return'=>round($inproduction_total_return,2),
                                                                    'sheet_in_factory' => $sheet_in_factory,
                                                                    'transit'=>round($total_transit,2),
                                                                    'feedback_details' => $value->feedback_details, 
                                                                    'phone' => $value->phone
                                        
                                                                );
                                                                
                                                                 $k++;
                                                               }    
                                       
                                           
                                           
                                       
                                           
                                        
                                      
                                     
                                     }
                                     
                                     
                                     
                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                             'subarray'=>$subresult,
                                            
                                        );
                                      
                                      
                                     }
                                      
                                      
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val,2),
                                            'transit'=>round($transit,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                                   $i++;

                     }
                     
                     
                  
                    

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
      public function fetch_data_customer_balance_report_order()
    {

                    
                    
                    
                    
                    $checked120="checked";

                    $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                    
                    if(count($table_customize)>0)
                    {
                       
                       
                       foreach($table_customize as $vl)
                       {
                           
                           $label_id=$vl->label_id;
                           $status=$vl->status;
                           if($label_id==120)
                           {
                               if($status==0)
                               {  
                                   $checked120="unchecked";
                               }
                           }
                    
                       }
                    
                    
                    }

                     $customer_id=$_GET['customer_id'];
                     
                     
                     //$customer_id=31804;
                     
                     $cateid=$_GET['order_status'];
                     $sales_group=$_GET['sales_group'];
                     
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     
                     $pagenum = $_GET['page'];
                     $pagesize = $_GET['size'];
                     $offset = ($pagenum - 1) * $pagesize;
                     
                     
                    
                 
                     $stat=' ';
                     $userslog="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                     
                    
                    if($sales_group!='ALL')
                    {
                        
                         $usersgroup=' AND ss.id="'.$sales_group.'"';  
     
                    }
                    
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                           
                                 
                    }
                     
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                                 $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                  
                      
                     $search = $_GET['search'];
                     $searchsql="";
                     $searchsql2="";
                     if($search!="")
                     {
                         //$searchsql=" AND  ss.name LIKE'%".$search."%'";
                         $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
                     }
                     
                     
                        // date removed 
                     $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                     
                 
                    
                     
                     
                     $i=1;
                     $array=array();
                       
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                     // date removed 
                                     $salesperson=array();
                                     $production=0;
                                     $Sheet_in_Factory_total=0;
                                     $total_transit_total=0;
                                     $in_production_return_total=0;
                                     $total_return_total=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                     
                       
                                     
                                      // date removed 
                                     $resultsubdata=$this->db->query("SELECT b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,SUM(a.debits) as debits,SUM(a.credits) as credits,b.opening_balance,b.company_name,b.payment_status  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id   WHERE    a.deleteid=0 AND a.party_type='1'  AND b.sales_team_id='".$valueget->sales_team_id."'  $stat $userslog $searchsql2 GROUP BY a.customer_id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                    
                                    
                                     $k=1;
                                     foreach ($resultsubdata as  $value) 
                                     {
                                       
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                                
                                                                
                                                               
                                                               $suborders=array();
                                                               
                                                               
                                                               
                                                               
                                                                $resultsub_production=$this->db->query("SELECT b.bill_total as totalvalue,b.assign_status,b.order_no,b.create_date,b.entry_user_id as salesval FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.create_date BETWEEN '".$formdate."' AND '".$todate."' AND  a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.reason!='Return To Re-sale' GROUP BY b.id ORDER BY a.id DESC");
                                                                $resultsub_production=$resultsub_production->result();
                                                              
                                                               foreach($resultsub_production as $val)
                                                               { 
                                                                    
                                                                   
                          
                                                                    $in_production=0;
                                                                    $Sheet_in_Factory=0;
                                                                    $total_transit=0;
                                                                    $total=0;
                                                                    $assign_status=$val->assign_status;
                                                                    if($assign_status==0)
                                                                    {
                                                                       $in_production=$val->totalvalue;
                                                                    }
                                                                    
                                                                    $people=array('11','12','1');
                                                                    if(in_array($assign_status, $people))
                                                                    {
                                                                        $total=$val->totalvalue;
                                                                    }
                                                                    
                                                                    
                                                                    if($assign_status==2)
                                                                    {
                                                                       $total_transit=$val->totalvalue;
                                                                    }
                                                                    
                                                                    
                                                                    $Sheet_in_Factory=$total;
                                                                    
                                                                    
                                                                    $full_total=$in_production+$Sheet_in_Factory+$total_transit;
                                                                    
                                                                    if($full_total>0)
                                                                    {
                                                                        
                                                                          $username='';
                                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$val->salesval."'");
                                                                          $resultsales_team=$query->result();
                                                                          foreach ($resultsales_team as  $values_set) {
                                                                              
                                                                              $username=$values_set->name;
                                                                              
                                                                          }
                          
                                                                        
                                                                            $production+=$in_production;
                                                                            $Sheet_in_Factory_total+=$Sheet_in_Factory;
                                                                            $total_transit_total+=$total_transit;
                                                                            $suborders[] = array(
                                                                            
                                                                            
                                                                            
                                                                            'customer_id' => $value->id, 
                                                                            'bill_total' => $val->totalvalue, 
                                                                            'order_no' => $val->order_no,
                                                                            'in_production_return'=>0,
                                                                            'in_production'=>$in_production,
                                                                            'Sheet_in_Factory' => $Sheet_in_Factory, 
                                                                            'Transit' => $total_transit, 
                                                                            'create_date' => date('d-m-Y',strtotime($val->create_date)),
                                                                            'user_id' => $username
                                                                            
                                                
                                                                            ); 
                                                                    
                                                                    
                                                                    }
                                                                    
                                                                    
                                                                    
                                                                    
                                                                    
                                                                 
                                                                            
                                                     
                                                               }
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                               
                                                                 $resultsub=$this->db->query("SELECT b.bill_total as bill_total,b.order_no,b.re_order_no,b.order_base,b.update_date,b.user_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."' AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY b.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                    
                                                                   
                          
                                                                    $in_production_return=0;
                                                                  
                                                                    $total_return=0;
                                                                    $order_base=$val->order_base;
                                                                    if($order_base==2)
                                                                    {
                                                                       $in_production_return=$val->totalvalue;
                                                                    }
                                                                    
                                                                    if($order_base==1)
                                                                    {
                                                                       $total_return=$val->totalvalue;
                                                                    }
                                                                    
                                                                    
                                                                  
                                                                    
                                                                    
                                                                    $full_total_return=$in_production_return+$total_return;
                                                                    
                                                                    if($full_total_return>0)
                                                                    {
                                                                        
                                                                          $username='';
                                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$val->user_id."'");
                                                                          $resultsales_team=$query->result();
                                                                          foreach ($resultsales_team as  $values_set) {
                                                                              
                                                                              $username=$values_set->name;
                                                                              
                                                                          }
                          
                                                                        
                                                                            $in_production_return_total+=$in_production_return;
                                                                            $total_return_total+=$total_return;
                                                                            $suborders[] = array(
                                                                            
                                                                            
                                                                            
                                                                            'customer_id' => $value->id, 
                                                                            'bill_total' => $val->totalvalue, 
                                                                            'order_no' => $val->re_order_no.' | '.$val->order_no,
                                                                            'in_production_return'=>$in_production_return,
                                                                            'in_production'=>0,
                                                                            'Sheet_in_Factory' => $total_return, 
                                                                            'Transit' => 0, 
                                                                            'create_date' => date('d-m-Y',strtotime($val->update_date)),
                                                                            'user_id' => $username
                                                                            
                                                
                                                                            ); 
                                                                    
                                                                    
                                                                    }
                                                                    
                                                                    
                                                                    
                                                                    
                                                                    
                                                                 
                                                                            
                                                     
                                                               }
                                                               
                                         
                                      
                                                                
                                                                
                                                                
                                                              if(!empty($suborders))
                                                              {
                                                                  $subresult[] = array(
                                                                    
                                                                    
                                                                    'no' => $k, 
                                                                    'id' => $value->id, 
                                                                    'payment_status' => $payment_status, 
                                                                    'route_name'=>$route_name,
                                                                    'sales_team_id' => $value->sales_team_id, 
                                                                    'customername' => $value->company_name, 
                                                                    'customerphone' => $value->phone,
                                                                    'feedback_details' => $value->feedback_details, 
                                                                    'phone' => $value->phone,
                                                                    'suborders'=>$suborders,
                                        
                                                                );
                                                                
                                                                 $k++;
                                                                
                                                              }
                                                                
                                                     
                                                        
                                        
                                      
                                     
                                     }
                                     
                                     
                                     
                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                             'subarray'=>$subresult,
                                            
                                        );
                                      
                                      
                                     }
                                      
                                      
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'production_return'=>$in_production_return_total,
                                            'production'=>$production,
                                            'sheet_in_factory'=>$Sheet_in_Factory_total+$total_return_total,
                                            'transit'=>$total_transit_total,
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                                   $i++;

                     }
                     
                     
                 
                    

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     public function fetch_data_enquiry_report_a()
    {

                    
               $customer_id=$_GET['customer_id'];
               $cateid=$_GET['sales_group'];
               //  $sales_group=$_GET['sales_group'];
                $productid=$_GET['productid'];
                $limit=$_GET['limit'];
                $formdate=$_GET['formdate'];
                $todate=$_GET['todate'];
                $order_status=$_GET['order_status'];
                $payment_mode=$_GET['payment_mode'];
                $pagenum = $_GET['page'];
                $pagesize = $_GET['size'];
                $offset = ($pagenum - 1) * $pagesize;
                $stat=' ';
                $userslog="";
               $usersgroup="";
               if($order_status>0)
               {
                    $userslog.=' AND b.sales_member_id="'.$order_status.'"';
               }
               if($cateid>0)
               {
                    $userslog.=' AND a.id="'.$cateid.'"';
               }

                   if($this->session->userdata['logged_in']['access']=='17')
               {
                     $sales_team_id=array();
                     $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                     $resultsales_team=$query->result();
                     foreach ($resultsales_team as  $values) {

                         $sales_team_id[]=$values->define_saleshd_id;

                     }

                     $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                     foreach ($poin_to_member as $point) {
                           $sales_team_id[] = $point->define_saleshd_id;
                     }

                      $sales_team_id="'".implode("','", $sales_team_id)."'";
                      $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';

               }


               if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
               {
                            $sales_team_id = array($this->userid);
                       $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                       foreach ($resultsales_team as $values) {
                           $sales_team_id[] = $values->sales_member_id;
                       }


                       $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                       foreach ($poin_to_member as $point) {
                           $sales_team_id[] = $point->id;
                       }

                     $sales_team_id="'".implode("','", $sales_team_id)."'";

                     $userslog.=' AND  b.sales_member_id IN ('.$sales_team_id.')';
               }



               function refineValue($value){
                   if($value != 0 && $value != ''){
                       return floatval(round($value,2));
                   }else{
                       return 0;
                   }
       
                }

          



                $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 $userslog $usersgroup GROUP BY a.id ORDER BY a.name ASC");
                $result=$result->result();

                $i=1;
                $array=array();
                $totals = array();
                foreach ($result as  $valuessg){
                    $resultsubdata=$this->db->query("SELECT aa.username,aa.id ,aa.status  FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND a.id='".$valuessg->sales_group_id."' $userslog $usersgroup GROUP BY aa.id ORDER BY aa.name ASC");
                    $resultsubdata=$resultsubdata->result();
                    $subresult=array();
                    $old_total_count_G = 0;
                   $old_total_convert_G = 0;
                   $old_total_missed_G = 0;
                   $old_total_billing_G = 0;
                   $old_total_pending_G = 0;
                   $old_total_cancel_G = 0;

                   $today_count_G = 0;
                   $today_convert_G = 0;
                   $today_missed_G = 0;
                   $today_billing_G = 0;
                   $today_pending_G = 0;
                   $today_pending_missed_G = 0;
                   $today_cancel_G = 0;
                   $today_pending_cancel_G = 0;
                   $today_converted_cancel_G = 0;
                   $today_old_convert_G = 0;


                   $total_count_G = 0;
                   $total_convert_G = 0;
                   $total_missed_G = 0;
                   $total_pending_G = 0;
                   $total_billing_G = 0;
                   $total_cancel_G = 0;
                   $j = 0;
                   foreach ($resultsubdata as  $val)
                   {

                       $old_total_count = 0;
                       $old_total_convert = 0;
                       $old_total_billing = 0;
                       $old_total_missed  = 0;
                       $old_total_pending = 0;
                       $old_total_cancel = 0;


                       $today_count = 0;
                       $today_convert = 0;
                       $today_missed = 0;
                       $today_billing = 0;
                       $today_pending = 0;
                       $today_pending_missed = 0;
                       $today_cancel = 0;
                       $today_pending_cancel = 0;
                       $today_converted_cancel = 0;
                       $today_old_convert = 0;


                       $dateCondLess = " AND a.create_date < '".$formdate."' ";
                       $dateCondOrdersLess = " AND o.create_date < '".$formdate."' ";

                       $dateCondEquals = " AND a.create_date = '".$formdate."' ";
                       $dateCondOrdersEquals = " AND o.create_date = '".$formdate."' ";

                       if($formdate != $todate ){
                           $dateCond = " AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ";
                           $dateCondOrders = " AND o.create_date BETWEEN '".$formdate."' AND '".$todate."' ";
                       }
                       //old_total_count
                       // $resultoverall=$this->db->query("SELECT COUNT(a.id) as totalcount  FROM orders as a  WHERE a.deleteid='0' AND a.user_id='".$val->id."' $dateCondLess");
                   //old_total_count
                       // $resultoverall=$this->db->query("SELECT COUNT(a.id) as totalcount  FROM orders as a  WHERE a.deleteid='0' AND a.user_id='".$val->id."' $dateCondLess");
                          //old_total_count
                       // $resultoverall=$this->db->query("SELECT COUNT(a.id) as totalcount  FROM orders as a  WHERE a.deleteid='0' AND a.user_id='".$val->id."' $dateCondLess");
                      
              
                $resultoverall=$this->db->query("SELECT  COUNT(a.id) as totalcount  FROM orders as a   WHERE a.deleteid IN ('0','1000','2024-12-01')  AND a.order_base  IN ('0','1','-1','3','-2','-4') AND a.create_date < '".$formdate."'  AND a.user_id='".$val->id."' ");

                  
                  $resultoverall=$resultoverall->row();

                  $old_total_count=$resultoverall->totalcount;
                  $old_total_count_G += $old_total_count;

                  

                  //old_total_cancel
                  $resultoverallCancel=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.cancelled_date < '".$formdate."'  AND a.user_id = '".$val->id."' ")->row();

                  $resultoverallCancel2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.cancelled_date < '".$formdate."'  AND a.user_id = '".$val->id."' ")->row();

                  $old_total_cancel=$resultoverallCancel->totalcount + $resultoverallCancel2->totalcount;
                  $old_total_cancel_G += $old_total_cancel;

                  //old_total_convert
                  $convetedtotal=$this->db->query("SELECT COUNT(op.id) as totalcount  FROM orders_process op WHERE op.deleteid IN ('0','1000','2024-12-01') AND op.user_id='".$val->id."' AND   op.order_base = 1 AND  op.create_date < '".$formdate."'  ");
                  $convetedtotal=$convetedtotal->row();
                  $old_total_convert=$convetedtotal->totalcount;
                  $old_total_convert_G += $old_total_convert;
                  //old_total_billing
                  $old_total_billing=$convetedtotal->totalcount;
                  $old_total_billing_G += $old_total_billing;

                  //old_total_missed
                   $missedtotal = $this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.missed_date < '".$formdate."' AND a.create_date <  '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();
                  $missedtotal2 = $this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.missed_date < '".$formdate."'  AND a.create_date <  '".$formdate."'  AND a.deleteid IN ('0','1000','2024-12-01') ")->row();
               
                  $old_total_missed=$missedtotal->totalcount + $missedtotal2->totalcount;
                  $old_total_missed_G += $old_total_missed;

                  //old_total_pending
                  $billingpending=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid IN ('0','1000','2024-12-01') AND create_date <'".$formdate."'")->row();
                  $billingpending2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid IN ('0','1000','2024-12-01') AND create_date <'".$formdate."'")->row();
                  $old_total_pending=$billingpending->totalcount + $billingpending2->totalcount;
                  $old_total_pending_G += $old_total_pending;

                  ///Today's - today_count
                  $today_resultoverall=$this->db->query("SELECT COUNT(a.id) as totalcount FROM orders as a WHERE a.deleteid IN ('0','1000','2024-12-01') AND a.user_id='".$val->id."'  AND a.order_base  IN ('0','1','-1','3','-2','-4') AND a.create_date = '".$formdate."' ");
                  $today_resultoverall=$today_resultoverall->row();
                  $today_count=$today_resultoverall->totalcount ;
                  $today_count_G += $today_count;


                 

                  //today_old_convert
                  $today_oldconverttotal=$this->db->query("SELECT COUNT(o.id) as totalcount  FROM orders_process op LEFT JOIN orders_quotation o ON o.id = op.move_id WHERE o.user_id='".$val->id."' AND o.order_base > 0 AND op.order_base > 0 AND o.deleteid IN ('0','1000','2024-12-01') AND op.create_date = '".$formdate."' AND o.create_date < '".$formdate."'  ");
                  $today_oldconverttotal=$today_oldconverttotal->row();
                  $today_old_convert=$today_oldconverttotal->totalcount;
                  $today_old_convert_G += $today_old_convert;

                   //today_convert
                  $today_convetedtotal=$this->db->query("SELECT COUNT(op.id) as totalcount  FROM orders_process op WHERE op.deleteid IN ('0','1000','2024-12-01') AND  op.user_id='".$val->id."'  AND  op.create_date = '".$formdate."'  ");
                  $today_convetedtotal=$today_convetedtotal->row();
                  $today_convert=$today_convetedtotal->totalcount - $today_old_convert;
                  $today_convert_G += $today_convert;



                  $today_billing=$today_convert + $today_old_convert;
                  $today_billing_G += $today_billing;

                  
                     
                  //today_pending
                  $today_billingpending=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid IN ('0','1000','2024-12-01') AND create_date = '".$formdate."'")->row();
                  $today_billingpending2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base IN ('3','5','-4' ,'0') AND a.deleteid=0 AND create_date = '".$formdate."'")->row();
                   $today_pending=$today_billingpending->totalcount + $today_billingpending2->totalcount;
                  $today_pending_G += $today_pending;

                  //today_missed
                  $today_totalmissedQuery=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND  a.order_base = '-2' AND a.deleteid IN ('0','1000','2024-12-01') AND a.missed_date = '".$formdate."' AND a.create_date = '".$formdate."' ")->row();

                  $today_totalmissedQuery2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND  a.order_base = '-2' AND a.deleteid IN ('0','1000','2024-12-01') AND a.missed_date = '".$formdate."' AND a.create_date = '".$formdate."'  ")->row();
                  $today_missed=$today_totalmissedQuery->totalcount + $today_totalmissedQuery2->totalcount;
                  $today_missed_G += $today_missed;

                //today_cancel
                $today_totalcancelQuery=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND  a.order_base = '-1' AND a.cancelled_date = '".$formdate."' AND a.create_date ='".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01')")->row();
                $today_totalcancelQuery2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND  a.order_base = '-1' AND a.cancelled_date = '".$formdate."'  AND a.create_date ='".$formdate."'  AND a.deleteid IN ('0','1000','2024-12-01')")->row();
                $today_cancel=$today_totalcancelQuery->totalcount + $today_totalcancelQuery2->totalcount;
                $today_cancel_G += $today_cancel;


                  //today old pendings -> missing
                  $today_totaloldmissedQuery=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.create_date < '".$formdate."' AND  a.missed_date = '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();
                  $today_totaloldmissedQuery2=$this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-2' AND a.create_date < '".$formdate."' AND  a.missed_date = '".$formdate."' AND a.deleteid='0' ")->row();
                  $today_pending_missed=$today_totaloldmissedQuery->totalcount + $today_totaloldmissedQuery2->totalcount;
                  $today_pending_missed_G += $today_pending_missed;

                   //today old pendings -> cancel
                   $today_totaloldcancelQuery= $this->db->query("SELECT COUNT(id) as totalcount  FROM orders a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.create_date < '".$formdate."' AND  a.cancelled_date = '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();
                   $today_totaloldcancelQuery2= $this->db->query("SELECT COUNT(id) as totalcount  FROM orders_quotation a WHERE a.user_id='".$val->id."' AND a.order_base = '-1' AND a.create_date < '".$formdate."' AND  a.cancelled_date = '".$formdate."' AND a.deleteid IN ('0','1000','2024-12-01') ")->row();
                   $today_pending_cancel=$today_totaloldcancelQuery->totalcount + $today_totaloldcancelQuery2->totalcount;
                   $today_pending_cancel_G += $today_pending_cancel;


                     //today order convert -> cancel
                    $today_totalordercancelQuery=$this->db->query("SELECT COUNT(o.id) as totalcount  FROM orders_process op LEFT JOIN orders_quotation o ON o.id = op.move_id WHERE op.user_id='".$val->id."' AND op.order_base = -1 AND o.deleteid IN ('0','1000','2024-12-01')  AND op.cancelled_date = '".$formdate."' ");
                     $today_totalordercancelQuery=$today_totalordercancelQuery->row();
                     $today_converted_cancel=$today_totalordercancelQuery->totalcount;
                     $today_converted_cancel_G += $today_converted_cancel;

                       //Total & Overall Total column calculations 
                       $total_count= $old_total_count+$today_count;
                       $total_count_G += $total_count;

                       $total_convert= $old_total_convert+$today_convert + $today_old_convert;
                       $total_convert_G += $total_convert;

                       $total_missed= $old_total_missed+$today_missed;
                       $total_missed_G += $total_missed;

                       $total_billing= $old_total_billing+$today_billing;
                       $total_billing_G += $total_billing;

                       $total_pending= $old_total_pending - $today_old_convert - $today_missed + $today_pending - $today_converted_cancel ;
                       $total_pending_G += $total_pending;

                       $total_cancel = $today_cancel + $old_total_cancel + $today_converted_cancel + $today_pending_cancel;
                       $total_cancel_G += $total_cancel;



                       $convertion=0;
                       $missed=0;
                       $pending=0;
                       $billing=0;
                       $cancel = 0;



                       if($total_count!=0 && $total_convert!=0)
                       {
                           $convertion=round(($total_convert/$total_count)*100,1);
                       }

                       if($total_missed!=0 && $total_count!=0)
                       {
                           $missed=round($total_missed/$total_count*100,1);
                       }

                       if($total_pending!=0 && $total_count!=0)
                       {
                       $pending=round($total_pending/$total_count*100,1);
                       }

                       if($total_billing!=0 && $total_count!=0)
                       {
                       $billing=round($total_billing/$total_count*100,1);
                       }

                       if($total_cancel!=0 && $total_count!=0)
                       {
                       $cancel=round($total_cancel/$total_count*100,1);
                       }
                       $j++;
                       $subresult[] = array(
                            'no' => $j,
                           'id' => $val->id,
                           'sales_team' => $val->username,

                           'old_total_count'=>$old_total_count,
                           'old_total_convert'=>$old_total_convert,
                           'old_total_missed'=>$old_total_missed,
                           'old_total_billing'=>$old_total_billing,
                           'old_total_pending'=>$old_total_pending,
                           'old_total_cancel' => $old_total_cancel,

                           'today_count'=>$today_count,
                           'today_convert'=>$today_convert,
                           'today_missed'=>$today_missed,
                           'today_billing'=>$today_billing,
                           'today_pending'=>$today_pending,
                           'today_old_convert'=>$today_old_convert,
                           'today_pending_missed'=>$today_pending_missed,
                           'today_cancel'=>$today_cancel,
                           'today_converted_cancel'=> $today_converted_cancel,
                           'today_pending_cancel' => $today_pending_cancel,
                           


                           'total_count'=>$total_count,
                           'total_cancel'=>$total_cancel,
                           'total_convert'=>$total_convert,
                           'total_missed'=>$total_missed,
                           'total_billing'=>$total_billing,
                           'total_pending'=>$total_pending,

                           'convertion'=>$convertion,
                           'missed'=>$missed,
                           'pending'=>$pending,
                           'billing'=>$billing,
                           'cancel'=>$cancel


                       );
                       
                   }

                   //  $convertionPerc = $total_convert_G/$total_count_G * 100;
                     
                    if ($total_count_G != 0) {
                       $convertionPerc = $total_convert_G / $total_count_G * 100;
                       $missedPerc = $total_missed_G / $total_count_G * 100;
                       $pendingPerc = $total_pending_G / $total_count_G * 100;
                       $billingPerc = $total_billing_G / $total_count_G * 100;
                       $cancelPerc = $total_cancel_G / $total_count_G * 100;
                   } else {
                       $convertionPerc = 0;
                       $missedPerc = 0;
                       $pendingPerc = 0;
                       $billingPerc = 0;
                       $cancelPerc = 0;
                   }
                    $totals['old_total_count'] += $old_total_count_G;
                    $totals['old_total_convert'] += $old_total_convert_G;
                    $totals['old_total_missed'] += $old_total_missed_G;
                    $totals['old_total_billing'] += $old_total_billing_G;
                    $totals['old_total_pending'] += $old_total_pending_G;
                    $totals['old_total_cancel'] += $old_total_cancel_G;


                    $totals['today_count'] += $today_count_G;
                    $totals['today_convert'] += $today_convert_G;
                    $totals['today_missed'] += $today_missed_G;
                    $totals['today_billing'] += $today_billing_G;
                    $totals['today_pending'] += $today_pending_G;
                    $totals['today_old_convert'] += $today_old_convert_G;
                    $totals['today_pending_missed'] += $today_pending_missed_G;
                    $totals['today_cancel'] += $today_cancel_G;
                    $totals['today_converted_cancel'] += $today_converted_cancel_G;
                    $totals['today_pending_cancel'] += $today_pending_cancel_G;


                    $totals['total_count'] += $total_count_G;
                    $totals['total_convert'] += $total_convert_G;
                    $totals['total_missed'] += $total_missed_G;
                    $totals['total_billing'] += $total_billing_G;
                    $totals['total_pending'] += $total_pending_G;
                    $totals['total_cancel'] += $total_cancel_G;
                   
                    
                     $array[] = array(


                           'no' => $i,
                           'id' => $valuessg->sales_group_id,
                           'sales_group_name' => $valuessg->sales_group_name,
                           'old_total_count'=>$old_total_count_G,
                           'old_total_convert'=>$old_total_convert_G,
                           'old_total_missed'=>$old_total_missed_G,
                           'old_total_billing'=>$old_total_billing_G,
                           'old_total_pending'=>$old_total_pending_G,
                           'old_total_cancel' => $old_total_cancel_G,

                           'today_count'=>$today_count_G,
                           'today_convert'=>$today_convert_G,
                           'today_missed'=>$today_missed_G,
                           'today_billing'=>$today_billing_G,
                           'today_pending'=>$today_pending_G,
                           'today_old_convert'=>$today_old_convert_G,
                           'today_pending_missed'=>$today_pending_missed_G,
                           'today_cancel' => $today_cancel_G,
                           'today_converted_cancel' => $today_converted_cancel_G,
                           'today_pending_cancel' => $today_pending_cancel_G,

                           'total_count'=>$total_count_G,
                           'total_cancel'=>$total_cancel_G,
                           'total_convert'=>$total_convert_G,
                           'total_missed'=>$total_missed_G,
                           'total_billing'=>$total_billing_G,
                           'total_pending'=>$total_pending_G,

                           'convertion'=> refineValue($convertionPerc),
                           'missed'=>refineValue($missedPerc),
                           'pending'=>refineValue($pendingPerc),
                           'billing'=>refineValue($billingPerc),
                           'cancel'=>refineValue($cancelPerc),
                           'subarray'=>$subresult

                       );


       $i++;

    }
    
    $totals['convertion'] = $totals['total_convert'] ? refineValue(($totals['total_convert']/$totals['total_count']) * 100) : 0;
    $totals['missed'] =  $totals['total_missed'] ? refineValue(($totals['total_missed']/$totals['total_count']) * 100) : 0;
    $totals['pending'] =  $totals['total_pending'] ? refineValue(($totals['total_pending']/$totals['total_count']) * 100) : 0;
    $totals['cancel'] =  $totals['total_cancel'] ? refineValue(($totals['total_cancel']/$totals['total_count']) * 100) : 0;
    $totals['billing'] =  $totals['total_billing'] ? refineValue(($totals['total_billing']/$totals['total_count']) * 100) : 0;
   //  $totals['missed'] = $missedG;
   //  $totals['pending'] = $pendingG;
   //  $totals['billing'] = $billingG;
   //  echo "<pre>";echo json_encode($array);
   //  exit;
    $arrayMain = [];
    $arrayMain['values'] = $array;
    $arrayMain['totals'] = $totals;
           echo json_encode($arrayMain);

    }
    
    
    
    
    
 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     public function fetch_data_customer_balance_report_export()
    {

                    
             $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");    

$this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

 $testMode = (isset($_GET['test']) && $_GET['test']);
                      $testMode = true;
                     $cateid=$_GET['cate_id'];
                     $customer_id=$_GET['customer_id'];
                     //$customer_id=31804;
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     $sales_group=$_GET['sales_group'];
                     
                    
                    
                     $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                     
                     $checked1="checked";
  $checked2="checked";
   $checked3="checked";
    $checked4="checked";
     $checked5="checked";
      $checked6="checked";
       $checked7="checked";
        $checked8="checked";
         $checked9="checked";
         $checked10="checked";
          $checked11="checked";
           $checked12="checked";
            $checked13="checked";
            $checked120="checked";
 $checked14="checked";
 $checkdata_1_hide="0";
 $checkdata_2_hide="0";
 $checkdata_3_hide="0";
 $checkdata_4_hide="0";
 $checkdata_5_hide="0";
 $checkdata_6_hide="0";
 $checkdata_7_hide="0";
 $checkdata_8_hide="0";
 $checkdata_9_hide="0";
 $checkdata_10_hide="0";
  $checkdata_14_hide="0";
 $checkdata_11_hide="0";
 $checkdata_12_hide="0";
 $checkdata_13_hide="0";
 $checkdata_120_hide="style='display:none'";
if(count($table_customize)>0)
{
   
   
   foreach($table_customize as $vl)
   {
       
       $label_id=$vl->label_id;
       $status=$vl->status;
       
       
       if($label_id==1)
       {
           if($status==0)
           {
               $checkdata_1_hide="1";
               $checked1="";
           }
       }
       
       if($label_id==2)
       {
           if($status==0)
           {
               $checkdata_2_hide="1";
                $checked2="";
           }
       }
       
       if($label_id==3)
       {
           if($status==0)
           {
               $checkdata_3_hide="1";
                $checked3="";
           }
       }
       
       if($label_id==4)
       {
           if($status==0)
           {
               $checkdata_4_hide="1";
                $checked4="";
           }
       }
       
       if($label_id==5)
       {
           if($status==0)
           {
               $checkdata_5_hide="1";
                $checked5="";
           }
       }
       
       if($label_id==6)
       {
           if($status==0)
           {
               $checkdata_6_hide="1";
                $checked6="";
           }
       }
       
       if($label_id==7)
       {
           if($status==0)
           {
               $checkdata_7_hide="1";
                $checked7="";
           }
       }
       
       if($label_id==8)
       {
           if($status==0)
           {
               $checkdata_8_hide="1";
                $checked8="";
           }
       }
       
       if($label_id==9)
       {
           if($status==0)
           {
               $checkdata_9_hide="1";
                $checked9="";
           }
       }
       
       if($label_id==10)
       {
           if($status==0)
           {
               $checkdata_10_hide="1";
                $checked10="";
           }
       }
       
       if($label_id==11)
       {
           if($status==0)
           {
               $checkdata_11_hide="1";
                $checked11="";
           }
       }
       
       if($label_id==12)
       {
           if($status==0)
           {
               $checkdata_12_hide="1";
                $checked12="";
           }
       }
       
       if($label_id==13)
       {
           if($status==0)
           {
               $checkdata_13_hide="1";
                $checked13="";
           }
       }
       
      
       
       if($label_id==14)
       {
           if($status==0)
           {
                $checkdata_14_hide="1";
                $checked14="";
           }
       }
       
       
        if($label_id==120)
       {
           if($status==0)
           {
                $checkdata_120_hide="";
                $checked120="unchecked";
           }
       }
       
       
   }
   
    
}
                     
                     
                     
                     
                     
                     
                     
                 
                    
                    $stat=' ';
                    $userslog="";
                    $usersgroup="";

                      if($cateid=='ALL')
                    {
                         $userslog.=' AND a.cnn_status="0"';
                    }



                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                    
                    
                    if($sales_group!='ALL')
                    {
                         $usersgroup=' AND ss.id="'.$sales_group.'"';       
                    } 
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';       
                                 
                    }
                     
                    
                  
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                   
                    
                     
                     
                     
                     $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE    a.deleteid=0   AND a.party_type='1' AND b.deleteid=0   $stat $userslog $usersgroup $searchsql  GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                   
                   
                   $i=1;
                     $array=array();
                     
                    foreach ($result as  $valuessg) 
                     {
                       
                                  
                                     // date removed 
                                     $salesperson=array();
                                         $invertsTotal = [];
                                     
                                      $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                    
                                     $sheettotal_sales_full=0;
                                     $totabetbalance=0;
                                    
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0  AND aa.deleteid=0  $userslog GROUP BY aa.id ORDER BY aa.username ASC");

                                     // echo "</br>"; 
                                     // echo "Query 2 - " . date("Y-m-d H:i:s"); 
                                     // echo "</br>"; 
                                     // echo "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC"; 
                
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                      $sl_totals = [];
                                     
                       
                                       
                                      // date removed 
                                     $resultsubdata=$this->db->query("SELECT b.mark_vendor_id,a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."'   $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                    
                                     // echo "</br>"; 
                                     // echo "Query 3 - " . date("Y-m-d H:i:s"); 
                                     // echo "</br>";
                                     // echo "SELECT b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,SUM(a.debits) as debits,SUM(a.credits) as credits,b.opening_balance,b.company_name,b.payment_status  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id   WHERE    a.deleteid=0 AND a.party_type='1'  AND b.sales_team_id='".$valueget->sales_team_id."'  $stat $userslog $searchsql2 GROUP BY a.customer_id ORDER BY b.company_name ASC"; 
                                    
                                     $k=1;
                                     $balanceset_total_sales=0;
                                     $sheettotal_sales=0;


                                     foreach ($resultsubdata as  $value) 
                                     {
                                       
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();

                                                               // echo "</br>"; 
                                                               // echo "Query 4 - " . date("Y-m-d H:i:s"); 
                                                               // echo "</br>";
                                                               // echo "SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'"; 
                                                              
                                                                                        
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                                               
                                                               
                                                               
                                                                 
                                                                $tcs_status=0;
                                                                $customers_data = $this->Main_model->where_names('customers', 'id', $value->id);
                                                                foreach ($customers_data as $csvalv) {
                                                                    $tcs_status = $csvalv->tcs_status;
                                                                   
                                                                }

                                                               
                                                               
                                                               
                                                               
                                                                 $discount1=0;
                                                                    if($testMode){

                                                                      $resultsub_production=$this->db->query("SELECT 
                                   b.total_picked_amount AS totalvalue,
                                   a.rate*a.qty AS amount,
                                   os.bill_total AS bill_total,
                                   a.picked_status,a.return_status,
                                   b.current_packed_balence AS picked_status
                                   FROM order_product_list_process AS a
                                   JOIN order_delivery_order_status AS b ON a.order_id = b.order_id
                                   JOIN orders_process AS os ON a.order_id = os.id
                                   JOIN all_ledgers al ON al.order_id = b.order_id
                                   
                                   WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'  AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid IN('0','88')  AND b.return_status IN ('0','2') 
                                        AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$todate'  AND (b.assign_status_12_date > '$todate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$todate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    GROUP BY 
                                        b.id 
                                    ORDER BY 
                                        a.id DESC");
                                                                
                                                               }else{
                                                                $resultsub_production=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason != 'Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $discount1=0;
                                                                
                                                                 $resultsub_production=$resultsub_production->result();


                                                                 // echo "</br>"; 
                                                                 // echo "Query 5 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 
                                                                
  
                                                                 $production=0;
                                                                 $production_vass=0;
                                                                 $return_amount=0;
                                                                 $return_amount_not_packed=0;
                                                                 $return_amount_packed=0;
                                                                 $return_amount_not_packed_base=0;
                                                                 $return_amount_packed_base=0;
                                                                 foreach($resultsub_production as $val)
                                                                 { 
                                                                               
                                                                              
                                                                        $return_amount=$val->return_amount;
                                                                        $gst=$return_amount*18/100;
                                                                        $return_amount+=round($return_amount+$gst,2);


                                                                        if($val->totalvalue>0)
                                                                        {
                                                                           $totalvalue=$val->totalvalue;
                                                                           //$totalvalue=$val->bill_total;
                                                                        }
                                                                        else
                                                                        {
                                                                            $totalvalue=$val->bill_total;
                                                                        }
                                                                    
                                                                        
                                                                        $production_vass+=round($val->picked_status,2);


                                                                        // if($val->picked_status==0 && $val->return_status==1)
                                                                        // {

                                                                        //     $return_amount_not_packed=$val->amount;
                                                                        //     $gstres=$return_amount_not_packed*18/100;
                                                                        //     $return_amount_not_packed_base=round($return_amount_not_packed+$gstres,2);
                                                                        //     $return_amount_not_packed+=round($return_amount_not_packed+$gstres,2);
                                                                                  
                                                                        // }


                                                                        //$production+=round($totalvalue-$return_amount_not_packed_base);
                                                                      
                                                                        $production+=round($totalvalue);
                                                     
                                                                 }
                                                                 
                                                               
                                                                  
                                                                  
                                                                 $discount2=0;

                                                                 //Sheet in Factory
 // assign_status_0_date - Order Created Date
// assign_status_12_date - Load Completed / Dispatch Loaded Date
// assign_status_3_date - Reconcile Date
//delivery_status - 1 means Client Scope Order
//delivery_status - 2 means Own Scope Order
                                                                  if($testMode){
                                                                      $resultsub=$this->db->query("SELECT 
                                                                      b.total_picked_amount AS totalvalue,
                                                                      b.total_picked_amount_confirmed AS totalvaluepick
                                                                FROM  order_product_list_process AS a 
                                    JOIN 
                                        order_delivery_order_status AS b ON a.order_id = b.order_id 
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'  AND b.order_base > 0
                                         AND b.reason != 'Return To Re-sale' AND b.return_status IN ('0','2')
                                                                      AND b.deleteid = 0  
                                                                      AND (
                                                                           CASE
                                                                              WHEN (b.delivery_status = 2 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$todate' OR b.assign_status_2_date IS NULL)) OR (b.delivery_status = 1 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)) THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  
                                                                  GROUP BY 
                                                                      b.id 
                                                                  ORDER BY 
                                                                      a.id DESC
                                                                  ");
                                                               
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();
                                                                  // print_r($resultsub);
                                                                  // exit;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 6 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                              if($val->totalvaluepick>0)
                                                                               {
                                                                                  $totalvalue=$val->totalvaluepick;
                                                                               }
                                                                               else
                                                                               {
                                                                                $totalvalue=$val->totalvalue;
                                                                               }
                                                                  
                                                                   $total+=round($totalvalue,2);


                                                                  
                                                     
                                                                 }
                                                                 
                                                                 
                                                               
                                                                           
                                                                  
                                                                 
                                                                     if($testMode){  

                                                                        
                                                                 $resultsub_inproduction=$this->db->query(
                                                                "SELECT 
                                                                    SUM(c.qty*c.rate) as bill_total,
                                                                    SUM(c.return_qty_pick*c.rate) as return_picked_amount,
                                                                     SUM(c.return_qty_pick) as return_picked_qty,
                                                                     SUM(c.return_delivered_qty) as return_delivered_qty,
                                                                     SUM(c.return_delivered_qty*c.rate) as return_delivered_amount_fix,
                                                                     SUM(c.qty) as bill_qty,b.return_delivered_amount as return_delivered_amount

                                                                      FROM  order_sales_return_complaints as b JOIN sales_return_products as c ON b.id=c.c_id  WHERE b.deleteid=0 AND b.customer='".$value->id."' AND  b.order_base=2  AND date(b.create_date) <= '".$todate."'  AND b.remarks NOT IN ('Driver Return Trip Assigned','Driver Delivered The Order')  ORDER BY b.id DESC");



                                                               }else{
                                                                  $resultsub_inproduction=$this->db->query(
                                                                "SELECT 
                                                                    SUM(c.qty*c.rate) as bill_total,SUM(c.return_qty_pick*c.rate) as return_picked_amount  FROM  order_sales_return_complaints as b JOIN sales_return_products as c ON b.id=c.c_id  WHERE b.deleteid=0 AND b.customer='".$value->id."' AND  b.order_base=2  AND date(b.create_date) <= '".$todate."'   ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub_inproduction=$resultsub_inproduction->result();
                                                                 $inproduction_total_return=0;

                                                                 // echo "</br>"; 
                                                                 // echo "Query 7 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=2 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 foreach($resultsub_inproduction as $vals)
                                                                 { 
                                                                   
                                                                  
                                                                       
                                                            $return_delivered_amount=$vals->return_delivered_amount;
                                                            $return_amount_val=$vals->bill_total;
                                                            $gstreturn=$return_amount_val*18/100;
                                                            $inproduction_total_return=round($return_amount_val+$gstreturn);
                                                            $return_return_picked_amount=$vals->return_picked_amount;
                                                            $gstreturn_picked=$return_return_picked_amount*18/100;
                                                            $inproduction_total_return_picked=round($return_return_picked_amount+$gstreturn_picked);


                                                            if($return_delivered_amount<=0)
                                                            {
                                                                $return_delivered_amount_fix=$vals->return_delivered_amount_fix;
                                                                if($return_delivered_amount_fix>0)
                                                                {
                                                                       $gstreturn_next=$return_delivered_amount_fix*18/100;
                                                                       $return_delivered_amount=round($return_delivered_amount_fix+$gstreturn_next);

                                                                }

                                                            }
                            


                            $inproduction_total_return=round($inproduction_total_return-$return_delivered_amount-$inproduction_total_return_picked);


                                                                     if($inproduction_total_return<=2)
                                                                     {
                                                                        $inproduction_total_return=0;
                                                                     }
                                                                       



                                                     
                                                                 }
                                                                 
                                                                 
                                                                 //$production=$inproduction_total_return+$production;


                                                                  if($testMode){  
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0  AND b.create_date <= '".$todate."' ORDER BY b.id DESC");
                                                               }else{
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0   ORDER BY b.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 8 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."'  AND b.order_base=1 AND b.driver_delivery_status=0 ORDER BY b.id DESC"; 

                                                                 $total_return=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                  
                                                                             $total_return=round($val->bill_total);
                                                     
                                                                 }
                            
                                                               
                                                               
                                                               
                                                                  $discount3=0;
                                                                  if($testMode){ 
                                                                 $resultsub=$this->db->query("SELECT 
                                        b.total_picked_amount AS totalvalue,
                                        b.total_picked_amount_confirmed AS totalvaluepick
                                        FROM
                                   order_product_list_process AS a 
                                    JOIN 
                                        order_delivery_order_status AS b ON a.order_id = b.order_id
                                    WHERE 
                                        a.deleteid = 0 
                                        AND b.customer_id = '".$value->id."'
                                        AND b.order_base > 0
                                        AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0  AND b.return_status IN ('0','2')
                                        AND (
                                             CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$todate' AND ((b.trip_end_date > '$todate' OR b.trip_end_date IS NULL) AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$todate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    GROUP BY 
                                        b.id 
                                    ORDER BY 
                                        a.id DESC");
                                                               }else{
                                                                  $resultsub=$this->db->query("SELECT SUM(a.amount) as totalvalue,b.tcsamount,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2') AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC");
                                                               }
                                                                 $resultsub=$resultsub->result();

                                                                 // echo "</br>"; 
                                                                 // echo "Query 9 - " . date("Y-m-d H:i:s"); 
                                                                 // echo "</br>";
                                                                 // echo "SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC"; 

                                                                 $total_transit=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                   
                                                                           if($val->totalvaluepick>0)
                                                                               {
                                                                                  $totalvalue=$val->totalvaluepick;
                                                                               }
                                                                               else
                                                                               {
                                                                                $totalvalue=$val->totalvalue;
                                                                               }
                                                                           $total_transit+=round($totalvalue);
                                                     
                                                                }
                                                                
                                                                
                                                                
                                                               
                                                                  
                                                                  

                                             
                                            $total_credit_balance=0; 
                                            $total_debit_balance=0;
                                            $total_credit_balance_new=0;
                                            $total_debit_balance_new=0;
                                            $opening_balance=0;
                                            $resultDRss=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND  a.cnn_status = 0  AND a.customer_id='".$value->id."'");
                                            $resultDRss=$resultDRss->result();
                                             $old_date_opening_balance=$resultDRss[0]->credits-$resultDRss[0]->debits; 



                                            if($value->mark_vendor_id>0)
                                             {



            $resultDRsscurrentdate_s=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.opening_balance_status='0'  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$value->mark_vendor_id."','".$value->id."')");
                                               $resultDRsscurrentdate_s=$resultDRsscurrentdate_s->result();


                    // $op_vender_credit_s= $resultDRss[0]->credits+$resultDRsscurrentdate_s[0]->credits;
                    // $op_vender_debit_s= $resultDRss[0]->debits+$resultDRsscurrentdate_s[0]->debits;
                    // $old_date_opening_balance=$op_vender_credit_s-$op_vender_debit_s;


 $old_date_opening_balance=$resultDRsscurrentdate_s[0]->credits-$resultDRsscurrentdate_s[0]->debits; 


                                             }

                                             // echo "</br>"; 
                                             // echo "Query 10 - " . date("Y-m-d H:i:s"); 
                                             // echo "</br>";
                                             // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$formdate."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 

                       
                                            if($old_date_opening_balance>0)
                                            {
                                                $total_credit_balance=$old_date_opening_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance=$old_date_opening_balance;
                                            }
                                            
                                             
                                               
                                                                
                                             
                                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND   a.cnn_status = 0  AND a.customer_id='".$value->id."'");
                                            $resultDRsscurrentdate=$resultDRsscurrentdate->result(); 

                                            // echo "</br>"; 
                                            // echo "Query 11 - " . date("Y-m-d H:i:s"); 
                                            // echo "</br>";
                                            // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'   AND a.customer_id='".$value->id."'"; 
                                            

                                            $opeinging_balance=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;

                                            if($value->mark_vendor_id>0)
                                             {



                    $resultDRsscurrentdate_vendor=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1' AND a.cnn_status = 0  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$value->mark_vendor_id."','".$value->id."')");
                    $resultDRsscurrentdate_vendor=$resultDRsscurrentdate_vendor->result();

                    // $op_vender_credit= $resultDRsscurrentdate[0]->credits+$resultDRsscurrentdate_vendor[0]->credits;
                    // $op_vender_debit= $resultDRsscurrentdate[0]->debits+$resultDRsscurrentdate_vendor[0]->debits;
                    // $opeinging_balance=$op_vender_credit-$op_vender_debit;

                    $opeinging_balance=$resultDRsscurrentdate_vendor[0]->credits-$resultDRsscurrentdate_vendor[0]->debits; 



                                             }

                                             if($opeinging_balance>0)
                                            {
                                                $total_credit_balance_new=$opeinging_balance;
                                            }
                                            else
                                            {
                                                $total_debit_balance_new=$opeinging_balance;
                                            }


                                             //  $productionvalue=$production;
                                             // if($inproduction_total_return>0)
                                             // {
                                             //    if($production_vass>0)
                                             //    {
                                             //        $production=$production-$inproduction_total_return;
                                             //    }
                                             //    else
                                             //    {
                                             //        $productionvalue=$production;
                                             //    }
                                                
                                             // }

                                             // if($production<=0)
                                             // {
                                             //    $production=$productionvalue;
                                             // }


                                             
                                            $totalvaluecrited= round($total_credit_balance+$total_credit_balance_new,2);
                                            $totalvaluedebit= round($total_debit_balance+$total_debit_balance_new,2);



                                            
                                            $totalvaluecrited=abs($totalvaluecrited);
                                            $totalvaluedebit=abs($totalvaluedebit);
                                              
                                            $opening_balance_val=$totalvaluecrited-$totalvaluedebit;
                                            
                                    
                                    
                                    
                                            $payment_status="";



                                           // $opening_balance_cr=$totalvaluecrited;
                                           // $opening_balance_dr=$totalvaluedebit;

                                                                if($opening_balance_val>0)
                                                                 {
                                                                   $opening_balance_cr=abs($opening_balance_val);
                                                                   $opening_balance_dr=0;
                                                                 }
                                                                 else
                                                                 {


                                                                   $opening_balance_dr=abs($opening_balance_val);
                                                                   $opening_balance_cr=0;

                                                                 }



                                            $opening_balance=abs($opening_balance_val);
                                            
                                            
                                            if($opening_balance_val>0)
                                            {
                                                $payment_status='CR';
                                                
                                            }
                                            else
                                            {
                                                $payment_status='DR';  
                                               
                                            }
                               
                               
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                     
                                     
                                     
                                      
                         
                                         
                                         
                                         
                                          
                                         
                                          
                                        
                                          
                                          $sheet_in_factory=round($total+$total_return,2);
                                          
                                          
                                          
                                          
                                         // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'");
                                         $resultDR=$resultDR->result();

                                         // echo "</br>"; 
                                         // echo "Query 12 - " . date("Y-m-d H:i:s"); 
                                         // echo "</br>";
                                         // echo "SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0'  AND a.customer_id='".$value->id."'"; 

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$vald->debits;
                                             $trnCr=$vald->credits;
                                         }



if($value->mark_vendor_id>0)
{

                                           // date removed 
                                         $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$value->mark_vendor_id."'");
                                         $resultDR=$resultDR->result();

                                      
                                         foreach($resultDR as $vald)
                                         { 
                                             $trnDr=$trnDr+$vald->debits;
                                             $trnCr=$trnCr+$vald->credits;
                                         }
                                         
}   
                                         
           
                                      
                                         
                                          $creditsset=0;
                                          $debitsset=0;
                                          $Toatbalance=0;
                                          $closeing=0;
                                          $Total_trn_dr=0;
                                          $Total_trn_cr=0;
                                          $payment_status_bu_closeing="";
                                          
                                          $TotalDr=$opening_balance_dr;
                                          $TotalCr=$opening_balance_cr;
                                          $totbalance=  $trnCr-$trnDr;
                                          
                                          $Total_trn_dr=$opening_balance_dr+$trnDr;
                                          $Total_trn_cr=$opening_balance_cr+$trnCr;
                                         
                                        
  
                                          

                                          
                                          if($Total_trn_dr<$Total_trn_cr)
                                          {
                                              $creditsset=$Total_trn_dr-$Total_trn_cr;
                                              $creditsset=abs($creditsset);
                                              $payment_status_bu_closeing='CR';
                                              $closeing= $creditsset;
                                              //$closeing= $creditsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                             
                                              
                                          }
                                          else
                                          {
                                              
                                              $debitsset=$Total_trn_cr-$Total_trn_dr; 
                                              $debitsset_val=$Total_trn_cr-$Total_trn_dr;
                                              $debitsset=abs($debitsset);
                                              $payment_status_bu_closeing='DR';
                                              if($debitsset==0)
                                              {
                                                  $payment_status_bu_closeing='CR';
                                              }
                                              else
                                              {
                                                  $payment_status_bu_closeing='DR';
                                              }
                                              //$closeing= $debitsset-$inproduction_total_return;
                                              //$closeing=str_replace('-', '', $closeing);
                                              $closeing= $debitsset;


                                              
                                          }
                                          
                                          
                                          

                                          
                                          

                                         
                                         if($payment_status_bu_closeing=='DR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit;
                                             $Totaltranspotval= $closeing-$Totaltranspot;
                                             $Totaltranspotval= $Totaltranspotval-$inproduction_total_return;

                                             //$Totaltranspotval=abs($Totaltranspotval);
                                             if($closeing<$Totaltranspot)
                                             {
                                                 $getstatus=1;
                                                 if($closeing>0)
                                                 {
                                                      $getstatus=1;
                                                      //$Totaltranspotval=$closeing;
                                                 }
                                                 
                                             }
                                             else
                                             {
                                                   $getstatus=0;
                                                 
                                             }
                                             
                                             
                                         }
                                         
                                         
                                         
                                          if($payment_status_bu_closeing=='CR')
                                         {
                                             
                                             $Totaltranspot= $production+$sheet_in_factory+$total_transit+$inproduction_total_return;
                                             //$Totaltranspotval= $closeing-$Totaltranspot;
                                             if($closeing>0)
                                             {

                                                $Totaltranspot=$closeing+$Totaltranspot;
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                             else
                                             {
                                                $Totaltranspotval= '-'.$Totaltranspot;
                                                
                                             }
                                            
                                            $getstatus=1;
                                             
                                         }
                                         
                                         
                                         
                                          
                                         
                                         $debitssettotal+=$debitsset;
                                         $creditssettotal+=$creditsset;
                                         $closeingtotal+=$closeing;
                                         
                                         $productiontotal+=$production;
                                         $productiontotal_return+=$inproduction_total_return;

                                         
                                         $sheet_in_factory_val+=round($total+$total_return,2);
                                         $transit+=round($total_transit,2);
                                         
                                         $Tran_Dr+=round($trnDr,2);
                                         $Tran_Cr+=round($trnCr,2);
                                         
                                         
                                         $Tot_Dr+=round($Total_trn_dr,2);
                                         $Tot_Cr+=round($Total_trn_cr,2);
                                         
                                         
                                         $Open_Dr+=round($opening_balance_dr,2);
                                         $Open_Cr+=round($opening_balance_cr,2);
                                         $Open_Bal+=round($opening_balance,2);
                                         
                                         
                                         if($getstatus==0)
                                         { 
                                             
                                            $totalcheck=round($production+$sheet_in_factory+$total_transit+$Totaltranspotval+$inproduction_total_return,2);
                                          
                                         }
                                         else
                                         {
                                            $totalcheck=round($production+$closeing+$sheet_in_factory+$total_transit+$inproduction_total_return,2);
                                         
                                         }
                                      
                                      
                                      
                                     
                                          
                                          if($totalcheck>0)
                                          {
                                              $hidestatus="";
                                          }
                                          else
                                          {
                                              if($checked120=='checked')
                                              {
                                                   $hidestatus="shownullvalue getview";
                                              }
                                              else
                                              {
                                                   $hidestatus="getview";
                                              }
                                             
                                          }
                                          
                                          
                                          
                                          if($Totaltranspotval>5)
                                          {
                                              
                                              //$Totaltranspotval=round($Totaltranspotval,2);
                                          }
                                          else
                                          {
                                              //$Totaltranspotval='';
                                          }


                                          $sheet=0;
                                          $st=$production+$sheet_in_factory+$inproduction_total_return+$total_transit;
                                          $totalcloseingbalance=$debitsset-$creditsset;
                                          $netbalance_total_set=$totalcloseingbalance-$st;
                                           if($getstatus==0)
                                           {  

                                               if($netbalance_total_set>0)
                                               {
                                                   $balanceset_total+=$netbalance_total_set;
                                                   $balanceset_total_sales+=$netbalance_total_set;
                                                    $balancetoatal+=$netbalance_total_set;
                                                   $sl_totals['balance'] += round($Totaltranspotval, 2);

                                               }

                                           }

                                           if($netbalance_total_set>0)
                                           {
                                                  $sheet=$st;
                                           }
                                           else
                                           {
                                                  $sheet=$debitsset;
                                           }




                                          
                                           
                                          $sheettotal_sales+=round($sheet,2);
                                          $sheettotal_sales_full+=round($sheet,2);
                                          $totabetbalance+=$debitsset-$sheet;


 if(!($totalcheck>0))
                                          {
                                              if($checked120 == 'unchecked')
                                              {
                                                     $subresult[] = array(
                                            
                                            
                                            'no' => $k, 
                                            'id' => $value->id, 
                                            'l_id' => $value->l_id,
                                            'payment_status' => $payment_status, 
                                            'route_name'=>$route_name,
                                            'sales_team_id' => $value->sales_team_id, 
                                            'customername' => $value->company_name, 
                                            'customerphone' => $value->phone,
                                            'opening_balance_dr' => $opening_balance_dr,
                                            'opening_balance_cr' => $opening_balance_cr,
                                            'opening_balance' => round($opening_balance),
                                            'trnDr' => round($trnDr,2),
                                            'trnCr' => round($trnCr,2),
                                            'trnDrtotal' => round($Total_trn_dr,2),
                                            'trnCrtotal' => round($Total_trn_cr,2),
                                            'debit' => round($debitsset,2),
                                            'credit' => round($creditsset,2),
                                            'closeing' => round($closeing,2),
                                            'md_verification' => $value->md_verification,
                                            'excess_status' => intval($value->excess_status),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'production' => round($production,2),
                                            'inproduction_total_return'=>round($inproduction_total_return,2),
                                            'sheet_in_factory' => $sheet_in_factory,
                                            'sheet' => $sheet,
                                            'transit'=>round($total_transit,2),
                                            'getstatus'=>$getstatus,
                                            'balance' => round($Totaltranspotval,2),
                                            'feedback_details' => $value->feedback_details, 
                                            'phone' => $value->phone,
                                            'hidestatus' => $hidestatus
                
                                        );
                                        
                                              }
                                             
                                          }else{
                                               $subresult[] = array(
                                            
                                            
                                            'no' => $k, 
                                            'id' => $value->id, 
                                            'l_id' => $value->l_id,
                                            'payment_status' => $payment_status, 
                                            'route_name'=>$route_name,
                                            'sales_team_id' => $value->sales_team_id, 
                                            'customername' => $value->company_name, 
                                            'customerphone' => $value->phone,
                                            'opening_balance_dr' => $opening_balance_dr,
                                            'opening_balance_cr' => $opening_balance_cr,
                                            'opening_balance' => round($opening_balance),
                                            'trnDr' => round($trnDr,2),
                                            'trnCr' => round($trnCr,2),
                                            'trnDrtotal' => round($Total_trn_dr,2),
                                            'trnCrtotal' => round($Total_trn_cr,2),
                                            'debit' => round($debitsset,2),
                                            'credit' => round($creditsset,2),
                                            'closeing' => round($closeing,2),
                                            'md_verification' => $value->md_verification,
                                            'excess_status' => intval($value->excess_status),
                                            'payment_status_bu_closeing' => $payment_status_bu_closeing,
                                            'production' => round($production,2),
                                            'inproduction_total_return'=>round($inproduction_total_return,2),
                                            'sheet_in_factory' => $sheet_in_factory,
                                            'sheet' => $sheet,
                                            'transit'=>round($total_transit,2),
                                            'getstatus'=>$getstatus,
                                            'balance' => round($Totaltranspotval,2),
                                            'feedback_details' => $value->feedback_details, 
                                            'phone' => $value->phone,
                                            'hidestatus' => $hidestatus
                
                                        );
                                          }
                                          
                                          

 
                                        
                                       $sl_totals['opening_balance_dr']            += $opening_balance_dr;
                                            $sl_totals['opening_balance_cr']            += $opening_balance_cr;
                                            $sl_totals['opening_balance']               += round($opening_balance);
                                            $sl_totals['trnDr']                         += round($trnDr, 2);
                                            $sl_totals['trnCr']                         += round($trnCr, 2);
                                            $sl_totals['trnDrtotal']                    += round($Total_trn_dr, 2);
                                            $sl_totals['trnCrtotal']                    += round($Total_trn_cr, 2);
                                            $sl_totals['debit']                         += round($debitsset, 2);
                                            $sl_totals['credit']                        += round($creditsset, 2);
                                            $sl_totals['closeing']                      += round($debitsset - $creditsset , 2);
                                            $sl_totals['payment_status_bu_closeing']    += $payment_status_bu_closeing;
                                            $sl_totals['production']                    += round($production, 2);
                                            $sl_totals['inproduction_total_return']     += round($inproduction_total_return, 2);
                                            $sl_totals['sheet_in_factory']              += $sheet_in_factory;
                                            $sl_totals['sheet']                         += $sheet;
                                            $sl_totals['transit']                       += round($total_transit, 2);


                                             if($checked120 == 'checked' && $hidestatus != ''){
// exit;
                                  $sl_totals['opening_balance_dr'] = $sl_totals['opening_balance_dr'] -  $opening_balance_dr;  
                                  $sl_totals['opening_balance_cr'] = $sl_totals['opening_balance_cr'] - $opening_balance_cr;   
                                  $sl_totals['opening_balance'] = $sl_totals['opening_balance']     - round($opening_balance);    
                                  $sl_totals['trnDr'] = $sl_totals['trnDr']     - round($trnDr, 2);     
                                  $sl_totals['trnCr'] = $sl_totals['trnCr']     -  round($trnCr, 2);     
                                  $sl_totals['trnDrtotal']  = $sl_totals['trnDrtotal']     - round($Total_trn_dr, 2);     
                                  $sl_totals['trnCrtotal'] = $sl_totals['trnCrtotal']     - round($Total_trn_cr, 2);    



                                              $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                            $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                            $invertsTotal['opening_balance']               += round($opening_balance);
                                            $invertsTotal['trnDr']                         += round($trnDr, 2);
                                            $invertsTotal['trnCr']                         += round($trnCr, 2);
                                            $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                            $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                            }
                                        



                                        
                                      $k++; 
                                     
                                     }
                                     
                                     
                                      

                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                            'sl_totals' => $sl_totals,
                                             'subarray'=>$subresult,
                                        );
                                      
                                      
                                     }
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                     $totalcloseing= round($debitssettotal-$creditssettotal,2);
                                     $totalcloseing=abs($totalcloseing);



                                     
                                     
                                     $totabetbalance=abs($totabetbalance);
                                      if($checked120 == 'checked'){
// exit;     
                                          // $invertsTotal['opening_balance_dr']            += $opening_balance_dr;
                                          //   $invertsTotal['opening_balance_cr']            += $opening_balance_cr;
                                          //   $invertsTotal['opening_balance']               += round($opening_balance);
                                          //   $invertsTotal['trnDr']                         += round($trnDr, 2);
                                          //   $invertsTotal['trnCr']                         += round($trnCr, 2);
                                          //   $invertsTotal['trnDrtotal']                    += round($Total_trn_dr, 2);
                                          //   $invertsTotal['trnCrtotal']                    += round($Total_trn_cr, 2); 
                                  $Open_Dr =  $Open_Dr -   $invertsTotal['opening_balance_dr'] ;  
                                  $Open_Cr =   $Open_Cr  -  $invertsTotal['opening_balance_cr'];   
                                  $Open_Bal =  $Open_Bal       - $invertsTotal['opening_balance'];    
                                  $Tran_Dr =   $Tran_Dr      - $invertsTotal['trnDr']   ;     
                                  $Tran_Cr =   $Tran_Cr     -  $invertsTotal['trnCr'] ;     
                                  $Tot_Dr  =   $Tot_Dr     - $invertsTotal['trnDrtotal'];     
                                  $Tot_Cr =    $Tot_Cr    -  $invertsTotal['trnCrtotal'];     
                                            }
                                     
                                    $totals['debit'] += round($debitssettotal,2);
                                    $totals['credit'] += round($creditssettotal,2);
                                    $totals['closeing'] +=  round($totalcloseing,2);
                                    $totals['production'] +=round($productiontotal,2);
                                    $totals[ 'production_return']+=round($productiontotal_return,2);
                                    $totals['sheet_in_factory']+=round($sheet_in_factory_val,2);
                                    $totals['transit']+=round($transit,2);
                                    $totals['net_balance']+=round($totabetbalance,2);
                                    $totals['sheet_total']+=round($sheettotal_sales_full,2);
                                    $totals['Tran_Dr']+=round($Tran_Dr,2);
                                    $totals['Tran_Cr']+=round($Tran_Cr,2);
                                    $totals['Tot_Dr']+=round($Tot_Dr,2);
                                    $totals['Tot_Cr']+=round($Tot_Cr,2);
                                    $totals['Open_Dr']+=round($Open_Dr,2);
                                    $totals['Open_Cr']+=round($Open_Cr,2);
                                    $totals['Open_Bal']+=round($Open_Bal,2);

                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'debit' => round($debitssettotal,2),
                                            'credit' => round($creditssettotal,2),
                                            'closeing' =>  round($totalcloseing,2),
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val,2),
                                            'transit'=>round($transit,2),
                                            'net_balance'=>round($totabetbalance,2),
                                            'sheet_total'=>round($sheettotal_sales_full,2),
                                            'Tran_Dr'=>round($Tran_Dr,2),
                                            'Tran_Cr'=>round($Tran_Cr,2),
                                            'Tot_Dr'=>round($Tot_Dr,2),
                                            'Tot_Cr'=>round($Tot_Cr,2),
                                            'Open_Dr'=>round($Open_Dr,2),
                                            'Open_Cr'=>round($Open_Cr,2),
                                            'Open_Bal'=>round($Open_Bal,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                        $i++;

                     }
                     
                     
                  
                    $arrayMain = [];
                    $arrayMain['totals'] = $totals;
                    $arrayMain['data'] = $array;
                     
                     
                  
                    

                 
                         //echo "<pre>";print_r($array);
                        //exit;
                        $filename='Customer_balance_report_'.$formdate.'_TO_'.$todate; 
                        header("Content-Type: application/xls");    
                        header("Content-Disposition: attachment; filename=$filename.xls");  
                        header("Pragma: no-cache"); 
                        header("Expires: 0");
                         
                         
                         
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="15"><h3>Customer Balance Report <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                 
                                  
                                  
                                    <tr style="text-align: left;background: #dfdfdf;">

                                        <th>No</th>
                                      <th >Customer_Name</th>
                                      <th >Area</th>
                                    <?php if($checkdata_1_hide=='0'){ ?>  <th>Open Dr</th>  <?php } ?>
                                      
                                      <?php if($checkdata_2_hide=='0'){ ?> <th>Open Cr</th><?php } ?>
                                      <?php if($checkdata_3_hide=='0'){ ?> <th>Open Bal</th><?php } ?>
                                      <?php if($checkdata_4_hide=='0'){ ?> <th>Tran Dr</th><?php } ?>
                                       <?php if($checkdata_5_hide=='0'){ ?><th>Tot Dr</th><?php } ?>
                                       <?php if($checkdata_6_hide=='0'){ ?><th>Tran Cr</th><?php } ?>
                                      <?php if($checkdata_7_hide=='0'){ ?> <th>Tot Cr</th><?php } ?>
                                     <?php if($checkdata_8_hide=='0'){ ?>  <th>Debit</th><?php } ?>
                                      <?php if($checkdata_9_hide=='0'){ ?> <th>Credit</th><?php } ?>
                                      <?php if($checkdata_10_hide=='0'){ ?> <th>Closing</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production Return</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production</th><?php } ?>
                                      <?php if($checkdata_11_hide=='0'){ ?> <th>Sheet_in_Factory</th><?php } ?>
                                      <?php if($checkdata_12_hide=='0'){ ?> <th>Transit</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Net_Balance</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Sheet</th><?php } ?>
                                      <th >Remarks</th>
                                      <th >Phone No</th>
                                     
                        
                                    </tr>
                                     <tr style="text-align: left;">

                                       <th colspan="3"> TOTALS </th>
                                       
                                      
                                    <?php if($checkdata_1_hide=='0'){ ?>  <th> </th>  <?php } ?>
                                      
                                      <?php if($checkdata_2_hide=='0'){ ?> <th> </th><?php } ?>
                                      <?php if($checkdata_3_hide=='0'){ ?> <th> </th><?php } ?>
                                      <?php if($checkdata_4_hide=='0'){ ?> <th> </th><?php } ?>
                                       <?php if($checkdata_5_hide=='0'){ ?><th> </th><?php } ?>
                                       <?php if($checkdata_6_hide=='0'){ ?><th> </th><?php } ?>
                                      <?php if($checkdata_7_hide=='0'){ ?> <th> </th><?php } ?>
                                     <?php if($checkdata_8_hide=='0'){ ?>  <th><?=$totals['debit']?></th><?php } ?>
                                      <?php if($checkdata_9_hide=='0'){ ?> <th><?=$totals['credit']?></th><?php } ?>
                                      <?php if($checkdata_10_hide=='0'){ ?> <th><?=$totals['closeing']?></th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th><?=$totals['production_return']?></th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th><?=$totals['production']?></th><?php } ?>
                                      <?php if($checkdata_11_hide=='0'){ ?> <th><?=$totals['sheet_in_factory']?></th><?php } ?>
                                      <?php if($checkdata_12_hide=='0'){ ?> <th><?=$totals['transit']?></th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th><?=$totals['net_balance']?></th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th><?=$totals['sheet_total']?></th><?php } ?>
                                      <th > </th>
                                      <th >  No</th>
                                     
                        
                                    </tr>
                                  
                                  <?php
                                  $i=1;
                                   foreach($array as $val)
                                   { 
                                       
                                  ?>
                                  <tr style="text-align: right;">
                                   <th style="text-align: left;"><?php echo $i; ?></th>
                                   <th style="text-align: left;"><?php echo $val['sales_group_name']; ?></th>
                                   <th> </th>
                                   
                                   <?php if($checkdata_1_hide=='0'){ ?><th > <?php  if($val['Open_Dr']>0) { echo $val['Open_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><th> <?php  if($val['Open_Cr']>0) { echo $val['Open_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><th> <?php  if($val['Open_Bal']>0) { echo $val['Open_Bal'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><th> <?php  if($val['Tran_Dr']>0) { echo $val['Tran_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><th> <?php  if($val['Tot_Dr']>0) { echo $val['Tot_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><th> <?php  if($val['Tran_Cr']>0) { echo $val['Tran_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><th> <?php  if($val['Tot_Cr']>0) { echo $val['Tot_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><th> <?php  if($val['debit']>0) { echo $val['debit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><th> <?php  if($val['credit']>0) { echo $val['credit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><th> <?php  if($val['closeing']>0) { echo $val['closeing'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?><th> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><th> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php  if($val['net_balance']>0) { echo $val['net_balance']; } ?></th><?php } ?>
                                    <?php if($checkdata_13_hide=='0'){ ?><th> <?php  if($val['sheet_total']>0) { echo $val['sheet_total']; } ?></th><?php } ?>
                                   <th> </th>
                                   <th> </th>
                                   </tr>
                                   
                                   
                                   <?php
                                    foreach($val['salesperson'] as $valsales)
                                   { 
                                       
                                    ?>
                                   <tr style="text-align: left;">
                                   <td></td>
                                   <td style="color:red;"><?php echo $valsales['sales_person_name']; ?></td>
                                  
                                   <td> </td>
                                   <?php if($checkdata_1_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['opening_balance_dr']>0) { echo $valsales['sl_totals']['opening_balance_dr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_2_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['opening_balance_cr']>0) { echo $valsales['sl_totals']['opening_balance_cr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_3_hide=='0'){ ?><td> <span style="color:<?php echo $color; ?>"><?php  if($valsales['sl_totals']['opening_balance']>0) { echo $valsales['sl_totals']['opening_balance'];   }   ?></span></td><?php } ?>
                                                   <?php if($checkdata_4_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnDr']>0) { echo $valsales['sl_totals']['trnDr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_5_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnDrtotal']>0) { echo $valsales['sl_totals']['trnDrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_6_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnCr']>0) { echo $valsales['sl_totals']['trnCr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_7_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnCrtotal']>0) { echo $valsales['sl_totals']['trnCrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_8_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['debit']>0) { echo $valsales['sl_totals']['debit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_9_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['credit']>0) { echo $valsales['sl_totals']['credit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_10_hide=='0'){ ?><td>  <span style="color:<?php echo $color1; ?>"><?php  if($valsales['sl_totals']['closeing']>0) { echo $valsales['sl_totals']['closeing'];  }   ?></span></td><?php } ?>
                                                  <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['inproduction_total_return']>0) { echo $valsales['sl_totals']['inproduction_total_return'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['production']>0) { echo $valsales['sl_totals']['production'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_11_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['sheet_in_factory']>0) { echo $valsales['sl_totals']['sheet_in_factory'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_12_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['transit']>0) { echo $valsales['sl_totals']['transit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_13_hide=='0'){ ?><td>  


                                                      
                                                      <b> <?php  echo '<span style="color:green;">'.$valsales['sl_totals']['balance'];    ?></b>
                                                       


                                                    </td><?php } ?>


                                                    <?php if($checkdata_13_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['sheet']>0) { echo $valsales['sl_totals']['sheet'];  }   ?></td><?php } ?> 
                                                   
                                                      

                                                    
                                                 
                                   <td> </td>
                                   <td> </td>
                                   </tr>
                                   
                                   
                                     <?php
                                    foreach($valsales['subarray'] as $value)
                                   {
                                       if($valsales['sales_team_id']=$value['sales_team_id'])
                                       { 
                                           
                                           if($value['payment_status']=='CR')
                                           {
                                               $color="green";
                                           }
                                           else
                                           {
                                               $color="red";
                                           }
                                           
                                           if($value['payment_status_bu_closeing']=='CR')
                                           {
                                               $color1="green";
                                           }
                                           else
                                           {
                                               $color1="red";
                                           }
                                           
                                           
                                       ?>
                                                   <tr <?php echo  $value['hidestatus']; ?> >
                                                   <td><?php echo $value['no']; ?>   </td>
                                                   <td><?php echo $value['customername']; ?></td>
                                                   <td><?php echo $value['route_name']; ?> </td>
                                                   <?php if($checkdata_1_hide=='0'){ ?><td> <?php  if($value['opening_balance_dr']>0) { echo $value['opening_balance_dr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_2_hide=='0'){ ?><td> <?php  if($value['opening_balance_cr']>0) { echo $value['opening_balance_cr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_3_hide=='0'){ ?><td> <span style="color:<?php echo $color; ?>"><?php  if($value['opening_balance']>0) { echo $value['opening_balance'];   }   ?></span></td><?php } ?>
                                                   <?php if($checkdata_4_hide=='0'){ ?><td> <?php  if($value['trnDr']>0) { echo $value['trnDr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_5_hide=='0'){ ?><td> <?php  if($value['trnDrtotal']>0) { echo $value['trnDrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_6_hide=='0'){ ?><td> <?php  if($value['trnCr']>0) { echo $value['trnCr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_7_hide=='0'){ ?><td> <?php  if($value['trnCrtotal']>0) { echo $value['trnCrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_8_hide=='0'){ ?><td> <?php  if($value['debit']>0) { echo $value['debit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_9_hide=='0'){ ?><td> <?php  if($value['credit']>0) { echo $value['credit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_10_hide=='0'){ ?><td>  <span style="color:<?php echo $color1; ?>"><?php  if($value['closeing']>0) { echo $value['closeing'];  }   ?></span></td><?php } ?>
                                                  <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($value['inproduction_total_return']>0) { echo $value['inproduction_total_return'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($value['production']>0) { echo $value['production'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_11_hide=='0'){ ?><td> <?php  if($value['sheet_in_factory']>0) { echo $value['sheet_in_factory'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_12_hide=='0'){ ?><td> <?php  if($value['transit']>0) { echo $value['transit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_13_hide=='0'){ ?><td>  


                                                       <b> <?php  if($value['getstatus']==0) { echo '<span style="color:red;">'.$value['balance'].'<span>';  }   ?></b>
                                                    
                                                      <b> <?php  if($value['getstatus']==1) { echo '<span style="color:green;">'.$value['balance'].'<span>';  }   ?></b>
                                                       


                                                    </td><?php } ?>


                                                    <?php if($checkdata_13_hide=='0'){ ?><td> <?php  if($value['sheet']>0) { echo $value['sheet'];  }   ?></td><?php } ?> 
                                                   
                                                      

                                                    
                                                   <td> <?php echo $value['feedback_details']; ?></td>
                                                   <td><?php echo $value['customerphone']; ?> </td>
                                                   </tr>
                                       
                                       <?php
                                       }
                                       
                                   }
                                       
                                    ?>
                                    
                                    
                                    
                                    <?php
                                       
                                       
                                   }
                                     
                                   
                                   ?>
                                   
                                  
                                    
                                   
                                   
                                  <?php
                                  
                                  
                                  $i++;
                                   }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  
                    <?php

                
                

    }
    
    
    public function fetch_data_customer_balance_report_export_static(){ 
                $form_data= json_decode(file_get_contents("php://input"));
                          $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
$this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

 $testMode = (isset($form_data->test) && $form_data->test);
                      $testMode = true;
                     $cateid=$form_data->cate_id;
                     $customer_id=$form_data->customer_id;
                     //$customer_id=31804;
                     $productid=$form_data->productid;
                     $limit=$form_data->limit;
                     $formdate=$form_data->formdate;
                     $todate=$form_data->todate;
                     $order_status=$form_data->order_status;
                     $payment_mode=$form_data->payment_mode;
                     $sales_group=$form_data->sales_group;
                     
                    
                    
                     $table_customize = $this->Main_model->where_names('table_customize','user_id',$this->userid);
                     
                     $checked1="checked";
  $checked2="checked";
   $checked3="checked";
    $checked4="checked";
     $checked5="checked";
      $checked6="checked";
       $checked7="checked";
        $checked8="checked";
         $checked9="checked";
         $checked10="checked";
          $checked11="checked";
           $checked12="checked";
            $checked13="checked";
            $checked120="checked";
 $checked14="checked";
 $checkdata_1_hide="0";
 $checkdata_2_hide="0";
 $checkdata_3_hide="0";
 $checkdata_4_hide="0";
 $checkdata_5_hide="0";
 $checkdata_6_hide="0";
 $checkdata_7_hide="0";
 $checkdata_8_hide="0";
 $checkdata_9_hide="0";
 $checkdata_10_hide="0";
  $checkdata_14_hide="0";
 $checkdata_11_hide="0";
 $checkdata_12_hide="0";
 $checkdata_13_hide="0";
 $checkdata_120_hide="style='display:none'";
if(count($table_customize)>0)
{
   
   
   foreach($table_customize as $vl)
   {
       
       $label_id=$vl->label_id;
       $status=$vl->status;
       
       
       if($label_id==1)
       {
           if($status==0)
           {
               $checkdata_1_hide="1";
               $checked1="";
           }
       }
       
       if($label_id==2)
       {
           if($status==0)
           {
               $checkdata_2_hide="1";
                $checked2="";
           }
       }
       
       if($label_id==3)
       {
           if($status==0)
           {
               $checkdata_3_hide="1";
                $checked3="";
           }
       }
       
       if($label_id==4)
       {
           if($status==0)
           {
               $checkdata_4_hide="1";
                $checked4="";
           }
       }
       
       if($label_id==5)
       {
           if($status==0)
           {
               $checkdata_5_hide="1";
                $checked5="";
           }
       }
       
       if($label_id==6)
       {
           if($status==0)
           {
               $checkdata_6_hide="1";
                $checked6="";
           }
       }
       
       if($label_id==7)
       {
           if($status==0)
           {
               $checkdata_7_hide="1";
                $checked7="";
           }
       }
       
       if($label_id==8)
       {
           if($status==0)
           {
               $checkdata_8_hide="1";
                $checked8="";
           }
       }
       
       if($label_id==9)
       {
           if($status==0)
           {
               $checkdata_9_hide="1";
                $checked9="";
           }
       }
       
       if($label_id==10)
       {
           if($status==0)
           {
               $checkdata_10_hide="1";
                $checked10="";
           }
       }
       
       if($label_id==11)
       {
           if($status==0)
           {
               $checkdata_11_hide="1";
                $checked11="";
           }
       }
       
       if($label_id==12)
       {
           if($status==0)
           {
               $checkdata_12_hide="1";
                $checked12="";
           }
       }
       
       if($label_id==13)
       {
           if($status==0)
           {
               $checkdata_13_hide="1";
                $checked13="";
           }
       }
       
      
       
       if($label_id==14)
       {
           if($status==0)
           {
                $checkdata_14_hide="1";
                $checked14="";
           }
       }
       
       
        if($label_id==120)
       {
           if($status==0)
           {
                $checkdata_120_hide="";
                $checked120="unchecked";
           }
       }
       
       
   }
   
    
}
                     
                     
                     
                     
                     
                     
                    $arrayMain = [];
                    $arrayMain['totals'] = json_decode($form_data->totals);
                    $arrayMain['data'] =   json_decode($form_data->data);
                     
                     
                  
                    

                 
                         //echo "<pre>";print_r($array);
                        //exit;
                        $filename='Customer_balance_report_'.$formdate.'_TO_'.$todate; 

                        // echo $filename;
                        // exit;
                        header("Content-Type: application/xls");    
                        header("Content-Disposition: attachment; filename=$filename.xls");  
                        header("Pragma: no-cache"); 
                        header("Expires: 0");
                         
                         
                     // echo "     
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="15"><h3>Customer Balance Report <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                    <tr style="text-align: left;background: #dfdfdf;">

                                       <th>No</th>
                                      <th >Customer_Name</th>
                                      <th >Area</th>
                                      
                                    <?php if($checkdata_1_hide=='0'){ ?>  <th>Open Dr</th>  <?php } ?>
                                      
                                      <?php if($checkdata_2_hide=='0'){ ?> <th>Open Cr</th><?php } ?>
                                      <?php if($checkdata_3_hide=='0'){ ?> <th>Open Bal</th><?php } ?>
                                      <?php if($checkdata_4_hide=='0'){ ?> <th>Tran Dr</th><?php } ?>
                                       <?php if($checkdata_5_hide=='0'){ ?><th>Tot Dr</th><?php } ?>
                                       <?php if($checkdata_6_hide=='0'){ ?><th>Tran Cr</th><?php } ?>
                                      <?php if($checkdata_7_hide=='0'){ ?> <th>Tot Cr</th><?php } ?>
                                     <?php if($checkdata_8_hide=='0'){ ?>  <th>Debit</th><?php } ?>
                                      <?php if($checkdata_9_hide=='0'){ ?> <th>Credit</th><?php } ?>
                                      <?php if($checkdata_10_hide=='0'){ ?> <th>Closing</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production Return</th><?php } ?>
                                      <?php if($checkdata_14_hide=='0'){ ?> <th>In Production</th><?php } ?>
                                      <?php if($checkdata_11_hide=='0'){ ?> <th>Sheet_in_Factory</th><?php } ?>
                                      <?php if($checkdata_12_hide=='0'){ ?> <th>Transit</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Net_Balance</th><?php } ?>
                                      <?php if($checkdata_13_hide=='0'){ ?> <th>Sheet</th><?php } ?>
                                      <th >Remarks</th>
                                      <th >Phone No</th>
                                     
                        
                                    </tr>
                                  
                                  
                                  
                                  
                                  
                                  <?php
                                  $i=1;
                                   foreach($array as $val)
                                   { 
                                       
                                  ?>
                                  <tr style="text-align: right;">
                                   <th style="text-align: left;"><?php echo $i; ?></th>
                                   <th style="text-align: left;"><?php echo $val['sales_group_name']; ?></th>
                                   <th> </th>
                                   
                                   <?php if($checkdata_1_hide=='0'){ ?><th > <?php  if($val['Open_Dr']>0) { echo $val['Open_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_2_hide=='0'){ ?><th> <?php  if($val['Open_Cr']>0) { echo $val['Open_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_3_hide=='0'){ ?><th> <?php  if($val['Open_Bal']>0) { echo $val['Open_Bal'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_4_hide=='0'){ ?><th> <?php  if($val['Tran_Dr']>0) { echo $val['Tran_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_5_hide=='0'){ ?><th> <?php  if($val['Tot_Dr']>0) { echo $val['Tot_Dr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_6_hide=='0'){ ?><th> <?php  if($val['Tran_Cr']>0) { echo $val['Tran_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_7_hide=='0'){ ?><th> <?php  if($val['Tot_Cr']>0) { echo $val['Tot_Cr'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_8_hide=='0'){ ?><th> <?php  if($val['debit']>0) { echo $val['debit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_9_hide=='0'){ ?><th> <?php  if($val['credit']>0) { echo $val['credit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_10_hide=='0'){ ?><th> <?php  if($val['closeing']>0) { echo $val['closeing'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_14_hide=='0'){ ?><th> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_11_hide=='0'){ ?><th> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_12_hide=='0'){ ?><th> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th><?php } ?>
                                   <?php if($checkdata_13_hide=='0'){ ?><th> <?php  if($val['net_balance']>0) { echo $val['net_balance']; } ?></th><?php } ?>
                                    <?php if($checkdata_13_hide=='0'){ ?><th> <?php  if($val['sheet_total']>0) { echo $val['sheet_total']; } ?></th><?php } ?>
                                   <th> </th>
                                   <th> </th>
                                   </tr>
                                   
                                   
                                   <?php
                                    foreach($val['salesperson'] as $valsales)
                                   { 
                                       
                                    ?>
                                   <tr style="text-align: left;">
                                   <td></td>
                                   <td style="color:red;"><?php echo $valsales['sales_person_name']; ?></td>
                                  
                                   <td> </td>
                                   <?php if($checkdata_1_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['opening_balance_dr']>0) { echo $valsales['sl_totals']['opening_balance_dr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_2_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['opening_balance_cr']>0) { echo $valsales['sl_totals']['opening_balance_cr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_3_hide=='0'){ ?><td> <span style="color:<?php echo $color; ?>"><?php  if($valsales['sl_totals']['opening_balance']>0) { echo $valsales['sl_totals']['opening_balance'];   }   ?></span></td><?php } ?>
                                                   <?php if($checkdata_4_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnDr']>0) { echo $valsales['sl_totals']['trnDr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_5_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnDrtotal']>0) { echo $valsales['sl_totals']['trnDrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_6_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnCr']>0) { echo $valsales['sl_totals']['trnCr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_7_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['trnCrtotal']>0) { echo $valsales['sl_totals']['trnCrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_8_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['debit']>0) { echo $valsales['sl_totals']['debit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_9_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['credit']>0) { echo $valsales['sl_totals']['credit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_10_hide=='0'){ ?><td>  <span style="color:<?php echo $color1; ?>"><?php  if($valsales['sl_totals']['closeing']>0) { echo $valsales['sl_totals']['closeing'];  }   ?></span></td><?php } ?>
                                                  <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['inproduction_total_return']>0) { echo $valsales['sl_totals']['inproduction_total_return'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['production']>0) { echo $valsales['sl_totals']['production'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_11_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['sheet_in_factory']>0) { echo $valsales['sl_totals']['sheet_in_factory'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_12_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['transit']>0) { echo $valsales['sl_totals']['transit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_13_hide=='0'){ ?><td>  


                                                      
                                                      <b> <?php  echo '<span style="color:green;">'.$valsales['sl_totals']['balance'];    ?></b>
                                                       


                                                    </td><?php } ?>


                                                    <?php if($checkdata_13_hide=='0'){ ?><td> <?php  if($valsales['sl_totals']['sheet']>0) { echo $valsales['sl_totals']['sheet'];  }   ?></td><?php } ?> 
                                                   
                                                      

                                                    
                                                 
                                   <td> </td>
                                   <td> </td>
                                   </tr>
                                   
                                   
                                     <?php
                                    foreach($valsales['subarray'] as $value)
                                   {
                                       if($valsales['sales_team_id']=$value['sales_team_id'])
                                       { 
                                           
                                           if($value['payment_status']=='CR')
                                           {
                                               $color="green";
                                           }
                                           else
                                           {
                                               $color="red";
                                           }
                                           
                                           if($value['payment_status_bu_closeing']=='CR')
                                           {
                                               $color1="green";
                                           }
                                           else
                                           {
                                               $color1="red";
                                           }
                                           
                                           
                                       ?>
                                                   <tr <?php echo  $value['hidestatus']; ?> >
                                                   <td><?php echo $value['no']; ?>   </td>
                                                   <td><?php echo $value['customername']; ?></td>
                                                   <td><?php echo $value['route_name']; ?> </td>
                                                   <?php if($checkdata_1_hide=='0'){ ?><td> <?php  if($value['opening_balance_dr']>0) { echo $value['opening_balance_dr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_2_hide=='0'){ ?><td> <?php  if($value['opening_balance_cr']>0) { echo $value['opening_balance_cr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_3_hide=='0'){ ?><td> <span style="color:<?php echo $color; ?>"><?php  if($value['opening_balance']>0) { echo $value['opening_balance'];   }   ?></span></td><?php } ?>
                                                   <?php if($checkdata_4_hide=='0'){ ?><td> <?php  if($value['trnDr']>0) { echo $value['trnDr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_5_hide=='0'){ ?><td> <?php  if($value['trnDrtotal']>0) { echo $value['trnDrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_6_hide=='0'){ ?><td> <?php  if($value['trnCr']>0) { echo $value['trnCr'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_7_hide=='0'){ ?><td> <?php  if($value['trnCrtotal']>0) { echo $value['trnCrtotal'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_8_hide=='0'){ ?><td> <?php  if($value['debit']>0) { echo $value['debit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_9_hide=='0'){ ?><td> <?php  if($value['credit']>0) { echo $value['credit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_10_hide=='0'){ ?><td>  <span style="color:<?php echo $color1; ?>"><?php  if($value['closeing']>0) { echo $value['closeing'];  }   ?></span></td><?php } ?>
                                                  <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($value['inproduction_total_return']>0) { echo $value['inproduction_total_return'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_14_hide=='0'){ ?><td> <?php  if($value['production']>0) { echo $value['production'];  }   ?></td><?php } ?>
                                                   
                                                   <?php if($checkdata_11_hide=='0'){ ?><td> <?php  if($value['sheet_in_factory']>0) { echo $value['sheet_in_factory'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_12_hide=='0'){ ?><td> <?php  if($value['transit']>0) { echo $value['transit'];  }   ?></td><?php } ?>
                                                   <?php if($checkdata_13_hide=='0'){ ?><td>  


                                                       <b> <?php  if($value['getstatus']==0) { echo '<span style="color:red;">'.$value['balance'].'<span>';  }   ?></b>
                                                    
                                                      <b> <?php  if($value['getstatus']==1) { echo '<span style="color:green;">'.$value['balance'].'<span>';  }   ?></b>
                                                       


                                                    </td><?php } ?>


                                                    <?php if($checkdata_13_hide=='0'){ ?><td> <?php  if($value['sheet']>0) { echo $value['sheet'];  }   ?></td><?php } ?> 
                                                   
                                                      

                                                    
                                                   <td> <?php echo $value['feedback_details']; ?></td>
                                                   <td><?php echo $value['customerphone']; ?> </td>
                                                   </tr>
                                       
                                       <?php
                                       }
                                       
                                   }
                                       
                                    ?>
                                    
                                    
                                    
                                    <?php
                                       
                                       
                                   }
                                     
                                   
                                   ?>
                                   
                                  
                                    
                                   
                                   
                                  <?php
                                  
                                  
                                  $i++;
                                   }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  
                    <?php

                
                

    }


      public function fetch_data_customer_balance_report_export_production()
    {

                    
                  

                    
                     $cateid=$_GET['cate_id'];
                     $customer_id=$_GET['customer_id'];
                     //$customer_id=31804;
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     $sales_group=$_GET['sales_group'];
                     
                    
                    
                     
                     
                     
                     
                     
                     
                     
                 
                    
                    $stat=' ';
                    $userslog="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                    
                    
                    if($sales_group!='ALL')
                    {
                         $usersgroup=' AND ss.id="'.$sales_group.'"';       
                    } 
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';       
                                 
                    }
                     
                    
                  
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                   
                    
                     
                     
                     
                     $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE    a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql  GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                   
                   
                         $i=1;
                     $array=array();
                    
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                  
                                     $salesperson=array();
                                     $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                     $balancetoatal=0;
                                    
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                     
                       
                                     
                       
                                     $resultsubdata=$this->db->query("SELECT b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,SUM(a.debits) as debits,SUM(a.credits) as credits,b.opening_balance,b.company_name,b.payment_status  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id   WHERE    a.deleteid=0 AND a.party_type='1'  AND b.sales_team_id='".$valueget->sales_team_id."'  $stat $userslog $searchsql2 GROUP BY a.customer_id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                     
                                     
                                     $k=1;
                                     foreach ($resultsubdata as  $value) 
                                     {
                                         
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                                               
                                                               
                                                               
                                                               
                                                                 $discount1=0;
                                                                 $resultsub_production=$this->db->query("SELECT b.bill_total as totalvalue FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.create_date BETWEEN '".$formdate."' AND '".$todate."' AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.reason!='Return To Re-sale' GROUP BY b.id ORDER BY a.id DESC");
                                                                 $resultsub_production=$resultsub_production->result();
                                                                 $production=0;
                                                                 foreach($resultsub_production as $val)
                                                                 { 
                                                                               
                                                                             $totalvalue=$val->totalvalue;
                                                                             $production+=round($totalvalue,2);
                                                     
                                                                 }
                                                                 
                                                                  
                                                                  
                                                                  
                                                                  
                                                                  
                                                                  
                                                                  
                                                                  
                                                                  
                                                               
                                                                 $discount2=0;
                                                                 $resultsub=$this->db->query("SELECT b.bill_total as totalvalue FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.create_date BETWEEN '".$formdate."' AND '".$todate."' AND b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 GROUP BY b.id ORDER BY a.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 $total=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                     $totalvalue=$val->totalvalue;
                                                                     $total+=round($totalvalue,2);
                                                     
                                                                 }


             
                                                                 $resultsub_inproduction=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."' AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' AND b.order_base=2  AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                                 $resultsub_inproduction=$resultsub_inproduction->result();
                                                                 $inproduction_total_return=0;
                                                                 foreach($resultsub_inproduction as $vals)
                                                                 { 
                                                                   
                                                                  
                                                                             $inproduction_total_return=round($vals->bill_total);
                                                     
                                                                 }
                                                                 
                                                                 
                                                                 //$production=$inproduction_total_return+$production;


                                                                 
                                                                 $resultsub=$this->db->query("SELECT SUM(b.bill_total) as bill_total FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."' AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' AND b.order_base=1 AND b.driver_delivery_status=0 ORDER BY b.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 $total_return=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                  
                                                                             $total_return=round($val->bill_total);
                                                     
                                                                 }
                            
                                                               
                                                               
                                                               
                                                                 $discount3=0;
                                                                 $resultsub=$this->db->query("SELECT b.bill_total as totalvalue,b.roundoff,b.roundoffstatus,b.discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."' AND b.assign_status IN ('2') AND b.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.return_status=0 AND b.order_base=1 AND a.delivery_status=0 GROUP BY b.id ORDER BY a.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 $total_transit=0;
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                   
                                                                             $totalvalue=$val->totalvalue;
                                                                             $total_transit+=round($totalvalue,2);
                                                     
                                                                }
                                                                
                                                                
                                                                $sheet_in_factory=round($total+$total_return,2);
                                                                $Totaltranspot= $production+$sheet_in_factory+$total_transit+$inproduction_total_return;
                                          
                                                          
                                          
                                         
                                         
                                                                 $productiontotal+=$production;
                                                                 $productiontotal_return+=$inproduction_total_return;
                                                                 $sheet_in_factory_val+=round($total+$total_return,2);
                                                                 $transit+=round($total_transit,2);
                                         
                                         
                                       
                                                                if($Totaltranspot>0)
                                                                {
                                                                    
                                                                
                                         
                                                                 $subresult[] = array(
                                                                    
                                                                    
                                                                    'no' => $k, 
                                                                    'id' => $value->id, 
                                                                    'payment_status' => $payment_status, 
                                                                    'route_name'=>$route_name,
                                                                    'sales_team_id' => $value->sales_team_id, 
                                                                    'customername' => $value->company_name, 
                                                                    'customerphone' => $value->phone,
                                                                    'production' => round($production,2),
                                                                    'inproduction_total_return'=>round($inproduction_total_return,2),
                                                                    'sheet_in_factory' => $sheet_in_factory,
                                                                    'transit'=>round($total_transit,2),
                                                                    'feedback_details' => $value->feedback_details, 
                                                                    'phone' => $value->phone
                                        
                                                                );
                                                                
                                                                 $k++;
                                                               }    
                                       
                                           
                                           
                                       
                                           
                                        
                                     
                                     
                                     }
                                     
                                     
                                     
                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                             'subarray'=>$subresult,
                                            
                                        );
                                      
                                      
                                     }
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                     
                                        
                                      $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'production'=>round($productiontotal,2),
                                            'production_return'=>round($productiontotal_return,2),
                                            'sheet_in_factory'=>round($sheet_in_factory_val),
                                            'transit'=>round($transit,2),
                                            'salesperson'=>$salesperson
                
                                        );   
                                        
                       
                            $i++;

                     }
                 
                 
                         //echo "<pre>";print_r($array);
                        //exit;
                        $filename='In_production_and_sheet_in_factory_report_customer_wise_'.$formdate.'_TO_'.$todate; 
                        header("Content-Type: application/xls");    
                        header("Content-Disposition: attachment; filename=$filename.xls");  
                        header("Pragma: no-cache"); 
                        header("Expires: 0");
                         
                         
                      
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="8"><h3>In production & Sheet in factory report (customer wise data)<?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                  <tr style="text-align: left;background: #dfdfdf;">
                                        
                                       <th>No</th>
                                       <th >Customer_Name</th>
                                       <th >Area</th>
                                       <th>In Production Return</th>
                                       <th>In Production</th>
                                       <th>Sheet_in_Factory</th>
                                       <th>Transit</th>
                                       <th>Remarks</th>
                                       <th>Phone No</th>
                                  </tr>
                                  
                                  
                                  
                                  
                                  
                                  <?php
                                  $i=1;
                                   foreach($array as $val)
                                   { 
                                       
                                  ?>
                                  <tr style="text-align: left;">
                                   <th><?php echo $i; ?></th>
                                   <th><?php echo $val['sales_group_name']; ?></th>
                                   <th> </th>
                                   <th style="text-align: right;"> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th>
                                   <th style="text-align: right;"> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th>
                                   <th style="text-align: right;"> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th>
                                   <th style="text-align: right;"> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th>
                                   <th> </th>
                                   <th> </th>
                                   </tr>
                                   
                                   
                                   <?php
                                    foreach($val['salesperson'] as $valsales)
                                   { 
                                       
                                    ?>
                                   <tr style="text-align: left;">
                                   <td></td>
                                   <td style="color:red;"><?php echo $valsales['sales_person_name']; ?></td>
                                  
                                   <td> </td>
                                  <td> </td>
                                  <td> </td>
                                  <td> </td>
                                  <td> </td>
                                   <td> </td>
                                   <td> </td>
                                   </tr>
                                   
                                   
                                     <?php
                                    foreach($valsales['subarray'] as $value)
                                   {
                                       if($valsales['sales_team_id']=$value['sales_team_id'])
                                       { 
                                           
                                           
                                           
                                       ?>
                                                   <tr>
                                                   <td><?php echo $value['no']; ?>   </td>
                                                   <td><?php echo $value['customername']; ?></td>
                                                   <td><?php echo $value['route_name']; ?> </td>
                                                   <td> <?php  if($value['production_return']>0) { echo $value['production_return'];  }   ?></td>
                                                   <td> <?php  if($value['production']>0) { echo $value['production'];  }   ?></td>
                                                   <td> <?php  if($value['sheet_in_factory']>0) { echo $value['sheet_in_factory'];  }   ?></td>
                                                   <td> <?php  if($value['transit']>0) { echo $value['transit'];  }   ?></td>
                                                   <td> <?php echo $value['feedback_details']; ?></td>
                                                   <td><?php echo $value['customerphone']; ?> </td>
                                                   </tr>
                                       
                                       <?php
                                       }
                                       
                                   }
                                       
                                    ?>
                                    
                                    
                                    
                                    <?php
                                       
                                       
                                   }
                                     
                                   
                                   ?>
                                   
                                  
                                    
                                   
                                   
                                  <?php
                                  
                                  
                                  $i++;
                                   }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  
                    <?php

                
                

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
       public function fetch_data_customer_balance_report_export_order()
    {

                    
                  

                    
                     $cateid=$_GET['cate_id'];
                     $customer_id=$_GET['customer_id'];
                     //$customer_id=31804;
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     $payment_mode=$_GET['payment_mode'];
                     $sales_group=$_GET['sales_group'];
                     
                    
                    
                     
                    
                    $stat=' ';
                    $userslog="";
                    $usersgroup="";
                    if($cateid!='ALL')
                    {
                         $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
                    } 
                    
                    
                    if($customer_id!='0')
                    {
                         $userslog.=' AND b.id="'.$customer_id.'"';       
                    } 
                    
                    
                    if($sales_group!='ALL')
                    {
                         $usersgroup=' AND ss.id="'.$sales_group.'"';       
                    } 
                      
                      
                   
                  
                    
                    if($this->session->userdata['logged_in']['access']=='17')
                    {
                          $sales_team_id=array();
                          $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->define_saleshd_id;
                              
                          }
                          
                          
                          $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                          foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->define_saleshd_id;
                          }
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';       
                                 
                    }
                     
                    
                  
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                   
                    
                     
                     
                     
                     $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE    a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql  GROUP BY ss.id  ORDER BY ss.name ASC");
                     $result=$result->result();
                   
                   
                         $i=1;
                     $array=array();
                    
                     foreach ($result as  $valuessg) 
                     {
                       
                                  
                                  
                                     $salesperson=array();
                                     $debitssettotal=0;
                                     $creditssettotal=0;
                                     $closeingtotal=0;
                                     $productiontotal=0;
                                     $productiontotal_return=0;
                                     $sheet_in_factory_val=0;
                                     $transit=0;
                                     $balancetoatal=0;
                                    
                                     $Tran_Dr=0;
                                     $Tran_Cr=0;
                                     $Tot_Dr=0;
                                     $Tot_Cr=0;
                                     $Open_Dr=0;
                                     $Open_Cr=0;
                                     $Open_Bal=0;
                                     
                                     $get_sales_person=$this->db->query("SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND aa.status=1 $userslog GROUP BY aa.id ORDER BY aa.username ASC");
                                     $get_sales_person=$get_sales_person->result();
                                     foreach ($get_sales_person as  $valueget) 
                                     {
                                         
                                       
                                     
                       
                                     
                       
                                     $resultsubdata=$this->db->query("SELECT b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,SUM(a.debits) as debits,SUM(a.credits) as credits,b.opening_balance,b.company_name,b.payment_status  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id   WHERE    a.deleteid=0 AND a.party_type='1'  AND b.sales_team_id='".$valueget->sales_team_id."'  $stat $userslog $searchsql2 GROUP BY a.customer_id ORDER BY b.company_name ASC");
                                     $resultsubdata=$resultsubdata->result();
                                     $subresult=array();
                                     
                                     
                                     $k=1;
                                     foreach ($resultsubdata as  $value) 
                                     {
                                         
                                      $sales_group=$value->sales_group;
                                      $sales_groupexe=explode('|', $sales_group);
                                      
                                       
                                   
                                                               $route_name="";
                                                               $result_account_head=$this->db->query("SELECT r.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $route_name=$ass->name;
                                                                                       
                                                               }
                                                                
                                                               
                                                               
                                                               
                                                               
                                                                $suborders=array();
                                                               
                                                               
                                                               
                                                               
                                                               $resultsub_production=$this->db->query("SELECT b.bill_total as totalvalue,b.assign_status,b.order_no,b.create_date,b.entry_user_id as user_id  FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id='".$value->id."'  AND b.create_date BETWEEN '".$formdate."' AND '".$todate."' AND  a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.reason!='Return To Re-sale' GROUP BY b.id ORDER BY a.id DESC");
                                                               $resultsub_production=$resultsub_production->result();
                                                              
                                                               foreach($resultsub_production as $val)
                                                               { 
                                                                    
                                                                   
                          
                                                                    $in_production=0;
                                                                    $Sheet_in_Factory=0;
                                                                    $total_transit=0;
                                                                    $total=0;
                                                                    $assign_status=$val->assign_status;
                                                                    if($assign_status==0)
                                                                    {
                                                                       $in_production=$val->totalvalue;
                                                                    }
                                                                    
                                                                    $people=array('11','12','1');
                                                                    if(in_array($assign_status, $people))
                                                                    {
                                                                        $total=$val->totalvalue;
                                                                    }
                                                                    
                                                                    
                                                                    if($assign_status==2)
                                                                    {
                                                                       $total_transit=$val->totalvalue;
                                                                    }
                                                                    
                                                                    
                                                                    $Sheet_in_Factory=$total;
                                                                    
                                                                    
                                                                    $full_total=$in_production+$Sheet_in_Factory+$total_transit;
                                                                    
                                                                    if($full_total>0)
                                                                    {
                                                                        
                                                                          $username='';
                                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$val->user_id."'");
                                                                          $resultsales_team=$query->result();
                                                                          foreach ($resultsales_team as  $values_set) {
                                                                              
                                                                              $username=$values_set->name;
                                                                              
                                                                          }
                          
                                                                        
                                                                            $production+=$in_production;
                                                                            $Sheet_in_Factory_total+=$Sheet_in_Factory;
                                                                            $total_transit_total+=$total_transit;
                                                                            $suborders[] = array(
                                                                            
                                                                            
                                                                            
                                                                            'customer_id' => $value->id, 
                                                                            'bill_total' => $val->totalvalue, 
                                                                            'order_no' => $val->order_no,
                                                                            'in_production_return'=>0,
                                                                            'in_production'=>$in_production,
                                                                            'Sheet_in_Factory' => $Sheet_in_Factory, 
                                                                            'Transit' => $total_transit, 
                                                                            'create_date' => date('d-m-Y',strtotime($val->create_date)),
                                                                            'user_id' => $username
                                                                            
                                                
                                                                            ); 
                                                                    
                                                                    
                                                                    }
                                                                    
                                                                    
                                                                    
                                                                    
                                                                    
                                                                 
                                                                            
                                                     
                                                               }
                                                               
                                                                  
                                                                  
                                                                  
                                                               
                                                               
                                                                 $resultsub=$this->db->query("SELECT b.bill_total as bill_total,b.order_no,b.re_order_no,b.order_base,b.update_date,b.user_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND b.customer='".$value->id."' AND b.update_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY b.id DESC");
                                                                 $resultsub=$resultsub->result();
                                                                 
                                                                 foreach($resultsub as $val)
                                                                 { 
                                                                    
                                                                   
                          
                                                                    $in_production_return=0;
                                                                  
                                                                    $total_return=0;
                                                                    $order_base=$val->order_base;
                                                                    if($order_base==2)
                                                                    {
                                                                       $in_production_return=$val->totalvalue;
                                                                    }
                                                                    
                                                                    if($order_base==1)
                                                                    {
                                                                       $total_return=$val->totalvalue;
                                                                    }
                                                                    
                                                                    
                                                                  
                                                                    
                                                                    
                                                                    $full_total_return=$in_production_return+$total_return;
                                                                    
                                                                    if($full_total_return>0)
                                                                    {
                                                                        
                                                                          $username='';
                                                                          $query = $this->db->query("SELECT name FROM `admin_users`  WHERE id='".$val->user_id."'");
                                                                          $resultsales_team=$query->result();
                                                                          foreach ($resultsales_team as  $values_set) {
                                                                              
                                                                              $username=$values_set->name;
                                                                              
                                                                          }
                          
                                                                        
                                                                            $in_production_return_total+=$in_production_return;
                                                                            $total_return_total+=$total_return;
                                                                            $suborders[] = array(
                                                                            
                                                                            
                                                                            
                                                                            'customer_id' => $value->id, 
                                                                            'bill_total' => $val->totalvalue, 
                                                                            'order_no' => $val->re_order_no.' | '.$val->order_no,
                                                                            'in_production_return'=>$in_production_return,
                                                                            'in_production'=>0,
                                                                            'Sheet_in_Factory' => $total_return, 
                                                                            'Transit' => 0, 
                                                                            'create_date' => date('d-m-Y',strtotime($val->update_date)),
                                                                            'user_id' => $username
                                                                            
                                                
                                                                            ); 
                                                                    
                                                                    
                                                                    }
                                                                    
                                                                    
                                                                    
                                                                    
                                                                    
                                                                 
                                                                            
                                                     
                                                               }
                                                               
                                         
                                         
                                                                  
                                                                  
                                                                  
                                                                  
                                                               
                                                              
                                              
                                                              if(!empty($suborders))
                                                              {
                                                                  $subresult[] = array(
                                                                    
                                                                    
                                                                    'no' => $k, 
                                                                    'id' => $value->id, 
                                                                    'payment_status' => $payment_status, 
                                                                    'route_name'=>$route_name,
                                                                    'sales_team_id' => $value->sales_team_id, 
                                                                    'customername' => $value->company_name, 
                                                                    'customerphone' => $value->phone,
                                                                    'feedback_details' => $value->feedback_details, 
                                                                    'phone' => $value->phone,
                                                                    'suborders'=>$suborders,
                                        
                                                                );
                                                                
                                                                 $k++;
                                                                
                                                              }
                                                                
                                                       
                                       
                                           
                                           
                                       
                                           
                                        
                                     
                                     
                                     }
                                     
                                     
                                     
                                        $salesperson[]=array(
                                             'sales_team_id'=>$valueget->sales_team_id,
                                             'sales_person_name'=>$valueget->sales_person_name,
                                             'subarray'=>$subresult,
                                            
                                        );
                                      
                                      
                                     }
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                      
                                     
                                        
                                       $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $valuessg->id, 
                                            'sales_group_name' => $valuessg->sales_group_name, 
                                            'production_return'=>$in_production_return_total,
                                            'production'=>$production,
                                            'sheet_in_factory'=>$Sheet_in_Factory_total+$total_return_total,
                                            'transit'=>$total_transit_total,
                                            'salesperson'=>$salesperson
                
                                        );     
                                        
                       
                            $i++;

                     }
                 
                 
                         //echo "<pre>";print_r($array);
                        //exit;
                        $filename='In_production_and_sheet_in_factory_report_order_wise_'.$formdate.'_TO_'.$todate; 
                        header("Content-Type: application/xls");    
                        header("Content-Disposition: attachment; filename=$filename.xls");  
                        header("Pragma: no-cache"); 
                        header("Expires: 0");
                         
                         
                      
                        ?>
                        


                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                             <thead>
                                 
                                 
                                  <tr><th colspan="12"><h3>In production & Sheet in factory report (order wise data) <?php echo $formdate; ?> To <?php echo $todate; ?></h3></th></tr>
                                  
                                  
                                  <tr style="text-align: left;background: #dfdfdf;">
                                        
                                       <th>No</th>
                                       <th>Customer_Name</th>
                                       <th>Area</th>
                                       <th>Order NO</th>
                                       <th>In Production Return</th>
                                       <th>In Production</th>
                                       <th>Sheet_in_Factory</th>
                                       <th>Transit</th>
                                       <th>Order By</th>
                                       <th>Create Date</th>
                                       <th>Remarks</th>
                                       <th>Phone No</th>
                                  </tr>
                                  
                                  
                                  
                                  
                                  
                                  <?php
                                  $i=1;
                                   foreach($array as $val)
                                   { 
                                       
                                  ?>
                                  <tr style="text-align: left;">
                                   <th><?php echo $i; ?></th>
                                   <th><?php echo $val['sales_group_name']; ?></th>
                                   <th> </th>
                                   <th> </th>
                                   <th style="text-align: right;"> <?php  if($val['production_return']>0) { echo $val['production_return'];  }   ?></th>
                                   <th style="text-align: right;"> <?php  if($val['production']>0) { echo $val['production'];  }   ?></th>
                                   <th style="text-align: right;"> <?php  if($val['sheet_in_factory']>0) { echo $val['sheet_in_factory'];  }   ?></th>
                                   <th style="text-align: right;"> <?php  if($val['transit']>0) { echo $val['transit'];  }   ?></th>
                                   <th> </th>
                                   <th> </th>
                                   <th> </th>
                                   <th> </th>
                                   
                                   </tr>
                                   
                                   
                                   <?php
                                    foreach($val['salesperson'] as $valsales)
                                   { 
                                       
                                    ?>
                                   <tr style="text-align: left;">
                                   <td></td>
                                   <td style="color:red;"><?php echo $valsales['sales_person_name']; ?></td>
                                  
                                   <td> </td>
                                  <td> </td>
                                  <td> </td>
                                  <td> </td>
                                  <td> </td>
                                   <td> </td>
                                   <td> </td>
                                   <td> </td>
                                   <td> </td>
                                   <td> </td>
                                   </tr>
                                   
                                   
                                     <?php
                                    foreach($valsales['subarray'] as $value)
                                   {
                                       if($valsales['sales_team_id']=$value['sales_team_id'])
                                       { 
                                           
                                           
                                           
                                       ?>
                                                   <tr>
                                                   <td><?php echo $value['no']; ?>   </td>
                                                   <td><?php echo $value['customername']; ?></td>
                                                   <td><?php echo $value['route_name']; ?> </td>
                                                   <td> <?php  if($value['production_return']>0) { echo $value['production_return'];  }   ?></td>
                                                   <td> <?php  if($value['production']>0) { echo $value['production'];  }   ?></td>
                                                   <td> <?php  if($value['sheet_in_factory']>0) { echo $value['sheet_in_factory'];  }   ?></td>
                                                   <td> <?php  if($value['transit']>0) { echo $value['transit'];  }   ?></td>
                                                   <td></td>
                                                   <td></td>
                                                   <td></td>
                                                   <td> <?php echo $value['feedback_details']; ?></td>
                                                   <td><?php echo $value['customerphone']; ?> </td>
                                                   </tr>
                                       
                                       <?php
                                       }
                                      foreach($value['suborders'] as $val)
                                      {
                                               if($val['customer_id']=$value['id'])
                                               { 
                                                   
                                                   
                                                   
                                               ?>
                                                           <tr>
                                                           <td></td>
                                                           <td></td>
                                                           <td></td>
                                                           <td>"<?php echo $val['order_no']; ?>"</td>
                                                           <td> <?php  if($val['in_production_return']>0) { echo $val['in_production_return'];  }   ?></td>
                                                           <td> <?php  if($val['in_production']>0) { echo $val['in_production'];  }   ?></td>
                                                           <td> <?php  if($val['Sheet_in_Factory']>0) { echo $val['Sheet_in_Factory'];  }   ?></td>
                                                           <td> <?php  if($val['Transit']>0) { echo $val['Transit'];  }   ?></td>
                                                           <td> <?php echo $val['user_id']; ?></td>
                                                           <td><?php echo $val['create_date']; ?></td>
                                                           <td> </td>
                                                           <td></td>
                                                           </tr>
                                               
                                               <?php
                                               }
                                       
                                      }
                                       
                                   }
                                       
                                    ?>
                                    
                                    
                                    
                                    <?php
                                       
                                       
                                   }
                                     
                                   
                                   ?>
                                   
                                  
                                    
                                   
                                   
                                  <?php
                                  
                                  
                                  $i++;
                                   }
                                  ?>
    
                              
                             </thead> 
                             
                        </table>
                        
                    
                  
                    <?php

                
                

    }
    
    
    
    
    
    
    
    
    
    
    
    
    public function fetch_data_sales_balance_report_export()
    {


           
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                   
                      $payment_mode=$_GET['payment_mode'];
                     
                     $stat=' ';
                     
                     if($payment_mode!='undefined') 
                     {   
                         if($payment_mode!='ALL') 
                         {
                             $stat.=' AND a.payment_mode="'.$payment_mode.'"';
                         }
                         
                         
                     }
                     
                     if($order_status=='undefined') 
                     {
                         
                     
                      $stat.=' AND a.finance_status IN ("3","4")';
                      
                      $stat.=' AND a.assign_status IN ("1","2","3","11","12")';
                      
                     }
                     else
                     {
                         
                         if($order_status=='ALL')
                         {
                              $stat.=' AND a.finance_status IN ("3","4")';
                              $stat.=' AND a.assign_status IN ("1","2","3","11","12")';
                         }
                         else
                         {
                             
                              $order_status=explode(',', $order_status);
                              $order_status=implode("','", $order_status);
                              $stat.=' AND a.finance_status IN ("3","4")';
                              $stat.=" AND a.assign_status IN ('$order_status')";
                            
                             
                         }
                        
                     }
                     
                     
                     
                     $userslog="";
                  
                    
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                             $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                                
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                              $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  a.user_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                         $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  a.sales_group IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                      if($_GET['formdate']=='undefined')
                     {
                         
                        
                         $formdate=date('Y-m-01');
                         $todate=date('Y-m-t');
                         $result=$this->db->query("SELECT a.*,b.company_name,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND  a.deleteid=0 AND a.order_base='1' $stat $userslog ORDER BY a.id DESC");
                     
                     }
                     else
                     {
                         
                       $result=$this->db->query("SELECT a.*,b.company_name,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND a.order_base='1' $stat $userslog ORDER BY a.id DESC");
                       
                     }
                    
                     $result=$result->result();
                     
                     
                     
                 
                     
                     
                     $i=1;
                    
                 
                  
                   
                  
                         $filename='Sales_order_balance_report_'.$formdate.'_TO_'.$todate; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                         header("Expires: 0");
                  ?>
                  
                    <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"    style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                         <thead>
                             
                             
                              <tr><th colspan="8">Sales Balance Report <?php echo $formdate; ?> To <?php echo $todate; ?></th></tr>
                           
                          
                         </thead> 
                         
                    </table>
                  
                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr style="text-align: left;">


                          <th>No</th>
                          <th>Date</th>
                          <th>Order No</th>
                          <th>Customer Name</th>
                          <th>Bill Amount</th>
                          <th>Collection</th>
                          <th>Pending Amount</th>
                          <th>Status</th>
                          <th>Payment Mode</th>
                          <!--<th>Payment Status</th>-->
                         
            
                        </tr>
                      </thead>
                        <tbody>
                            
                            <?php
                            
                                                   $pending_amounttotal=0;
                                                   $collectamounttotal=0;
                                      $overalltotal=0;
                                     foreach ($result as  $value) {
                                         
                                         
                                           
                                            
                                            
                                     
                                            
                                             
                                     $sales_group="";
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id='".$value->sales_group."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group=$val->name;
                         
                                    }
                                    
                                    
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_team=$val->name;
                         
                                    }
                                   
                                     $sales_head="";
                                     $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id='".$value->sales_head."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_head=$val->name;
                         
                                    }
                                         
                                         
                                                                         $status="Order Completed";
                                                 if($value->assign_status=='11')
                                                 {
                                                     $status='UN Dispatched / Sheet In Factory';
                                                 }
                                                 
                                                 if($value->assign_status=='12')
                                                 {
                                                     $status='Driver UN-Picked';
                                                 }
                                                 
                                                 if($value->assign_status=='1')
                                                 {
                                                     $status='Trip Not Started';
                                                 }
                                                 
                                                 
                                                 if($value->assign_status=='2')
                                                 {
                                                     $status='Trip Started & Un-Delivered';
                                                 }
                                                 
                                                 if($value->assign_status=='3' && $value->finance_status=='4')
                                                 {
                                                     $status='Delivered & Pending collection';
                                                 }
                                                 
                                                 if($value->assign_status=='3' && $value->finance_status=='4')
                                                 {
                                                    $payment_status='Pending';
                                                 }
                                                 else
                                                 {
                                                     $payment_status='Pending';
                                                 }
                                                                         
                                                 $overalltotal+=$total;
                                                 
                                                 
                                                  $overalltotal+=$total;
                                                   $pending_amounttotal+=$value->pending_amount;
                                                   $collectamounttotal+=$value->collectamount;
                            
                                        ?>
                                          <tr >
                          
                                          <td><?php echo $i; ?></td>
                                          <td><?php echo date('d-m-Y',strtotime($value->create_date)); ?></td>
                                          <td>"<?php echo $value->order_no; ?>"</td>
                                          <td><?php echo $value->company_name; ?></td>
                                          
                                          <td><?php echo $value->bill_amount; ?></td>
                                          
                                          <td><?php echo $value->collectamount; ?></td>
                                          <td><?php echo $value->pending_amount; ?></td>
                                          
                                          <td><?php echo $status; ?></td>
                                          <td><?php echo $value->payment_mode; ?></td>
                                          <!--<td><?php echo $payment_status; ?></td>-->
                                         
                          
                                            
                                        </tr>
                                        <?php
                                        
                                        
                                        
                                        
                                        $i++;
                                     }
                            
                            ?>
                      
                        
                        
                                
                                          <td></td>
                                          <td></td>
                                          <td></td>
                                          <td></td>
                                          <td><b><?php echo  round($overalltotal,2); ?></b></td>
                                          <td><b><?php echo  round($collectamounttotal,2); ?></b></td>
                                          <td><b><?php echo  round($pending_amounttotal,2); ?></b></td>
                                          <td></td>
                     
                      
                         
                        
                      
                      </tbody>
                    </table>
                  <?php
                  
                  
                  
                  
                  
                  
                  
                  

    }
    
    
    
    
    
    
    
    
    
     public function fetch_data_sales_team_report_export()
    {






        $customer_id=$_GET['customer_id'];
        $cateid=$_GET['sales_group'];
        $filterStatus=$_GET['active_status'];
       //  $sales_group=$_GET['sales_group'];
        $productid=$_GET['productid'];
        $limit=$_GET['limit'];
        $formdate=$_GET['formdate'];
        $todate=$_GET['todate'];
        $order_status=$_GET['order_status'];
        $payment_mode=$_GET['payment_mode'];

        $pagenum = $_GET['page'];
        $pagesize = $_GET['size'];
        $offset = ($pagenum - 1) * $pagesize;

        $showMode = $_GET['showMode'];
        

        $stat=' ';
        $userslog="";
       $usersgroup="";
      
       if($cateid>0)
       {
            $userslog.=' AND b.sales_member_id="'.$cateid.'"';
       }


      



           if($this->session->userdata['logged_in']['access']=='17')
       {
             $sales_team_id=array();
             $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
             $resultsales_team=$query->result();
             foreach ($resultsales_team as  $values) {

                 $sales_team_id[]=$values->define_saleshd_id;

             }


             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
             foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->define_saleshd_id;
             }

              $sales_team_id="'".implode("','", $sales_team_id)."'";
              $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';

       }


       if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
       {



                    $sales_team_id = array($this->userid);
               $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
               foreach ($resultsales_team as $values) {
                   $sales_team_id[] = $values->sales_member_id;
               }


               $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
               foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->id;
               }

             $sales_team_id="'".implode("','", $sales_team_id)."'";

             $userslog.=' AND  b.sales_member_id IN ('.$sales_team_id.')';



       }



       function refineValue($value){
           if($value != 0 && $value != ''){
            $val =  round($value * pow(10, 2)) / pow(10, 2);
               return  round($val,2);
           }else{
               return 0;
           }

        }

        $search = $_GET['search'];
       
        $searchsql2="";
        if($search!="")
        {
            $searchsql=" AND  aa.name LIKE'%".$search."%'";
            $searchsql2=" AND aa.name LIKE'%".$search."%' ";
        }
        $searchsql="";
        if($status == 'false'){
            $searchsql = " AND aa.status = 1 ";
        }

      
         $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND aa.sales_group_id != 40  AND aa.sales_group_id != 41  $userslog $usersgroup $searchsql2 GROUP BY a.id ORDER BY a.name ASC");
         $result=$result->result();
        $array=array();
        $totals = array(
        'target' => 0,
        'bill_actual'=>0,
        'bill_total'=>0,
        'bill_returns'=>0,
        'required_target'=>0,
        'perc'=>0
        );
 foreach ($result as  $valuessg)
        {
                        $resultsubdata=$this->db->query("SELECT aa.username,aa.id,aa.target,aa.status,aa.phone FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 AND aa.access=12 AND a.id='".$valuessg->sales_group_id."' AND aa.id != 1801 $userslog $searchsql2  GROUP BY aa.id ORDER BY aa.name ASC");
                        $resultsubdata=$resultsubdata->result();
                        $subresult=array();
                        $i=1;
                        $teamTotal = array(
                            'target' => 0,
                            'bill_actual'=>0,
                            'bill_total'=>0,
                            'bill_returns'=>0,
                            'required_target'=>0,
                            'perc'=>0
                        );
                     foreach ($resultsubdata as  $val)
                        {
                            $billTotal = 0;
                            $billReturns = 0;
                            $billData = $this->db->query("SELECT  a.bill_total,a.return_id,a.id,a.order_no  FROM orders_process as a WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.user_id IN (".$val->id.") AND a.customer_id NOT IN (33334,37743) AND a.deleteid != 1 AND a.order_base > 0 $searchsql ORDER BY a.id DESC")->result();
                            foreach($billData as $entry){
                                     //Not a return
                                    $billTotal = $billTotal + $entry->bill_total;
                                    $teamTotal['bill_total']  = $teamTotal['bill_total'] + refineValue($entry->bill_total);
                            
 



                             
                        } 
             

                              
                        $query_profle_get = $this->db->query("SELECT bill_total FROM `order_sales_return_complaints` a JOIN customers as b ON a.customer=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id
                        WHERE (sg.sales_member_id = '".$val->id."') AND  a.deleteid = '0' AND a.remarks = 'Return To Re-sale' AND a.customer NOT IN (33334,37743) AND
                                        a.update_date BETWEEN '".$formdate."' AND '".$todate."'  ");
                        
                     
                                       $result_lengeth = $query_profle_get->result();
       
                                         foreach ($result_lengeth as $valuess)
                                        {      
                                                 $billReturns = $billReturns + $valuess->bill_total;
                                                 $teamTotal['bill_returns'] += $valuess->bill_total;
                                         }
                                       if($val->id=='106')
                                      {
                                       $billReturns=$billReturns+61.1;
                                       $teamTotal['bill_returns']  = $teamTotal['bill_returns'] + refineValue($billReturns+61.1);
                                      }
       
                              // print_r($billData);
                                   // exit;
                                   //Bill Actual
                                   $billActual = $billTotal - $billReturns;
                                   $teamTotal['bill_actual'] +=  $billActual;
                                   //Salesperson Target
                                   $target = $val->target;
                                   $teamTotal['target'] += $target;
       
                                   $daysInMonth = cal_days_in_month(CAL_GREGORIAN, date('m',strtotime($formdate)), date('Y',strtotime($formdate)));
                                   
                                   //Target and days remaining calculation
                                   $reqTarget = ($target/$daysInMonth) * date('d',strtotime($todate));
                                   $teamTotal['required_target'] +=  $reqTarget;
       
                                   //Status
                                   $status = $billActual <= $reqTarget ? 'UNDER TARGET' : 'AHEAD';
                                   if($billActual && $reqTarget){
                                       $perc = ($billActual / $reqTarget) * 100;
                                   }else{
                                       $perc = 0;
                                   }
                                    if($filterStatus == 'true' || $val->status == '1'){
                                       $subresult[] = array(
                                           'no' => $i,
                                           'id' => $val->id,
                                           'sales_team' => $val->username,
                                           'phone' => $val->phone,
                                           'target' => refineValue($target),
                                           'bill_total' => refineValue($billTotal),
                                           'bill_actual' => refineValue($billActual),
                                           'bill_returns' => refineValue($billReturns),
                                           'required_target' => refineValue($reqTarget),
                                           'perc' => refineValue($perc),
                                           'status' => $status,
                                         );
                                         $i++;
                                    }
                                   
                               }
                               if($teamTotal['bill_actual'] && $teamTotal['required_target']){
                                   $teamTotal['perc'] = $teamTotal['bill_actual'] / $teamTotal['required_target']  * 100;
                               }else{
                                   $teamTotal['perc']  = 0;
                               }
                              
                                   $teamTotal['target'] = refineValue( $teamTotal['target']) ;
                                   $totals['target'] += $teamTotal['target'];
       
                                   $teamTotal['bill_actual'] =  refineValue($teamTotal['bill_actual']) ;
                                   $totals['bill_actual'] += $teamTotal['bill_actual'];
       
                                   $teamTotal['bill_total'] =  refineValue($teamTotal['bill_total']) ;
                                   $totals['bill_total'] += $teamTotal['bill_total'];
       
                                   $teamTotal['bill_returns'] =  refineValue($teamTotal['bill_returns']) ;
                                   $totals['bill_returns'] += $teamTotal['bill_returns'];
       
                                   $teamTotal['required_target'] = refineValue($teamTotal['required_target']) ;
                                   $totals['required_target'] += $teamTotal['required_target'];
       
                                   $teamTotal['perc'] =  refineValue($teamTotal['perc']);
                           
                                $array[] = array(
                                      'id' => $valuessg->sales_group_id,
                                      'sales_group_name' => $valuessg->sales_group_name,
                                      'team_total'=> $teamTotal,
                                      'subarray'=>$subresult
                                  );
       

        }
     // exit;
        $arrayMain = array();
        $arrayMain[] = $array;
        $arrayMain['topaaz'] = $this->generateReportSpecific(33334,$formdate,$todate,$totals);
        $arrayMain['arasf'] =  $this->generateReportSpecific(37743,$formdate,$todate,$totals);
        $totals['perc'] = refineValue((($totals['bill_actual'] / $totals['required_target']) * 100));
        $totals['required_target'] = refineValue($totals['required_target']);
        // $totals['required_target'] = refineValue($totals['required_target']);

        $totals['bill_actual'] =  $totals['bill_actual'] + $arrayMain['topaaz']['bill_actual'] + $arrayMain['arasf']['bill_actual'];
        $totals['bill_total'] = $totals['bill_total'] + $arrayMain['topaaz']['bill_total'] + $arrayMain['arasf']['bill_total'];
        $totals['bill_returns'] = $totals['bill_returns'] + $arrayMain['topaaz']['bill_returns'] + $arrayMain['arasf']['bill_returns'];
        $arrayMain['totals'] = $totals;

// print_r($totals);
// exit;

                         $filename='Sales_Team_Order_Report'.$formdate.'_TO_'.$todate;
                         header("Content-Type: application/xls");
                         header("Content-Disposition: attachment; filename=$filename.xls");
                         header("Pragma: no-cache");
                         header("Expires: 0");
                  ?>

                                        <table border="1">
                                                <thead>
                                                <tr>


                                                    <th colspan="9" style="text-align:center">Sales Team Order Report <?=$formdate?> to <?=$todate?></th>

                                                    </tr>
                                                    <tr>


                                                        <th>No</th>
                                                        <th  >Name</th>
                                                        <th style="width:100px">Target</th>
                                                        <th style="width:100px"> Sales</th>
                                                        <th style="width:100px"> Return </th>
                                                        <th style="width:100px"> Actual </th>
                                                        <th style="width:100px">Required Target</th>
                                                        <th style="width:100px">Status</th>
                                                        <th style="width:100px">%</th>

                                                    </tr>
                                                </thead>
                                                <tbody >
                                                    <?php
                                                foreach($arrayMain[0] as $entry){
                                                    ?>
                                                    <tr>
                                                        <td colspan="9" style="text-align:center;font-weight:bold;" ><?=$entry['sales_group_name']?></td>
                                                    </tr>

                                                    <?php 
                                                    foreach($entry['subarray'] as $sl){
                                                    ?>
                                                    <tr>
                                                        <td > <?=$sl['no']?></td>
                                                        <td><?=$showMode == '' ? $sl['sales_team'] : $sl['phone'].'('.$sl['sales_team'].')'?></td>
                                                        <td >
                                                        <?=$sl['target']?></div>
                                                        </td>
                                                        <td  > <?=$sl['bill_total']?></td>
                                                        <td  ><?=$sl['bill_returns']?></td>
                                                        <td ><?=$sl['bill_actual']?></td>
                                                        <td ><?=$sl['required_target']?></td>
                                                        <td style="color:<?=$sl['status'] == 'UNDER TARGET' ? 'red' : 'green'?>;text-align:center; "><b><?=$sl['status']?></b></td>
                                                        <td>
                                                        <?=$sl['perc']?>%
                                                        </td>
                                                    </tr>

                                                    <?php 
                                                                             }

                                                                              
                                                    if($entry['team_total']){
?>
                                                        <tr style="background-color: #efefef;">
                                                        <td > </td>
                                                        <td style="text-align:center;font-weight:bold;">TOTAL</td>
                                                        <td ><?=$entry['team_total']['target']?> </td>
                                                        <td ><?=$entry['team_total']['bill_total']?></td>
                                                        <td ><?=$entry['team_total']['bill_returns']?></td>
                                                        <td ><?=$entry['team_total']['bill_actual']?></td>
                                                        <td ><?=$entry['team_total']['required_target']?></td>
                                                        <td></td>
                                                        <td>
                                                             <?=$entry['team_total']['perc']?>%
                                                        </td>
                                                    </tr>
<?php 
                                                    }


                                                                }
                                                    ?>
                                                </tbody>

                                                <tbody>


                                                    <tr>

                                                        <td colspan="9" style="text-align:center">OTHERS</td>

                                                    </tr>

                                                    <tr>
                                                        <td ></td>
                                                        <td style="color:red">Topaaz</td>
                                                        <td >-</td>
                                                        <td><?=$arrayMain['topaaz']['bill_total']?></td>
                                                        <td><?=$arrayMain['topaaz']['bill_returns']?></td>
                                                        <td><?=$arrayMain['topaaz']['bill_actual']?> </td>
                                                        <td>-</td>
                                                        <td>-</td>
                                                        <td>-</td>

                                                    </tr>

                                                    <tr>
                                                        <td > </td>
                                                        <td style="color:red">Arasfirma</td>
                                                        <td>-</td>
                                                        <td><?=$arrayMain['arasf']['bill_total']?></td>
                                                        <td><?=$arrayMain['arasf']['bill_returns']?></td>
                                                        <td><?=$arrayMain['arasf']['bill_actual']?> </td>
                                                        <td>-</td>
                                                        <td>-</td>
                                                        <td>-</td>

                                                    </tr>

                                                    <tr style="background-color: #efefef;">
                                                        <td  > </td>
                                                        <td style="color:red;font-weight:bold">GRAND TOTAL</td>
                                                        <td><?=$totals['target']?></td>
                                                        <td><?=$totals['bill_total']?></td>
                                                        <td><?=$totals['bill_returns']?> </td>
                                                        <td><?=$totals['bill_actual']?> </td>
                                                        <td><?=$totals['required_target']?></td>
                                                        <td>-</td>
                                                        <td><?=$totals['perc']?>%</td>

                                                    </tr>



                                                </tbody>


                                            </table>



                  <?php













    }
    
    
        public function fetch_data_sales_report_export()
    {









  
           
                    
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_status=$_GET['order_status'];
                     
                     
                    $stat="";
                     if($order_status!='ALL') 
                     {
                          $stat=' AND a.finance_status="'.$order_status.'"';
                     }   
                     if(isset($_GET['sales_group']))
                    {
                        if($_GET['sales_group']!='ALL') 
                         {
                              $stat.=' AND sg.sales_group_id="'.$_GET['sales_group'].'"';
                         } 
                         else
                         {
                             $stat.='';
                         }
                    }
                    
                    
                    
                    
                    
                    
                    
                    $userslog="";
                   
                    
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                                 
                          $sales_team_id = array($this->userid);
                             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                             foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                             }
                             $sales_team_id = "'" . implode("','", $sales_team_id) . "'";
                             $userslog.= ' AND  a.entry_user_id IN (' . $sales_team_id . ')';
                                  
                                 
                    }
                    
                     if($this->session->userdata['logged_in']['access']=='20')
                    {
                                 
                         $userslog.=' AND a.user_id="'.$this->userid.'"';        
                                 
                    }
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          
                           $sales_team_id="'".implode("','", $sales_team_id)."'";
                           $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                                 
                    }
                    
                    
                    if($this->session->userdata['logged_in']['access']=='16')
                    {
                        
                        
                        
                         $sales_team_id = array($this->userid);
                          $query = $this->db->query("SELECT id FROM `sales_group`  WHERE sales_group_head='".$this->userid."'");
                          $resultsales_team=$query->result();
                          foreach ($resultsales_team as  $values) {
                              
                              $sales_team_id[]=$values->id;
                              
                          }
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                          $userslog.=' AND  sg.sales_group_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                     
                     if($_GET['formdate']=='undefined')
                     {
                         
                         $formdate=date('Y-m-d');
                         $todate=date('Y-m-d');
                         $result=$this->db->query("SELECT a.*,b.company_name,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND a.order_base='1' $stat $userslog GROUP BY a.id ORDER BY a.id DESC");
                    
                     }
                     else
                     {
                         
                          $result=$this->db->query("SELECT a.*,b.company_name,b.locality,b.tcs_status,b.sales_team_id,b.sales_group,b.sales_head FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN sales_member_group as sg ON b.sales_team_id=sg.sales_member_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND a.order_base='1' $stat $userslog GROUP BY a.id ORDER BY a.id DESC");
                    
                     }
                     
                    
                       $result=$result->result();
                     
                     
                     
                 
                     
                     
                     $i=1;
                    
                 
                  
                   
                  
                         $filename='Sales_Group_report_'.$formdate.'_TO_'.$todate; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                        header("Expires: 0");
                  ?>
                  
                    <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"    style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                         <thead>
                             
                             
                              <tr><th colspan="8">Sales Day Book <?php echo $formdate; ?> To <?php echo $todate; ?></th></tr>
                           
                          
                         </thead> 
                         
                    </table>
                  
                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr style="text-align: left;">


                          <th> No</th>
                          <th>Date</th>
                          <th>Invoice No</th>
                          <th>Customer Name</th>
                          <th>Area</th>
                          <th>Net Amount</th>
                          <!--<th>GST</th>
                          <th>Gross</th>-->
                          <th>Sales Group</th>
                          <th>Sales Head</th>
                          <th>Sales Team</th>
                          <th>Status</th>
            
                        </tr>
                      </thead>
                        <tbody>
                            
                            <?php
                                      $overalltotal=0;
                                     foreach ($result as  $value) {
                                         
                                         
                                          
                                      
                                         
                                         
                                         
                                         
                                         
                                                               $routename="";
                                                               $result_account_head=$this->db->query("SELECT a.name FROM locality as a JOIN route as r ON a.route_id=r.id WHERE  a.id='".$value->locality."'");
                                                               $result_account_head_text=$result_account_head->result();
                                                              
                                                               foreach($result_account_head_text as $ass)
                                                               {
                                                                                        $routename=$ass->name;
                                                                                       
                                                               }
                                                                
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                          
                                        
                                        
                                            
                                             
                                     $sales_group_data=explode('|', $value->sales_group);
                                        

                                     $sales_group_name=array();
                                     $sales_group_s=$this->db->query("SELECT name FROM sales_group  WHERE deleteid=0 AND id IN ('".implode("','", $sales_group_data)."') ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_group_name[]=$val->name;
                         
                                    }
                                    $sales_group=implode(",", $sales_group_name);
                                    
                                    
                                    
                                     $sales_team="";
                                     $sales_group_s=$this->db->query("SELECT name,define_saleshd_id FROM admin_users  WHERE deleteid=0 AND access='12' AND id='".$value->sales_team_id."' ORDER BY id DESC");
                                     $sales_group_ss=$sales_group_s->result();
                                    
                                     foreach($sales_group_ss as $val)
                                     { 
                                       
                                      
                                               $sales_team=$val->name;
                                               $define_saleshd_id=$val->define_saleshd_id;
                         
                                    }
                                   
                                           $define_saleshd_id=explode('|', $define_saleshd_id);
                                    
                                             $sales_head_name=array();
                                             $sales_group_s=$this->db->query("SELECT name FROM admin_users  WHERE deleteid=0 AND access='11' AND id IN ('".implode("','", $define_saleshd_id)."') ORDER BY id DESC");
                                             $sales_group_ss=$sales_group_s->result();
                                            
                                             foreach($sales_group_ss as $val)
                                             { 
                                               
                                              
                                                     $sales_head_name[]=$val->name;
                                 
                                            }
                                            
                                             $sales_head=implode(",", $sales_head_name);
                                         
                                         
                                                 $status="Order Completed";
                                                 if($value->finance_status=='3')
                                                 {
                                                     $status='Finance Approved';
                                                 }
                                                 if($value->finance_status=='4')
                                                 {
                                                     $status='Delivered';
                                                 }
                                                 if($value->finance_status=='5')
                                                 {
                                                     $status='Reconciliation Completed';
                                                 }
                                                 
                                                 $overalltotal+=$value->bill_total;
                            
                                        ?>
                                          <tr >
                          
                                          <td><?php echo $i; ?></td>
                                          <td><?php echo date('d-m-Y',strtotime($value->create_date)); ?></td>
                                          <td>"<?php echo $value->order_no; ?>"</td>
                                          <td><?php echo $value->company_name; ?></td>
                                            <td><?php echo $routename; ?></td>
                                           <td><?php echo $value->bill_total; ?></td>
                                         <!-- <td>18 %</td>
                                          <td><?php echo $value->bill_total; ?></td>-->
                                          <td><?php echo $sales_group; ?></td>
                                          <td><?php echo $sales_head; ?></td>
                                          <td><?php echo $sales_team; ?></td>
                                          
                                          <td><?php echo $status; ?></td>
                                          
                                       
                          
                                            
                                        </tr>
                                        <?php
                                        
                                        
                                        
                                        
                                        $i++;
                                     }
                            
                            ?>
                      
                        
                        
                                
                                          <td></td>
                                          <td></td>
                                          <td></td>
                                          <td></td>
                                          <td><b><?php echo  round($overalltotal,2); ?></b></td>
                                          <td></td>
                     
                        
                         
                        
                      
                      </tbody>
                    </table>
                  <?php
                  
                  
                  
                  
                  
                  
                  
                  

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


     public function productlist()
    {
                $form_data= json_decode(file_get_contents("php://input"));
               


                      $cate_id= $form_data->cate_id;

                        // $product_list = $this->Main_model->where_names_order_by('product_list','id',$id,'id','ASC');

                        // foreach($product_list as $vl)
                        // {
                        // $categories_id=$vl->categories_id;
                        // }

                        // $data['id'] = $id;

                        $categories_id= $cate_id;

                     $array =array();
                     if($cate_id!=0)
                     {


                     $resultpending= $this->Main_model->where_names_two_order_by('product_list','deleteid',0,'categories_id',$cate_id,'product_name','ASC');

                     foreach ($resultpending as  $value) {


                            $array[] = array(
                                'id'=>trim($value->id),
                                'product_name'=>$value->product_name
                               );




                     }
                             $array['categories_id'] = $cate_id;

                     }


                     echo json_encode($array);





    }



    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
        public function fetch_data_get_ledger_view_all_base_by()
    {

                    
                    $accountshead=0;
                    if(isset($_GET['accountshead']))
                    {
                         $accountshead=$_GET['accountshead'];
                     
                    }
                   
                      if(isset($_GET['deleteid']))
                     {
                         
                          $deleteid=$_GET['deleteid'];
                     }
                     else
                     {
                          $deleteid=0;
                     }
                     
                     $qq="";
                     $St="";
                     if($accountshead!='0')
                     {
                         $qq=' AND account_head_id='.$accountshead;
                     }

                       if($accountshead=='72')
                     {
                         $qq=" AND account_head_id IN ('14','15','16','17','18','20','21','22','23','24','25','27','28','29','30','31','32','33','34','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','53','54','55','57','64','65','66','67','73','74','75','76','77','78','79','80','81','134','135','136','137','138','141','143','144','147','148','152','153')";
                     }
                     
                     if($accountshead=='116')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                      if($accountshead=='123')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='119')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='2')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='68')
                     {
                         $qq=' AND party_type=1';
                     }

                      if($accountshead=='380')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=372';
                     }

                     if($accountshead=='381')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='382')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=142 AND tcs_status=1';
                     }



                     if($accountshead=='155')
                     {
                         $qq=' AND party_type=2 AND driver_collection_status=1';
                     }

                     if($accountshead=='104')
                     {
                         $qq=' AND party_type IN ("3","5") AND account_head_id='.$accountshead;
                     }
                     
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     if($accountshead==107 || $accountshead==106 || $accountshead==105)
                     {
                         //$party_type=4;
                         
                     }
                     
                     
                     
                     $Stl="";
                     $banksteup_bank="";
                     $internal_payment_status=1;
                     if(isset($_GET['payment_status']))
                     {
                              $payment_status=$_GET['payment_status'];
                              
                              if($payment_status!='')
                              {
                                      if($payment_status=='1')
                                      {
                                          //$Stl=' AND account_head_id IN ("105","106","107")';
                                          
                                         
                                          $payment_mode='Cash';
                                          $banksteup1=" AND bank_id IN ('25','24') AND order_trancation_status=0 AND opening_balance_status=0";
                                          $banksteup_bank=" AND bank_account_id  IN ('25','24')";
                                      }
                                      else
                                      {
                                          
                                         $payment_mode='NON Cash';
                                        // $Stl=' AND account_head_id  NOT IN ("105","106","107")';
                                         $banksteup1=" AND bank_id NOT IN ('0','25','24') AND  order_trancation_status=0 AND opening_balance_status=0";
                                         $banksteup_bank=" AND bank_account_id NOT IN ('0','25','24')";
                                      } 
                                  
                              }
                              
                         
                         
                     }
                     
                     
                     
                   
                    
                                  if($party_type=='All')
                                  {
                                      $St=' ';
                                  }
                                  else
                                  {
                                      $St=' AND party_type='.$party_type;
                                  }
                          
                         
                            if($accountshead!='0')
                            {
                                
                                 switch ($accountshead) {
                                
                                    case 48:
                                        $result4=$this->db->query("SELECT  a.*, SUM(a.credits - a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id = b.id 
                                        WHERE a.deleteid = '0' AND a.party_type = 5 AND a.account_head_id IN ('48') AND comission_transfered NOT IN ('5')
                                        GROUP BY a.customer_id ORDER BY a.id ASC");
                                    break;
                                default:
                                       $result4=$this->db->query("SELECT all_ledgers.*,
                                        CASE 
                                            WHEN (all_ledgers.reference_no = all_ledgers.order_no)
                                                THEN (all_ledgers.debits - COALESCE(op.roundoff, 0) - COALESCE(op.tcsamount, 0) + COALESCE(op.discount,0))
                                            ELSE all_ledgers.debits
                                        END as debits FROM all_ledgers LEFT JOIN orders_process op ON (all_ledgers.order_id = op.id OR all_ledgers.order_id = 0 OR all_ledgers.order_id IS NULL)  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  all_ledgers.deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                    break;
                                }
                                
                                
                            }
                            else
                            {



                                if($accountshead=='0')
                     {



 $result4=$this->db->query("SELECT *  FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY id DESC");

                     }
                     else
                     {
                        $result4=$this->db->query("SELECT *,
                                CASE 
                                WHEN (all_ledgers.order_id IS NOT NULL AND all_ledgers.order_id != 0 AND all_ledgers.order_no != '')
                                    THEN SUM(all_ledgers.debits - op.roundoff - op.roundoff)
                                ELSE all_ledgers.debits 
                                END as debits  FROM all_ledgers JOIN orders_process op ON op.id = all_ledgers.order_id  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  all_ledgers.deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");

                     }
                               
                                
                                
                                 
                                
                            }
                              
                              
                              
                              
                              
                     $array5=array();   
                     
                   
                     
                     if($accountshead=='0')
                     {
                         
                     $result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  `create_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='".$deleteid."'  $banksteup_bank ORDER BY id DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                             $query = $this->db->query("SELECT id,bank_name FROM bankaccount  WHERE deleteid='".$deleteid."' AND id='".$value->bank_account_id."' ORDER BY bank_name ASC");
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $bank_name=$partys->bank_name.' (Bank AC)';
                                                        $customer_id=$partys->id;
                             }
                             
                                $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             $url='bankaccount/statement?bank_id='.$customer_id.'&name='.$bank_name;
                              $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                         
                         
                         
                         
                         
                         
                                       $username="";
                                       $resultvent= $this->Main_model->where_names('admin_users','id',$value->user_id);
                                       foreach ($resultvent as  $valuess) {
                                          $username= $valuess->name; 
                                          
                                         
                                       }
                                        
                         
                         
                         
                         
                         
                         
                         
                        //     $array5[] = array(
                            
                            
                        //     'no' => $ll, 
                        //     'id' => $value->id, 
                        //     'party_name' => $bank_name, 
                        //     'order_id' => '', 
                        //     'order_no' => '', 
                        //     'addclass' => $addclass,
                        //     'org_amount' => $value->amount,
                        //     'payment_mode' => $payment_mode, 
                        //     'reference_no' => $value->name,
                        //     'table'=>"bankaccount",
                        //     'link' => $url,
                        //     'username' => $username,
                        //     'invoice_link' => $invoice_link,
                        //     'notes' => $value->status_by.' | '.$value->deletemod, 
                        //     'amount' => 0, 
                        //     'paid_status' => $value->status, 
                        //     'Payoff' => $value->debit, 
                        //     'Payout' => $value->credit,
                        //     'debits' => $value->debit,
                        //     'credits' => $value->credit,
                        //     'process_by' => $value->status_by.' | '.$value->deletemod,
                        //     'bank_name'=>$bank_name,
                        //     'payment_date' => date('d-m-Y',strtotime($value->create_date)).' '.$value->create_time, 
                        //     'payment_time' => $value->create_time,
                        //     'accounthead'=>$account_head_idname
                        
                            

                        // );


                         
                         $ll++;
                     }
                     
                     }
                              
                              
                              
                              
                              
                              
                             
                     $result4=$result4->result();
                     $array3=array();
                    
                      
                    
                 
                     
                         
                     $l=$ll;
                     foreach ($result4 as  $value)
                     {
                       
                       
                            $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             
                             
                             
                           
                             if($value->debits==''){ $value->debits=0; }
                             if($value->credits==''){ $value->credits=0; }
                         
                            if($value->party_type==1)
                            {
                                $table='customers';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");
                                        
                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                        
                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                            }
                            
                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                             $party_name="";
                             $res=$query->result();


                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }
                             

                              if($value->party_type==5 || $value->party_type==7)
                            {
  $url=$traget.'/others_ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type;
                           
                            }
                             else
                             {
  $url=$traget.'/ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type;
                           
                              }

                           
                            
                            
                            $order_no=$value->order_no;
                             if (strpos($order_no, 'JE-') !== false) {
                                $stinc= '1';
                            }
                            else
                            {
                                $stinc=  '0';
                            }
                                                        
                            
                            if($stinc==1)
                            {
                                $val= explode('JE-', $order_no);
                                $invoice_link=base_url().'index.php/manual_journals/invoice/'.$val[1];
                                
                            }
                            else
                            {
                                
                                $invoice_link=0;
                            }
                            
                             
                             
                           $bank_name="";
                           $bank_name_dd= $this->Main_model->where_names('bankaccount','id',$value->bank_id);
                           foreach($bank_name_dd as $bb)
                           {
                               $bank_name=$bb->bank_name;
                              
                           }
                             
                           $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                              $valueset=$value->balance;
                                            
                                            if($valueset<0)
                                            {
                                                $getstatus=1;
                                            }
                                            else
                                            {
                                                $getstatus=0;
                                            }
                                            
                                             $total=abs($valueset);
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                       $username="";
                                       $resultvent= $this->Main_model->where_names('admin_users','id',$value->user_id);
                                       foreach ($resultvent as  $valuess) {
                                          $username= $valuess->name; 
                                          
                                         
                                       }
                                        
                         
                         
                            if($accountshead==2)
                            {
                                $value->debits=$value->credits;
                                $value->credits=0;
                                $account_head_idname="SALES RETURN";
                            }
                             if($accountshead==119)
                            {
                                $value->debits=$value->credits;
                                $value->credits=0;
                                $account_head_idname="PURCHASE ACCOUNT";
                            }

                              if($accountshead==155)
                            {
                                $value->debits=$value->credits;
                                 $value->credits=0;
                                $account_head_idname="AUTO EXPENSES";

                            }


                            if ($accountshead == 48) {
                                // case 48:
                                    
                                   if($value->totalsum>0)
                                    {
                                      $value->credits=$value->totalsum;
                                      $value->debits=0;
                                    }
                                    else
                                    {


                                        $value->debits=abs($value->totalsum);
                                        $value->credits=0;

                                    }
                                
                                //     break;
                              
                                // default:
                                
                                //     if($value->totalsum>0)
                                //     {
                                //       $value->credits=$value->totalsum;
                                //       $value->debits=0;
                                //     }
                                //     else
                                //     {


                                //         $value->debits=abs($value->totalsum);
                                //         $value->credits=0;

                                //     }
                                
                                }

                     
                         
                            $array3[] = array(
                            
                            
                            'no' => $l+1, 
                            'id' => $value->id, 
                            'party_name' => $party_name, 
                            'addclass' => $addclass, 
                            'org_amount' => $value->org_amount, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'table'=>"all_ledgers",
                            'link' => $url,
                            'username' => $username,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->notes.' | '.$value->deletemod, 
                            'amount' => $value->amount, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                            'process_by' => $value->process_by.' | '.$value->deletemod,
                            'balance' => $total,
                            'getstatus' => $getstatus,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)).' '.$value->payment_time, 
                            'payment_time' => $value->payment_time,
                            'accounthead'=>$account_head_idname
                        
                            

                        );


                        $l++;

                     }
                     
                     
                     
              
                     
                     
                     
                     
                    $arrayval=array_merge($array5,$array3);

                     echo json_encode($arrayval);
                     
                     
                     

    }
    
    





















































    
        public function fetch_data_get_ledger_view_all_base_by_beta()
    {

                    
                    $accountshead=0;
                    if(isset($_GET['accountshead']))
                    {
                         $accountshead=$_GET['accountshead'];
                     
                    }
                         
                         $grouped_val=0;
                     if(isset($_GET['grouped_val']))
                    {
                         $grouped_val=$_GET['grouped_val'];
                     
                    }
                   
                      if(isset($_GET['deleteid']))
                     {
                         
                          $deleteid=$_GET['deleteid'];
                     }
                     else
                     {
                          $deleteid=0;
                     }
                     
                     $qq="";
                     $St="";
                     if($accountshead!='0')
                     {
                         $qq=' AND account_head_id='.$accountshead;
                     }

                       if($accountshead=='72')
                     {
                         $qq=" AND account_head_id IN ('14','15','16','17','18','20','21','22','23','24','25','27','28','29','30','31','32','33','34','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','53','54','55','57','64','65','66','67','73','74','75','76','77','78','79','80','81','134','135','136','137','138','141','143','144','147','148','152','153')";
                     }
                     $qq2='';
                     if($accountshead=='116')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                         $qq2=' AND all_ledgers.order_id>0 AND all_ledgers.account_heads_id_2='.$accountshead;
                     }
                      if($accountshead=='123')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='119')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='2')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='120')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='68')
                     {
                         $qq=' AND party_type=1';
                     }

                      if($accountshead=='380')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=372';
                     }

                     if($accountshead=='381')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='382')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=142 AND tcs_status=1';
                     }



                     if($accountshead=='155')
                     {
                         $qq=' AND party_type=2 AND driver_collection_status=1';
                     }

                     if($accountshead=='104')
                     {
                         $qq=' AND party_type IN (3,5) AND account_head_id='.$accountshead;
                     }

                     // if($accountshead=='151')
                     // {
                     //     $qq=' AND party_type=5 AND customer_id=220';
                     // }
                     // if($accountshead=='156')
                     // {
                     //     $qq=' AND party_type=5 AND customer_id=332';
                     // }

                                               
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     //$formdate=date('Y-m-d',strtotime($formdate."-1 days"));
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     if($accountshead==107 || $accountshead==106 || $accountshead==105)
                     {
                         //$party_type=4;
                         
                     }
                     
                     
                     
                     $Stl="";
                     $banksteup_bank="";
                     $internal_payment_status=1;
                     if(isset($_GET['payment_status']))
                     {
                              $payment_status=$_GET['payment_status'];
                              
                              if($payment_status!='')
                              {
                                      if($payment_status=='1')
                                      {
                                          //$Stl=' AND account_head_id IN ("105","106","107")';
                                          
                                         
                                          $payment_mode='Cash';
                                          $banksteup1=" AND bank_id IN ('25','24') AND order_trancation_status=0 AND opening_balance_status=0";
                                          $banksteup_bank=" AND bank_account_id  IN ('25','24')";
                                      }
                                      else
                                      {
                                          
                                         $payment_mode='NON Cash';
                                        // $Stl=' AND account_head_id  NOT IN ("105","106","107")';
                                         $banksteup1=" AND bank_id NOT IN ('0','25','24') AND  order_trancation_status=0 AND opening_balance_status=0";
                                         $banksteup_bank=" AND bank_account_id NOT IN ('0','25','24')";
                                      } 
                                  
                              }
                              
                         
                         
                     }
                     
                     
                     
                   
                    
                                  if($party_type=='All')
                                  {
                                      $St=' ';
                                  }
                                  else
                                  {
                                      $St=' AND party_type='.$party_type;
                                  }
                          
                         
                            if($accountshead!='0')
                            {
                                
                                
                                
                                switch ($accountshead) {
                                case 126:


                                //NEW DATE
                                    //$Stset=" AND payment_date<='".$todate."'";
                                    $Stset=" AND payment_date BETWEEN '".$formdate."' AND '".$todate."'";



                                    $result4=$this->db->query("SELECT id,org_amount,amount,order_id,order_no,payment_mode,payment_date,payment_time,reference_no,party_type,process_by,payout,payin,paid_status,
                                    customer_id,user_id,deletemod,SUM(credits-debits) as totalsum,SUM(credits) as credits, SUM(debits) as debits,account_head_id FROM all_ledgers 
                                     WHERE    deleteid='".$deleteid."'  AND party_type NOT IN ('4','8','10')  $Stset  $banksteup1  $St $qq $Stl  GROUP by customer_id ORDER BY payment_date ASC");
                                    break;
                                
                                    case 2:
                                       $result4=$this->db->query("SELECT *, (CASE WHEN payment_date > '2024-05-31' THEN credits / 1.18 ELSE credits END) as witoutgstval  FROM all_ledgers
                                    WHERE  party_type=1 AND  deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                    break;
                                    case 154:


                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE  party_type=5 AND  deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0 $banksteup1   ORDER BY payment_date ASC");



                                    break;
                                     case 116:




                                    if($formdate=='2024-04-01')
                                    {
                                      $formdate='2023-06-01';
                                    }   

                                    //$result4=$this->db->query("SELECT a.*,SUM(b.amount) as amount FROM orders_process as a join order_product_list_process as b ON a.id=b.order_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.order_base>0 AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' GROUP BY a.id ORDER BY a.id ASC");


  $result4=$this->db->query("SELECT a.*,SUM(a.bill_sub_total) as amount FROM orders_process as a  WHERE a.deleteid=0  AND a.order_base NOT IN ('0','-2','-1') AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' GROUP BY a.id ORDER BY a.id ASC");


                                    break;
                                    case 119:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE    deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                    break;
                                    case 380:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE    deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND account_heads_id_2='372' AND party_type=5 ORDER BY payment_date ASC");
                                    break;
                                    case 381:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE    deleteid='".$deleteid."' AND `payment_date`<='".$todate."' AND party_type=5 $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                    break;
                                    case 382:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE    deleteid='".$deleteid."' AND `payment_date`<='".$todate."' AND account_heads_id_2='142' AND party_type=5 AND tcs_status=1 ORDER BY payment_date ASC");
                                    break;
                                   
                                    case 59:
                                       $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.account_head_id='59' AND a.payment_date<='".$todate."' group by a.customer_id ORDER BY a.id DESC");
                                    break;
                                    case 153:
                                  
                      $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='270' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                    break;
                                    case 141: 
                                    $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.account_head_id='141' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."'  GROUP BY a.customer_id ORDER BY a.id DESC");
                                    break;
                                    case 172:
                                    $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='3' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                    break;
                                    case 155:
                                    $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0  AND party_type=2 AND driver_collection_status=1 GROUP by customer_id ORDER BY payment_date ASC");
                                    break;
                                    case 170:



                                        $result4=$this->db->query("SELECT a.*,SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='180' AND a.payment_date<='".$todate."' ORDER BY a.id DESC");
                                    break;
                                    case 48:
                                        $result4=$this->db->query("SELECT  a.*, SUM(a.credits - a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id = b.id 
                                        WHERE a.deleteid = '0' AND a.party_type = 5 AND a.account_head_id IN ('48') AND a.comission_transfered NOT IN ('5') AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."'
                                        GROUP BY a.customer_id ORDER BY a.id DESC");
                                    break;
                                      case 106:
                                        $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='183' AND a.payment_date<='".$todate."' ORDER BY a.id DESC");
                                    break;
                                    case 152:
                                     $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.account_head_id='152' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' group by a.customer_id ORDER BY a.id DESC");
                                     break;
                                    case 164:
                                      $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='13' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                    break;
                                    case 136:
                                      $result4=$this->db->query("SELECT *, SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid='0' AND account_head_id=136 AND comission_transfered NOT IN ('5') AND payment_date BETWEEN '".$formdate."' AND '".$todate."' GROUP by customer_id ORDER BY payment_date ASC");
                                    break;

                                    case 142:
                                    //NEW DATE
                                    //$Stset=" AND payment_date<='".$todate."'";
                                    $Stset=" AND payment_date BETWEEN '".$formdate."' AND '".$todate."'";
                                     $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."' AND account_head_id='142' AND party_type NOT IN ('4','8','10') $Stset GROUP by customer_id ORDER BY payment_date ASC");
                                    break;
                                    case 129: case 130:  case 165: case 392: case 393: case 394: case 388:


                                    //NEW DATE
                                    //$Stset=" AND payment_date<='".$todate."'";
                                    $Stset=" AND payment_date BETWEEN '".$formdate."' AND '".$todate."'";


                                     $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."' $Stset  $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
                                    break;
                                    case 176: case 174: case 173:  case 168:
                                    $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
                                    break;
                                    case 104:
                                     // $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl GROUP by customer_id ORDER BY payment_date ASC");

                                      $result4=$this->db->query("SELECT *, (SUM(a.credits) - SUM(a.debits)) AS totalsum FROM all_ledgers AS a LEFT JOIN accountheads AS b ON a.customer_id = b.id  LEFT JOIN vendor AS c ON a.customer_id = c.id WHERE a.deleteid = '0' AND ((a.party_type ='5' AND b.name = 'grand max') OR (a.party_type = '3')) AND a.account_head_id = 104  AND c.mark_customer_id IN ('1','-1','0') AND a.customer_id !=61  AND a.payment_date<='".$todate."'  GROUP BY a.customer_id, b.name ORDER BY a.payment_date ASC");
  
                                    break;
                                    case 395:
                                     $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."' AND opening_balance_status=0 AND payment_date BETWEEN '".$formdate."' AND '".$todate."' $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
  
                                    break;
                                default:




                                $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
                                    break;
                                }
                               
                                 // $result4=$this->db->query("SELECT id,org_amount,amount,order_id,order_no,payment_mode,payment_date,payment_time,reference_no,party_type,process_by,payout,payin,paid_status,customer_id,user_id,deletemod,SUM(credits) as credits, SUM(debits) as debits,account_head_id,account_heads_id_2 FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl GROUP BY customer_id ORDER BY payment_date ASC");
                               
                                
                            }
                            else
                            {
                               
                                 $result4=$this->db->query("SELECT id,org_amount,amount,order_id,order_no,payment_mode,payment_date,payment_time,reference_no,party_type,process_by,payout,payin,paid_status,customer_id,user_id,deletemod,SUM(credits) as credits, SUM(debits) as debits,account_head_id,account_heads_id_2 FROM all_ledgers  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid='".$deleteid."'   $banksteup1 $St $qq $Stl GROUP BY customer_id,party_type ORDER BY id DESC");
                                
                                
                                 
                                
                            }
                              
                              


                              
                     $array5=array();   
                     
                   
                     
                     if($accountshead=='0')
                     {
                         
                     $result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  `create_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='".$deleteid."' AND internal_payment_status='".$internal_payment_status."' $banksteup_bank ORDER BY create_date DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                             $query = $this->db->query("SELECT id,bank_name FROM bankaccount  WHERE deleteid='".$deleteid."' AND id='".$value->bank_account_id."' ORDER BY bank_name ASC");
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $bank_name=$partys->bank_name.' (Bank AC)';
                                                        $customer_id=$partys->id;
                             }
                             
                                $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             $url='bankaccount/statement?bank_id='.$customer_id.'&name='.$bank_name;
                              $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                         
                         
                         
                         
                         
                         
                                       $username="";
                                       $resultvent= $this->Main_model->where_names('admin_users','id',$value->user_id);
                                       foreach ($resultvent as  $valuess) {
                                          $username= $valuess->name; 
                                          
                                         
                                       }
                                        
                         
                         
                            
                         
                            $array5[] = array(
                            
                            
                            'no' => $ll, 
                            'id' => $value->id, 
                            'party_name' => $bank_name, 
                            'order_id' => '', 
                            'order_no' => '', 
                            'addclass' => $addclass,
                            'org_amount' => $value->amount,
                            'payment_mode' => $payment_mode, 
                            'reference_no' => $value->name,
                            'table'=>"bankaccount",
                            'link' => $url,
                            'username' => $username,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->status_by.' | '.$value->deletemod, 
                            'amount' => 0, 
                            'paid_status' => $value->status, 
                            'Payoff' => $value->debit, 
                            'Payout' => $value->credit,
                            'debits' => $value->debit,
                            'credits' => $value->credit,
                            'process_by' => $value->status_by.' | '.$value->deletemod,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->create_date)), 
                            'payment_time' => $value->create_date,
                            'accounthead'=>$account_head_idname
                        
                            

                        );

                         
                         $ll++;
                     }
                     
                     }
                              
                              
                              
                              

                              
                     $result4=$result4->result();
                     $array3=array();
            
                      

                     
                         
                     $l=$ll;
                     $openingbl_cumulative = $this->fetch_data_get_ledger_view_all_total($accountshead,$formdate,$todate,$party_type,$deleteid,$limit);
                    $openingbalance = $openingbl_cumulative['balance'];
                      $cumulative_val= $openingbalance;



                     
                     foreach ($result4 as  $value)
                     {
                       
                       
                             if(isset($value->order_base))
                            {

                                $value->party_type=1;
                                $value->payment_date=$value->create_date;
                                $value->reference_no=$value->order_no;
                                $value->debits=$value->amount;
                                $value->credits=0;


                            }

                            $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             

                             
                           
                             if($value->debits==''){ $value->debits=0; }
                             if($value->credits==''){ $value->credits=0; }
                         
                            if($value->party_type==1)
                            {
                                $table='customers';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");
                                        
                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                        
                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                            }
                            
                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                             $party_name="";


                             if($value->party_type>0)
                             {


                                         $res=$query->result();


                                         foreach($res as $partys)
                                         {
                                                                    $party_name=$partys->name;
                                                                    $customer_id=$partys->id;

                                       
                                         }

                              }

                             // var_dump($party_name);
                              // if ($party_name === "Interest Expenses" || $party_name === "Interest On Bank Deposit" || $party_name === "Discount" || $party_name === "PETTY CASH" || $party_name === "TDS") {
                              //         continue;
                              //     }

                            

                               if($accountshead=='116')
                               {

                                  $cumulative_sum += $value->debits;
                                  $cumulative_val = $cumulative_sum; 
                               
                                  $url = 'order/ordercreate_product_process?order_id='. base64_encode($value->order_id);                               
                               }
                               elseif($accountshead=='2')
                               {
                               //      if($value->payment_date > '2024-05-31'){
                               //       $cumulative_sum += ($value->credits / 1.18);
                               // }else{
                                     $cumulative_sum += ($value->credits);

                               // }
                                $cumulative_val = $cumulative_sum; 
                                   $url = 'order/sales_return?order_id='. base64_encode($value->order_id);                                                                      
                               }
                               elseif($accountshead=='154')
                               {
                                  $cumulative_sum += $value->credits;
                                  $cumulative_val = $cumulative_sum; 
                               }
                               elseif($accountshead=='155')
                               {
                                  $cumulative_sum += $value->credits;
                                  $cumulative_val = $cumulative_sum; 
                               }
                               elseif($accountshead=='119')
                               {
                                

                                $cumulative_sum += $value->credits_sub_total;
                                $cumulative_val = $cumulative_sum; 


                                 $ps = $this->Main_model->where_names('purchase_invoice', 'id', $value->order_id);
                                 foreach($ps as $vl)
                                 {

                                              $order_id_base=$vl->order_id;
                                 } 




                                $url ='purchase/invoice?order_id='.base64_encode($order_id_base).'&invoice_id='.$value->order_id.'&invoice_no='.$value->reference_no.'&old_tablename=0&old_tablename_sub=0&tablename=purchase_orders_process&tablename_sub=purchase_product_list_process&movetablename=purchase_orders_process&movetablename_sub=purchase_product_list_process';                                
                              }
                             //Purchase return
                              elseif($accountshead=='120')
                             {
                                //$url = 'purchase/purchase_return_list'; 
                                $url=$traget.'/others_ledger_find?'.$traget2.'='.$customer_id.'&party_type=0&from_date='.$formdate.'&to_date='.$todate;                              
                             }
                            else
                            {





                                      if($value->party_type==5 || $value->party_type==7)
                                    {


                                       if($accountshead == 126)
                                       {
                                              $value->party_type=0;
                                       }


                                       if($accountshead == 129)
                                       {
                                              $value->party_type=0;
                                       }

                                       if($accountshead == 130)
                                       {
                                              $value->party_type=0;
                                       }

                                       if($accountshead == 165)
                                       {
                                              $value->party_type=0;
                                       }


                                       if($accountshead == 392)
                                       {
                                              $value->party_type=0;
                                       }

                                       if($accountshead == 395)
                                       {
                                              $value->party_type=0;
                                       }


                                        if($accountshead == 393)
                                       {
                                              $value->party_type=0;
                                       }


                                        if($accountshead == 394)
                                       {
                                              $value->party_type=0;
                                       }



                                       if($accountshead == 142)
                                       {
                                              $value->party_type=0;
                                       }

                                       if($accountshead == 388)
                                       {
                                              $value->party_type=0;
                                       }


                                        if($accountshead == 389)
                                       {
                                              $value->party_type=0;
                                       }


                                       //  if($accountshead == 172)
                                       // {
                                       //        $value->party_type=0;
                                       // }





                                          $url=$traget.'/others_ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type.'&from_date='.$formdate.'&to_date='.$todate;
                                   
                                    }
                                    else
                                    {
                                        $url=$traget.'/ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type.'&from_date='.$formdate.'&to_date='.$todate;
                                    }

                          

                            }


                             
                           
                            
                            $order_no=$value->order_no;
                             if (strpos($order_no, 'JE-') !== false) {
                                $stinc= '1';
                            }
                            else
                            {
                                $stinc=  '0';
                            }
                                                        
                            
                            if($stinc==1)
                            {
                                $val= explode('JE-', $order_no);
                                $invoice_link=base_url().'index.php/manual_journals/invoice/'.$val[1];
                                
                            }
                            else
                            {
                                
                                $invoice_link=0;
                            }
                            
                             
                             
                           $bank_name="";
                           $bank_name_dd= $this->Main_model->where_names('bankaccount','id',$value->bank_id);
                           foreach($bank_name_dd as $bb)
                           {
                               $bank_name=$bb->bank_name;
                              
                           }
                             
                           $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                              $valueset=$value->balance;
                                            
                                            if($valueset<0)
                                            {
                                                $getstatus=1;
                                            }
                                            else
                                            {
                                                $getstatus=0;
                                            }
                                            
                                             $total=abs($valueset);
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                       $username="";
                                       $resultvent= $this->Main_model->where_names('admin_users','id',$value->user_id);
                                       foreach ($resultvent as  $valuess) {
                                          $username= $valuess->name; 
                                          
                                         
                                       }
                                        
                         
                         
                            if($accountshead==2)
                            {
                                $value->debits=$value->witoutgstval;
                                $value->credits=0;
                                $account_head_idname="SALES RETURN";
                            }
                             if($accountshead==119)
                            {
                                $value->debits=$value->credits_sub_total;
                                $value->credits=0;
                                $account_head_idname="PURCHASE ACCOUNT";
                            }

                              if($accountshead==155)
                            {
                                 $value->debits=$value->credits;
                                 $value->credits=0;
                                $account_head_idname="AUTO EXPENSES";
                                
                            }


                            if($accountshead==154)
                            {
                                 $value->debits=$value->credits;
                                 $value->credits=0;
                                
                                
                            }


                             if($accountshead==156)
                            {
                               
                                $account_head_idname="COLLECTION VERIFICATION DISCOUNT";
                            }

                            if($accountshead==120)
                            {
                               
                                $account_head_idname="PURCHASE RETURN";
                            } 

                           if($accountshead==152)
                            {
                               
                                $account_head_idname="INTEREST EXPENSES";
                            } 
                              if($accountshead==116)
                            {
                               
                                $account_head_idname="SALES ACCOUNT";
                            } 


                                switch ($accountshead) {
                                case 126:


                             
                                    
                                    if($value->totalsum>0)
                                    {
                                      $value->credits=$value->totalsum;
                                      $value->debits=0;
                                    }
                                    else
                                    {


                                        $value->debits=abs($value->totalsum);
                                        $value->credits=0;

                                    }


                                
                                break;
                                case 116: case 2: case 119: case 380:  case 381: case 382: case 154: case 155:
                                    
                                break;
                                default:
                                
                                    if($value->totalsum>0)
                                    {
                                      $value->credits=$value->totalsum;
                                      $value->debits=0;
                                    }
                                    else
                                    {


                                        $value->debits=abs($value->totalsum);
                                        $value->credits=0;

                                    }
                                
                                }

                            



                         
                         $value->reference_no=str_replace('Bad Debts', '', $value->reference_no);

  if($party_name!='')
  {

if($accountshead == 48){

      $array3[] = array(

        'no' => 1,
        'link' => $traget.'/others_ledger_find?customer_id='.$value->customer_id.'&party_type=5&from_date='.$formdate.'&to_date='.$todate,
        'credits' => round($value->credits,2),
        'debits' => round($value->debits,2),
        'party_name' => $party_name,
        'accounthead'=>$party_name

         );

}
else{


//   if($value->payment_date > '2024-05-31'){
//   $newDebits =  round($value->amount , 2);
// }else{
//    if($value->payment_date > '2024-05-31' && $account_head_idname=="SALES RETURN"){
//   $newDebits =  round($value->debits / 1.18 , 2);
// }else{

  if($value->account_heads_id_2 == 119){
  $newDebits =  round($value->debits,3);

}else{
  $newDebits =  round($value->debits,3);

}

// }

// }

//   if($value->payment_date > '2024-05-31' && $value->account_heads_id == '104'){
//   $newDebits =  round($value->debit * 1.18 , 2);
// }else{
//   $newDebits =  round($value->debits, 2);

// }

                            $array3[] = array(
                            
                            
                           
                            'party_name' => $party_name,  
                            'no' => $l+1  , 

                            'id' => $value->id, 
                            'addclass' => $addclass, 
                            'org_amount' => $value->org_amount, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'table'=>"all_ledgers",
                            'link' => $url,
                            'username' => $username,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->notes.' | '.$value->deletemod, 
                            'amount' =>$newDebits,
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $newDebits,
                            'credits' => round($value->credits,3),
                            'process_by' => $value->process_by.' | '.$value->deletemod,
                            'balance' => $total,
                            'cumulative_sum'=> round($openingbalance + $cumulative_val,3),
                            'getstatus' => $getstatus,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                            'accounthead'=>$account_head_idname
                        
                            

                        );

                    }


}


                        $l++;

                     }
                     
                     
                     

                      $array2=[];

                      if($grouped_val==0)
                      {


                     $openingbalance=0;
                     $debits_opening=0;
                     $credits_opening=0;
                     $openingbl = $this->fetch_data_get_ledger_view_all_total($accountshead,$formdate,$todate,$party_type,$deleteid,$limit);

                      $openingbalance = $openingbl['balance'];
                      $debits_opening= $openingbl['valuess_dtotalvalue1'];
                      $credits_opening = $openingbl['valuess_ctotalvalue1'];
                      $payment_date=date('d-m-Y',strtotime($formdate));
                      $payment_date_set=date('d-m-Y',strtotime($valuess->payment_date));
                             
                      if($payment_date==$payment_date_set)
                      {
                          $payment_date=$payment_date_set;
                      }
                      
                      if($payment_date_set=='01-Jan-1970')
                      {
                           $payment_date=date('d-m-Y',strtotime($formdate));
                      }

                         if($payment_date == '01-04-2022')
                         {
                             $payment_date=date('d-m-Y',strtotime($valuess->payment_date));
                         }

                        
                          $array2[]=array(
                            'no' => '#', 
                           'id' => 0, 
                           'name' => 'Opening Balance', 
                           'order_id' => '', 
                             'order_no' => '', 
                             'payment_mode' => '', 
                             'reference_no' => '',
                             'customer_id' => '',
                             'notes' => '',
                             'amount' => '',
                             'paid_status' =>'',
                             'Payoff' => '',
                             'Payout' => '',
                             'debits' => $debits_opening,
                              'credits' => $credits_opening,
                               'balance' => round($openingbalance,2),
                              'getstatus' =>$openingbl['getstatus'],
                             'bank_name'=>'',
                             'payment_date' =>$payment_date, 
                             'payment_time' => ''
                         
                         );
                     


                      }


              
                       $setaccounthead = array('116','119','2','155');

                       if(!in_array($accountshead,$setaccounthead))
                       {
                           asort($array3);
                       }


                      
                       




                    $arrayval=array_merge($array2,$array5,$array3);

                   

                     echo json_encode($arrayval);
                     
                     
                     

    }
    




         public function fetch_data_get_ledger_view_all_total($accountshead,$formdate,$todate,$party_type,$deleteid,$limit)
    {

                    
                   
                
                      $deleteid=0;
                    
                     
                     $qq="";
                     $St="";
                     if($accountshead!='0')
                     {
                         $qq=' AND account_head_id='.$accountshead;
                     }

                       if($accountshead=='72')
                     {
                         $qq=" AND account_head_id IN ('14','15','16','17','18','20','21','22','23','24','25','27','28','29','30','31','32','33','34','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','53','54','55','57','64','65','66','67','73','74','75','76','77','78','79','80','81','134','135','136','137','138','141','143','144','147','148','152','153')";
                     }
                     
                     if($accountshead=='116')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                      if($accountshead=='123')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='119')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='2')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='68')
                     {
                         $qq=' AND party_type=1';
                     }

                      if($accountshead=='380')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=372';
                     }

                     if($accountshead=='381')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='382')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=142 AND tcs_status=1';
                     }


                     if($accountshead=='104')
                     {
                        $qq=' AND party_type IN ("3","5") AND account_head_id='.$accountshead;
                     }

                        if($accountshead=='115')
                     {
                         $qq=' AND party_type=2 AND driver_collection_status=1';
                     }
                     
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     if($accountshead==107 || $accountshead==106 || $accountshead==105)
                     {
                         //$party_type=4;
                         
                     }
                     
                     
                     
                     $Stl="";
                     $banksteup_bank="";
                     $internal_payment_status=1;
                     if(isset($_GET['payment_status']))
                     {
                              $payment_status=$_GET['payment_status'];
                              
                              if($payment_status!='')
                              {
                                      if($payment_status=='1')
                                      {
                                          //$Stl=' AND account_head_id IN ("105","106","107")';
                                          
                                         
                                          $payment_mode='Cash';
                                          $banksteup1=" AND bank_id IN ('25','24') AND order_trancation_status=0 AND opening_balance_status=0";
                                          $banksteup_bank=" AND bank_account_id  IN ('25','24')";
                                      }
                                      else
                                      {
                                          
                                         $payment_mode='NON Cash';
                                        // $Stl=' AND account_head_id  NOT IN ("105","106","107")';
                                         $banksteup1=" AND bank_id NOT IN ('0','25','24') AND  order_trancation_status=0 AND opening_balance_status=0";
                                         $banksteup_bank=" AND bank_account_id NOT IN ('0','25','24')";
                                      } 
                                  
                              }
                              
                         
                         
                     }
                     
                     
                     
                   
                    
                                  if($party_type=='All')
                                  {
                                      $St=' ';
                                  }
                                  else
                                  {
                                      $St=' AND party_type='.$party_type;
                                  }
                        

                         
                            if($accountshead!='0')
                            {
                                
                                
                                 
                                 if($accountshead=='115')
                                {
                               
                            $result4=$this->db->query("SELECT SUM(credits) as dtotalvalue,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");



                            $result_debittotal=$this->db->query("SELECT SUM(credits) as dtotalvalue,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                 
                                 }

                                  elseif($accountshead=='116')
                                {

                                    if($formdate=='2024-04-01' || $formdate=='2023-12-31')
                                    {
                                      $formdate='2023-06-01';
                                    }   

                                    $result4=$this->db->query("SELECT SUM(a.bill_sub_total) as dtotalvalue,SUM(0) as ctotalvalue FROM orders_process as a  WHERE a.deleteid=0  AND a.order_base>0 AND a.create_date<'".$formdate."'  ORDER BY a.id DESC");




                               $result_debittotal=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                 }
                                 elseif($accountshead=='2')
                                 {

                                    $result4=$this->db->query("SELECT SUM(credits) as dtotalvalue ,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."' AND party_type=1  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");



                                    $result_debittotal=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                 }
                                 elseif($accountshead=='154')
                                 {

                                    $result4=$this->db->query("SELECT SUM(credits) as dtotalvalue ,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."' AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0 ORDER BY payment_date ASC");



                                    $result_debittotal=$this->db->query("SELECT SUM(debits) as ctotalvalue,SUM(credits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."' AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0 ORDER BY payment_date ASC");
                                 }
                                 elseif($accountshead=='119')
                                 {

                                   $result4=$this->db->query("SELECT SUM(credits_sub_total) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");



                            $result_debittotal=$this->db->query("SELECT SUM(credits_sub_total) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");



                                 }
                                 else
                                 {

                                    $result4=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");



                            $result_debittotal=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                

                                 }
                                
                            }
                            else
                            {
                               
                                   $result4=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE `payment_date` <  '".$formdate."'   AND deleteid='".$deleteid."'   $banksteup1 $St $qq $Stl ORDER BY id DESC");
                                
                                $result_debittotal=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE `payment_date` BETWEEN  '".$formdate."' AND '".$todate."'   AND deleteid='".$deleteid."'   $banksteup1 $St $qq $Stl ORDER BY id DESC");
                                
                                
                                 
                                 
                                
                            }
                              
                              $result_debittotal=$result_debittotal->result();


                              
                              
                   $output=array();
                     
                   
                     $ctotalvalue=0;
                     $dtotalvalue=0;
                     if($accountshead=='0')
                     {
                         
                     $result5=$this->db->query("SELECT SUM(credit) as ctotalvalue,SUM(debit) as dtotalvalue FROM bankaccount_manage  WHERE  `create_date` < '".$formdate."'  AND  deleteid='".$deleteid."' AND internal_payment_status='".$internal_payment_status."' $banksteup_bank ORDER BY create_date DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                            
                         
                        $ctotalvalue=$value->ctotalvalue;
                        $dtotalvalue=$value->dtotalvalue;
                         
                        
                     }
                     
                     }
                              
                             
                     $result4=$result4->result();
                     $array3=array();
                    

                         
                     $ctotalvalue=1;
                     $dtotalvalue=1;
                     foreach ($result4 as  $value)
                     {

                             
                        $ctotalvalue1=$value->ctotalvalue;
                        $dtotalvalue1=$value->dtotalvalue;
                         

                      

                     }


                     $valuess_ctotalvalue1=0;
                     $valuess_dtotalvalue1=0;
                     foreach ($result_debittotal as  $valuess)
                     {

                             
                        $valuess_ctotalvalue1=$valuess->ctotalvalue;
                        $valuess_dtotalvalue1=$valuess->dtotalvalue;
                         

                      

                     }
                     
                     


                     
                   $totalc=$ctotalvalue+$ctotalvalue1;
                   $totald=$dtotalvalue+$dtotalvalue1;


                     
                      $balance= $totalc-$totald; 
                       if($balance>0)
                      {
                        $getstatus=0;
                      }
                      else
                      {
                        $getstatus=1;
                      }

                     if($accountshead=='116')
                     {


                                                                $totalcommssion=0;
                                                                // $resultset=$this->db->query("SELECT SUM(credits) as totalcridit FROM all_ledgers WHERE deleteid=0 AND customer_id='252' AND party_type=5  AND `payment_date` BETWEEN  '".$formdate."' AND '".$todate."'  AND commission_customer>0  ORDER BY id DESC");
                                                                // $resultset=$resultset->result();
                                                                // foreach($resultset as $ss)
                                                                // {
                                                                //    //$totalcommssion= $ss->totalcridit;
                                                                // }

                     
                                                               //$balance= $totald-$totalcommssion; 

                                                               //$valuess_dtotalvalue1=$valuess_dtotalvalue1-$totalcommssion;
                                                               $getstatus=1;

                     } 


                     
                              //    if($formdate <= '2023-10-01'){
                              //      $balance=0;
                              // }
                

                                  $output['getstatus']= round($getstatus,2); 
                                  $output['balance']= abs(round($balance,2)); 

                                  if($balance>0)
                                  {
                                  $valuess_ctotalvalue1 = $balance;
                                  $valuess_dtotalvalue1=0;
                                  }
                                  else
                                  {
                                      $valuess_ctotalvalue1 = 0;
                                      $valuess_dtotalvalue1=  abs($balance);
                                  }
                                  
                                  $closing_bl = $balance + $valuess_dtotalvalue1;
                                  $output['closing_bl']= round($closing_bl,2);

                                  if($accountshead==116)
                                  {


                                     $output['valuess_dtotalvalue1']= round($valuess_dtotalvalue1,2);
                                     $output['valuess_ctotalvalue1']= round($valuess_ctotalvalue1,2);


                                  }
                                  else
                                  {


                                     $output['valuess_dtotalvalue1']= round($valuess_ctotalvalue1,2);
                                     $output['valuess_ctotalvalue1']= round($valuess_dtotalvalue1,2);


                                  }
                                 



                                  return $output;     
                                                   
                     
                     

    }



         public function fetch_data_get_ledger_view_all_base_by1()
    {

                    
                    $accountshead=0;
                    if(isset($_GET['accountshead']))
                    {
                         $accountshead=$_GET['accountshead'];
                     
                    }
                   
                      if(isset($_GET['deleteid']))
                     {
                         
                          $deleteid=$_GET['deleteid'];
                     }
                     else
                     {
                          $deleteid=0;
                     }
                     
                     $qq="";
                     $St="";
                     if($accountshead!='0')
                     {
                         $qq=' AND account_head_id='.$accountshead;
                     }

                       if($accountshead=='72')
                     {
                         $qq=" AND account_head_id IN ('14','15','16','17','18','20','21','22','23','24','25','27','28','29','30','31','32','33','34','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','53','54','55','57','64','65','66','67','73','74','75','76','77','78','79','80','81','134','135','136','137','138','141','143','144','147','148','152','153')";
                     }
                     
                     if($accountshead=='116')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                      if($accountshead=='123')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='119')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='2')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='68')
                     {
                         $qq=' AND party_type=1';
                     }

                     if($accountshead=='380')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=372';
                     }

                     if($accountshead=='381')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='382')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=142 AND tcs_status=1';
                     }

                     if($accountshead=='104')
                     {
                        $qq=' AND party_type IN ("3","5") AND account_head_id='.$accountshead;
                     }

                        if($accountshead=='115')
                     {
                         $qq=' AND party_type=2 AND driver_collection_status=1';
                     }
                     
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     if($accountshead==107 || $accountshead==106 || $accountshead==105)
                     {
                         //$party_type=4;
                         
                     }
                     
                    
                     
                     $Stl="";
                     $banksteup_bank="";
                     $internal_payment_status=1;
                     if(isset($_GET['payment_status']))
                     {
                              $payment_status=$_GET['payment_status'];
                              
                              if($payment_status!='')
                              {
                                      if($payment_status=='1')
                                      {
                                          //$Stl=' AND account_head_id IN ("105","106","107")';
                                          
                                         
                                          $payment_mode='Cash';
                                          $banksteup1=" AND bank_id IN ('25','24') AND order_trancation_status=0 AND opening_balance_status=0";
                                          $banksteup_bank=" AND bank_account_id  IN ('25','24')";
                                      }
                                      else
                                      {
                                          
                                         $payment_mode='NON Cash';
                                        // $Stl=' AND account_head_id  NOT IN ("105","106","107")';
                                         $banksteup1=" AND bank_id NOT IN ('0','25','24') AND  order_trancation_status=0 AND opening_balance_status=0";
                                         $banksteup_bank=" AND bank_account_id NOT IN ('0','25','24')";
                                      } 
                                  
                              }
                              
                         
                         
                     }
                     
                     
                     
                   
                    
                                  if($party_type=='All')
                                  {
                                      $St=' ';
                                  }
                                  else
                                  {
                                      $St=' AND party_type='.$party_type;
                                  }
                          
                         
                            if($accountshead!='0')
                            {
                                
                                
                                 
                                 if($accountshead=='115')
                                {
                               
                            $result4=$this->db->query("SELECT SUM(credits) as dtotalvalue,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");



                            $result_debittotal=$this->db->query("SELECT SUM(credits) as dtotalvalue,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                 
                                 }
                                 else if($accountshead=='116')
                                {



                                     if($formdate=='2024-04-01')
                                    {
                                      $formdate='2023-06-01';
                                    }   

                            $result4=$this->db->query("SELECT SUM(a.bill_sub_total) as dtotalvalue FROM orders_process as a  WHERE a.deleteid=0 AND a.order_base>0  AND a.create_date < '".$formdate."' ORDER BY a.id DESC");



                            $result_debittotal=$this->db->query("SELECT SUM(b.amount) as dtotalvalue FROM orders_process as a join order_product_list_process as b ON a.id=b.order_id WHERE a.deleteid=0 AND a.order_base>0 AND b.deleteid=0 AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                              }
                              elseif($accountshead=='2')
                              {

                                   $result4=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM((CASE WHEN return_invoice_date > '2024-05-31' THEN debits / 1.18 ELSE debits END)) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl AND party_type=1  ORDER BY payment_date ASC");



                                  $result_debittotal=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM((CASE WHEN return_invoice_date > '2024-05-31' THEN debits / 1.18 ELSE debits END) ) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                

                                 }
                                 elseif($accountshead=='154')
                                {

                                   $result4=$this->db->query("SELECT SUM(credits) as dtotalvalue,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0  ORDER BY payment_date ASC");



                                  $result_debittotal=$this->db->query("SELECT SUM(credits) as dtotalvalue,SUM(debits) as ctotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  AND party_type=5 AND customer_id IN ('252') AND comission_transfered IN ('0') AND account_head_id=48 AND credits>0 ORDER BY payment_date ASC");
                                

                                 }
                                 elseif($accountshead=='119')
                                {

                                     $result4=$this->db->query("SELECT SUM(credits_sub_total) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl  ORDER BY payment_date ASC");



                            $result_debittotal=$this->db->query("SELECT SUM(credits_sub_total) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                

                                 }
                                 else
                                 {

                                    $result4=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` <  '".$formdate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl  ORDER BY payment_date ASC");



                            $result_debittotal=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  `payment_date` BETWEEN  '".$formdate."' AND '".$todate."' AND deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                

                                 }
                                
                            }
                            else
                            {
                               
                                   $result4=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE `payment_date` <  '".$formdate."'   AND deleteid='".$deleteid."'   $banksteup1 $St $qq $Stl ORDER BY id DESC");
                                
                                $result_debittotal=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE `payment_date` BETWEEN  '".$formdate."' AND '".$todate."'   AND deleteid='".$deleteid."'   $banksteup1 $St $qq $Stl ORDER BY id DESC");
                                
                                
                                 
                                 
                                
                            }
                              
                              $result_debittotal=$result_debittotal->result();
                              
                              
                              
                   $output=array();
                     
                   
                     $ctotalvalue=0;
                     $dtotalvalue=0;
                     if($accountshead=='0')
                     {
                         
                     $result5=$this->db->query("SELECT SUM(credit) as ctotalvalue,SUM(debit) as dtotalvalue FROM bankaccount_manage  WHERE  `create_date` < '".$formdate."'  AND  deleteid='".$deleteid."' AND internal_payment_status='".$internal_payment_status."' $banksteup_bank ORDER BY create_date DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                            
                         
                        $ctotalvalue=$value->ctotalvalue;
                        $dtotalvalue=$value->dtotalvalue;
                         
                        
                     }
                     
                     }
                              
                             
                     $result4=$result4->result();
                     $array3=array();
                 
                     $ctotalvalue=1;
                     $dtotalvalue=1;
                     foreach ($result4 as  $value)
                     {

                             
                        $ctotalvalue1=$value->ctotalvalue;
                        $dtotalvalue1=$value->dtotalvalue;
                         

                      

                     }

                     $valuess_ctotalvalue1=0;
                     $valuess_dtotalvalue1=0;
                     foreach ($result_debittotal as  $valuess)
                     {

                             
                        $valuess_ctotalvalue1=$valuess->ctotalvalue;
                        $valuess_dtotalvalue1=$valuess->dtotalvalue;
                         

                      

                     }
                     
                     


                     
                   $totalc=$ctotalvalue+$ctotalvalue1;
                   $totald=$dtotalvalue+$dtotalvalue1;


                     
                      $balance= $totalc-$totald; 
                       if($balance>0)
                      {
                        $getstatus=0;
                      }
                      else
                      {
                        $getstatus=1;
                      }

                     if($accountshead=='116')
                     {


                                                                $totalcommssion=0;
                                                                // $resultset=$this->db->query("SELECT SUM(credits) as totalcridit FROM all_ledgers WHERE deleteid=0 AND customer_id='252' AND party_type=5  AND `payment_date` BETWEEN  '".$formdate."' AND '".$todate."'  AND commission_customer>0  ORDER BY id DESC");
                                                                // $resultset=$resultset->result();
                                                                // foreach($resultset as $ss)
                                                                // {
                                                                //    //$totalcommssion= $ss->totalcridit;
                                                                // }

                     
                                                               //$balance= $totald-$totalcommssion; 

                                                               //$valuess_dtotalvalue1=$valuess_dtotalvalue1-$totalcommssion;
                                                               $getstatus=1;

                     } 


                     
                $balance=abs($balance);
                
              // if($formdate <= '2023-10-01'){
              //    $balance=0;
              //   }

                $output['getstatus']= round($getstatus,2); 
                $output['balance']= round($balance,2); 


                            if($accountshead==2)
                            {
                                $valuess_dtotalvalue1=$valuess_ctotalvalue1;
                                $valuess_ctotalvalue1=0;
                            }
                             if($accountshead==119)
                            {
                                $valuess_dtotalvalue1=$valuess_ctotalvalue1;
                                $valuess_ctotalvalue1=0;
                            }
                $closing_bl = $balance + $valuess_dtotalvalue1;
                $output['closing_bl']= round($closing_bl,2);
                $output['valuess_dtotalvalue1']= round($valuess_dtotalvalue1,2);
                $output['valuess_ctotalvalue1']= round($valuess_ctotalvalue1,2);

                echo json_encode($output);
                     
                     
                     

    }
    

         public function fetch_data_get_ledger_view_all_base_by2()
    {

                    
                    $accountshead=0;
                    if(isset($_GET['accountshead']))
                    {
                         $accountshead=$_GET['accountshead'];
                     
                    }
                   
                      if(isset($_GET['deleteid']))
                     {
                         
                          $deleteid=$_GET['deleteid'];
                     }
                     else
                     {
                          $deleteid=0;
                     }
                     
                     $qq="";
                     $St="";
                     if($accountshead!='0')
                     {
                         $qq=' AND account_head_id='.$accountshead;
                     }

                       if($accountshead=='72')
                     {
                         $qq=" AND account_head_id IN ('14','15','16','17','18','20','21','22','23','24','25','27','28','29','30','31','32','33','34','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','53','54','55','57','64','65','66','67','73','74','75','76','77','78','79','80','81','134','135','136','137','138','141','143','144','147','148','152','153')";
                     }
                     
                     if($accountshead=='116')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                      if($accountshead=='123')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='119')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='2')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }


                     if($accountshead=='68')
                     {
                         $qq=' AND party_type=1';
                     }
                      if($accountshead=='380')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=372';
                     }

                     if($accountshead=='381')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='382')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=142 AND tcs_status=1';
                     }


                     if($accountshead=='104')
                     {
                        $qq=' AND party_type IN ("3","5") AND account_head_id='.$accountshead;
                     }


                     
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     if($accountshead==107 || $accountshead==106 || $accountshead==105)
                     {
                         //$party_type=4;
                         
                     }
                     
                     
                     
                     $Stl="";
                     $banksteup_bank="";
                     $internal_payment_status=1;
                     if(isset($_GET['payment_status']))
                     {
                              $payment_status=$_GET['payment_status'];
                              
                              if($payment_status!='')
                              {
                                      if($payment_status=='1')
                                      {
                                          //$Stl=' AND account_head_id IN ("105","106","107")';
                                          
                                         
                                          $payment_mode='Cash';
                                          $banksteup1=" AND bank_id IN ('25','24') AND order_trancation_status=0 AND opening_balance_status=0";
                                          $banksteup_bank=" AND bank_account_id  IN ('25','24')";
                                      }
                                      else
                                      {
                                          
                                         $payment_mode='NON Cash';
                                        // $Stl=' AND account_head_id  NOT IN ("105","106","107")';
                                         $banksteup1=" AND bank_id NOT IN ('0','25','24') AND  order_trancation_status=0 AND opening_balance_status=0";
                                         $banksteup_bank=" AND bank_account_id NOT IN ('0','25','24')";
                                      } 
                                  
                              }
                              
                         
                         
                     }
                     
                     
                     
                   
                    
                                  if($party_type=='All')
                                  {
                                      $St=' ';
                                  }
                                  else
                                  {
                                      $St=' AND party_type='.$party_type;
                                  }
                          
                         
                            if($accountshead!='0')
                            {


                                 if($accountshead=='119')
                            {



                                $result4=$this->db->query("SELECT SUM(credits_sub_total) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE    deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");



                            }
                            else
                            {


                                $result4=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE    deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");

                            }
                                
                                
                                
                                
                               
                                 
                                 
                                
                                
                            }
                            else
                            {
                               
                                 $result4=$this->db->query("SELECT SUM(credits) as ctotalvalue,SUM(debits) as dtotalvalue FROM all_ledgers  WHERE  deleteid='".$deleteid."'   $banksteup1 $St $qq $Stl ORDER BY id DESC");
                                
                                
                                 
                                
                            }
                              
                              
                              
                              
                              
                   $output=array();
                     
                   
                     $ctotalvalue=0;
                     $dtotalvalue=0;
                     if($accountshead=='0')
                     {
                         
                     $result5=$this->db->query("SELECT SUM(credit) as ctotalvalue,SUM(debit) as dtotalvalue FROM bankaccount_manage  WHERE    deleteid='".$deleteid."' AND internal_payment_status='".$internal_payment_status."' $banksteup_bank ORDER BY create_date DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                            
                         
                        $ctotalvalue=$value->ctotalvalue;
                        $dtotalvalue=$value->dtotalvalue;
                         
                        
                     }
                     
                     }
                              
                             
                     $result4=$result4->result();
                     $array3=array();
                    
                     
                         
                     $ctotalvalue=1;
                     $dtotalvalue=1;
                     foreach ($result4 as  $value)
                     {

                             
                        $ctotalvalue1=$value->ctotalvalue;
                        $dtotalvalue1=$value->dtotalvalue;
                         

                      

                     }
                     
                     
                     
                   $totalc=$ctotalvalue+$ctotalvalue1;
                   $totald=$dtotalvalue+$dtotalvalue1;
                     
                      $balance= $totalc-$totald;  
                      if($balance>0)
                      {
                        $getstatus=0;
                      }
                      else
                      {
                        $getstatus=1;
                      }
                      $balance=abs($balance);
              

                $output['getstatus']= round($getstatus,2); 
                $output['balance']= round($balance,2); 

                echo json_encode($output);
                     
                     
                     

    }
    
  
        public function fetch_data_get_ledger_view_all_accounts()
    {

                    

                    $formdate=$_GET['formdate'];
                    $todate=$_GET['todate'];
                    $trail_blance_spilt=$_GET['trail_blance_spilt'];
                              
                      $result2=$this->db->query("SELECT b.bank_name,b.id,b.account_type FROM  bankaccount as b WHERE b.deleteid=0 AND b.trail_blance_spilt='".$trail_blance_spilt."'");
                              
                                
                              
                               
                               $result2=$result2->result();
                              
                                  
                        
                     
                 
                     
                     
                     $i=1;
                 
                     $array1=array();
                    
                      
                     // NEW DATE   
                     //$sql=" AND a.create_date<='".$todate."'";
                     $sql=" AND a.create_date BETWEEN '".$formdate."' AND '".$todate."'";
                     
                     
                         $j=$i;
                         foreach ($result2 as  $value) {
                       
                         
                         
                         
                                      $result_balance=$this->db->query("SELECT SUM(a.credit-a.debit) as total,SUM(a.debit) as total_debit,SUM(a.credit) as total_credit FROM `bankaccount_manage` as a  WHERE a.bank_account_id='".$value->id."' AND a.party_type NOT IN('1','2','3','5') AND a.deleteid=0 $sql");
                                         $resultcheck=$result_balance->result(); 
                                       foreach ($resultcheck as  $valuess) {
                                           
                                           $total_debit=$valuess->total_debit;
                                           $total_credit=$valuess->total_credit;
                                           $total=$valuess->total;
                                       }



                                       if($total>0)
                                       {
                                        $total_credit=floatval($total);
                                        $total_debit="";
                                       }
                                       else
                                       {
                                        $total_debit=floatval(abs($total));
                                        $total_credit="";
                                       }



                                        $sstt=$total_debit+$total_credit;
                         
                                        if($sstt>0)
                                        {

                                        
                                        $array1[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $value->id, 
                                            'account_type' => $value->account_type, 
                                             'name' => $value->bank_name, 
                                            'total_debit'  => floatval($total_debit), 
                                            'total_credit' => floatval($total_credit), 
                                            'balance' => 0,
                                            'ss' => base_url().'index.php/bankaccount/statement?bank_id='.$value->id.'&name='.$value->bank_name.'&from_date='.$formdate.'&to_date='.$todate,
                                        
                                            
                
                                        );

                                        }


                        $j++;

                     }
                     
                     
                     
                 

                     echo json_encode($array1);

    }
    
    
    
    
    
    
    
    
    
    
    
        public function fetch_data_get_ledger_view_total_all_by_base()
    {

                    
                    $accountshead=0;
                    if(isset($_GET['accountshead']))
                    {
                         $accountshead=$_GET['accountshead'];
                     
                    }
                     
                     $qq="";
                     $St="";
                     if($accountshead!='0')
                     {
                         $qq=' AND account_head_id='.$accountshead;
                     }
                     
                     
                             $limit=$_GET['limit'];
                             $formdate=$_GET['formdate'];
                             $party_type=$_GET['party_type'];
                             $todate=$_GET['todate'];
                                    
                                     
                                  
                          
                         
                         
                              $result=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM customer_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'  AND deleteid=0  $St $qq ORDER BY id DESC");
                              $result1=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM driver_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0  $St $qq ORDER BY id DESC");
                              $result2=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM vendor_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0  $St $qq ORDER BY id DESC");
                              $result3=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM employee_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND deleteid=0  $St $qq ORDER BY id DESC");
                             
                             
                         
                               
                                  
                                  
                                  
                                  if($party_type=='All')
                                  {
                                                          
                                                        
                                                          $result3=$result3->result(); 
                                                          $result2=$result2->result(); 
                                                          $result1=$result1->result();
                                                          $result=$result->result();
                                      
                                  }
                                  else
                                  {
                                      
                                                  if($party_type=='Customer')
                                                  {
                                                        $result=$result->result();
                                                  }
                                                  else
                                                  {
                                                      $result=array();
                                                  }
                                                  
                                                  if($party_type=='Vendor')
                                                  {
                                                       $result2=$result2->result(); 
                                                  }
                                                  else
                                                  {
                                                       $result2=array();
                                                  }
                                                  
                                                   if($party_type=='Driver')
                                                  {
                                                       $result1=$result1->result();
                                                  }
                                                  else
                                                  {
                                                      $result1=array();
                                                  }
                                                  
                                                   if($party_type=='Employee')
                                                  {
                                                        $result3=$result3->result(); 
                                                  }
                                                  else
                                                  {
                                                       $result3=$result3->result(); 
                                                  }
                                    
                                      
                                  }
                          
                         
                       
                
                 
                     
                 
                     $totalpayment=0;
                     $totaldebit=0;
                     $totalcridit=0;
                     
                     
                     $totalpayment1=0;
                     $totaldebit1=0;
                     $totalcridit1=0;
                     
                     $totalpayment2=0;
                     $totaldebit2=0;
                     $totalcridit2=0;
                     
                     
                     $totalpayment3=0;
                     $totaldebit3=0;
                     $totalcridit3=0;
                     $totalpayment4=0;
                    
                      
                     foreach ($result as  $value) {
                     
                     
                      $totalpayment= round($value->totalcridit,2);
                      $totaldebit= round($value->totaldebit,2); 
                      $totalcridit= round($value->totalcridit,2);
                    
                      
                     }
                     
                    
                     
                     
                     
                     foreach ($result1 as  $value1) {
                      
                      $totalpayment1= round($value1->totalcridit,2);
                      $totaldebit1= round($value1->totaldebit,2); 
                      $totalcridit1= round($value1->totalcridit,2);
                      
                      
                     }
                     
                     
                      foreach ($result2 as  $value2) {
                          
                      $totalpayment2= round($value2->totalcridit,2);
                      $totaldebit2= round($value2->totaldebit,2); 
                      $totalcridit2= round($value2->totalcridit,2);
                     
                      
                     }
                     
                     
                       foreach ($result3 as  $value3) {
                          
                      $totalpayment3= round($value3->totalcridit,2);
                      $totaldebit3= round($value3->totaldebit,2); 
                      $totalcridit3= round($value3->totalcridit,2);
                     
                      
                     }
                     
                     
                     
                     
                     
                    $output=array('totaldebit'=>$totaldebit+$totaldebit1+$totaldebit2+$totaldebit3,'totalcridit'=>$totalcridit+$totalcridit1+$totalcridit2+$totalcridit3,'totalblance'=>0,'totalpaid'=>0,'outstanding'=>0);

                    echo json_encode($output);

    }
    
    
    
    
    
        public function fetch_data_get_ledger_view_total_all()
    {

                    
                      $customer_id=$_GET['customer_id'];
                     
                     $qq="";
                      $St="";
                     if($customer_id!='0')
                     {
                         $qq=' AND customer_id='.$customer_id;
                     }
                     
                     
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $party_type=$_GET['party_type'];
                     $payment_status=$_GET['payment_status'];
                     
                     
                    
                             $todate=$_GET['todate'];
                             $payment_status=$_GET['payment_status'];
                          
                              if($payment_status=='1')
                              {
                                  $St=' AND payment_mode="Cash"';
                              }
                              else
                              {
                                  $St=' AND payment_mode!="Cash"';
                              }
                          
                          
                          
                         
                         
                              $result=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM customer_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'  AND deleteid=0 AND credits!='0' AND cash_trasfer_status='0'  $St $qq ORDER BY id DESC");
                              $result1=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM driver_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0 AND credits!='0' AND cash_trasfer_status='0' $St $qq ORDER BY id DESC");
                              $result2=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM vendor_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0 AND credits!='0' AND cash_trasfer_status='0' $St $qq ORDER BY id DESC");
                              $result3=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM employee_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND deleteid=0 AND credits!='0' AND cash_trasfer_status='0' $St $qq ORDER BY id DESC");
                              $result4=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM customer_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND payment_mode='Cash'  AND deleteid=0 AND credits!='0' AND cash_trasfer_status='0' $St $qq ORDER BY id DESC");
                             
                             
                         
                               
                                  $result4=$result4->result();
                                  
                                  
                                  
                                  
                                  if($party_type=='All')
                                  {
                                      
                                                          $result3=$result3->result(); 
                                                          $result2=$result2->result(); 
                                                          $result1=$result1->result();
                                                          $result=$result->result();
                                      
                                  }
                                  else
                                  {
                                      
                                                  if($party_type=='Customer')
                                                  {
                                                        $result=$result->result();
                                                  }
                                                  else
                                                  {
                                                      $result=array();
                                                  }
                                                  
                                                  if($party_type=='Vendor')
                                                  {
                                                       $result2=$result2->result(); 
                                                  }
                                                  else
                                                  {
                                                       $result2=array();
                                                  }
                                                  
                                                   if($party_type=='Driver')
                                                  {
                                                       $result1=$result1->result();
                                                  }
                                                  else
                                                  {
                                                      $result1=array();
                                                  }
                                                  
                                                   if($party_type=='Employee')
                                                  {
                                                        $result3=$result3->result(); 
                                                  }
                                                  else
                                                  {
                                                        $result3=array();
                                                  }
                                    
                                      
                                  }
                          
                         
                       
                
                 
                     
                 
                     $totalpayment=0;
                     $totaldebit=0;
                     $totalcridit=0;
                     
                     
                     $totalpayment1=0;
                     $totaldebit1=0;
                     $totalcridit1=0;
                     
                     $totalpayment2=0;
                     $totaldebit2=0;
                     $totalcridit2=0;
                     
                     
                     $totalpayment3=0;
                     $totaldebit3=0;
                     $totalcridit3=0;
                     $totalpayment4=0;
                    
                      
                     foreach ($result as  $value) {
                     
                     
                      $totalpayment= round($value->totalcridit,2);
                      $totaldebit= round($value->totaldebit,2); 
                      $totalcridit= round($value->totalcridit,2);
                    
                      
                     }
                     
                     foreach ($result4 as  $value4) {
                     
                     
                   
                      $totalpayment4= round($value4->totalcridit-$value4->totaldebit,2);
                    
                      
                     }
                     
                     
                     
                     
                     foreach ($result1 as  $value1) {
                      
                      $totalpayment1= round($value1->totalcridit,2);
                      $totaldebit1= round($value1->totaldebit,2); 
                      $totalcridit1= round($value1->totalcridit,2);
                      
                      
                     }
                     
                     
                      foreach ($result2 as  $value2) {
                          
                      $totalpayment2= round($value2->totalcridit,2);
                      $totaldebit2= round($value2->totaldebit,2); 
                      $totalcridit2= round($value2->totalcridit,2);
                     
                      
                     }
                     
                     
                       foreach ($result3 as  $value3) {
                          
                      $totalpayment3= round($value3->totalcridit,2);
                      $totaldebit3= round($value3->totaldebit,2); 
                      $totalcridit3= round($value3->totalcridit,2);
                     
                      
                     }
                     
                     
                     
                     
                     
                    $output=array('totalpayment'=>$totalpayment4,'totaldebit'=>$totaldebit+$totaldebit1+$totaldebit2+$totaldebit3,'totalcridit'=>$totalcridit+$totalcridit1+$totalcridit2+$totalcridit3,'totalblance'=>0,'totalpaid'=>0,'outstanding'=>0);

                    echo json_encode($output);

    }
    
    
    
    
    
    
    
    
        public function fetch_data_get_ledger_view_export_all()
    {

                    
                     $customer_id=$_GET['customer_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                       $payment_status=$_GET['payment_status'];
                       
                       
                         $qq="";
                          $St="";
                     if($customer_id!='0')
                     {
                         $qq=' AND customer_id='.$customer_id;
                     }
                     
                       $party_type=$_GET['party_type'];
                     
                        $todate=$_GET['todate'];
                          $payment_status=$_GET['payment_status'];
                          
                          
                        
                              if($payment_status=='1')
                              {
                                  $St=' AND payment_mode="Cash"';
                              }
                              else
                              {
                                  $St=' AND payment_mode!="Cash"';
                              }
                          
                              
                             $result=$this->db->query("SELECT * FROM customer_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'    AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                            
                            
                             $result2=$this->db->query("SELECT * FROM driver_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'    AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                            
                             $result3=$this->db->query("SELECT * FROM vendor_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'    AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                             $result4=$this->db->query("SELECT * FROM employee_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'    AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                         
                         
                         
                         
                                   if($party_type=='All')
                                  {
                                      
                                                      $result=$result->result();
                                                      $result2=$result2->result();
                                                      $result3=$result3->result();
                                                      $result4=$result4->result();
                                      
                                  }
                                  else
                                  {
                                      
                                                  if($party_type=='Customer')
                                                  {
                                                        $result=$result->result();
                                                  }
                                                  else
                                                  {
                                                      $result=array();
                                                  }
                                                  
                                                  if($party_type=='Vendor')
                                                  {
                                                       $result3=$result3->result(); 
                                                  }
                                                  else
                                                  {
                                                      $result3=array();
                                                  }
                                                  
                                                   if($party_type=='Driver')
                                                  {
                                                       $result2=$result2->result();
                                                  }
                                                  else
                                                  {
                                                      $result2=array();
                                                  }
                                                  
                                                   if($party_type=='Employee')
                                                  {
                                                        $result4=$result4->result(); 
                                                  }
                                                  else
                                                  {
                                                      $result4=array();
                                                  }
                                    
                                      
                                  }
                         
                   
                     
                     
                 
                     
                     
                     $i=1;
                     $array=array();
                     $array1=array();
                     $array2=array();
                     $array3=array();
                      
                     foreach ($result as  $value) {
                       
                           $party= $this->Main_model->where_names('customers','id',$value->customer_id);
                           foreach($party as $partys)
                           {
                              $party_name=$partys->company_name;
                               
                           }
                         
                     
                        $array[] = array(
                            
                            
                            'no' => $i, 
                            'id' => $value->id, 
                            'party_name' => $party_name, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'notes' => $value->notes, 
                            'amount' => $value->amount, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                             'process_by' => $value->process_by,
                            'balance' => $balance,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                        
                            

                        );


                        $i++;

                     }
                     
                     
                     
                     
                     $j=$i;
                         foreach ($result2 as  $value) {
                       
                          $party= $this->Main_model->where_names('driver','id',$value->customer_id);
                           foreach($party as $partys)
                           {
                              $party_name=$partys->name.' (Driver)';
                               
                           }
                         
                     
                        $array1[] = array(
                            
                            
                            'no' => $j, 
                            'id' => $value->id, 
                            'party_name' => $party_name, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'notes' => $value->notes, 
                            'amount' => $value->amount, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                             'process_by' => $value->process_by,
                            'balance' => $balance,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                        
                            

                        );


                        $j++;

                     }
                     
                     
                     
                     
                     
                     $k=$j;
                         foreach ($result3 as  $value) {
                       
                       
                           $party= $this->Main_model->where_names('vendor','id',$value->customer_id);
                           foreach($party as $partys)
                           {
                              $party_name=$partys->name.' (Vendor)';
                               
                           }
                           
                     
                        $array2[] = array(
                            
                            
                            'no' => $k, 
                            'id' => $value->id, 
                            'party_name' => $party_name, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'notes' => $value->notes, 
                            'amount' => $value->amount, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                             'process_by' => $value->process_by,
                            'balance' => $balance,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                        
                            

                        );


                        $k++;

                     }
                     
                     
                     
                         
                     $l=$k;
                         foreach ($result4 as  $value) {
                       
                       
                           $party= $this->Main_model->where_names('admin_users','id',$value->customer_id);
                           foreach($party as $partys)
                           {
                              $party_name=$partys->name.' (Employee)';
                               
                           }
                           
                     
                        $array3[] = array(
                            
                            
                            'no' => $l, 
                            'id' => $value->id, 
                            'party_name' => $party_name, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'notes' => $value->notes, 
                            'amount' => $value->amount, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                             'process_by' => $value->process_by,
                            'balance' => $balance,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                        
                            

                        );


                        $l++;

                     }
                     
                     
                     $arrayval=array_merge($array,$array1,$array2,$array3);
                     
                     $arrayval=json_decode(json_encode($arrayval));
                    
                          $todate=$_GET['todate'];
                          $payment_status=$_GET['payment_status'];
                          
                          
                          
                              
                              if($payment_status=='1')
                              {
                                  $St=' AND payment_mode="Cash"';
                              }
                              else
                              {
                                  $St=' AND payment_mode!="Cash"';
                              }
                              
                              $result=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM customer_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                             
                             
                              $result1=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM driver_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                             
                              $result2=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM vendor_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                             
                              $result3=$this->db->query("SELECT SUM(amount) as amount,SUM(credits) as totalcridit,SUM(debits) as totaldebit,SUM(payout) as totalpaid,SUM(balance) as totalblance FROM employee_ledger  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'  AND deleteid=0 AND credits!='0' AND cash_trasfer_status=0 $St $qq ORDER BY id DESC");
                             
                             
                         
                         
                               
                               
                                  if($party_type=='All')
                                  {
                                      
                                                          $result3=$result3->result(); 
                                                          $result2=$result2->result(); 
                                                          $result1=$result1->result();
                                                          $result=$result->result();
                                      
                                  }
                                  else
                                  {
                                      
                                                  if($party_type=='Customer')
                                                  {
                                                        $result=$result->result();
                                                  }
                                                  else
                                                  {
                                                      $result=array();
                                                  }
                                                  
                                                  if($party_type=='Vendor')
                                                  {
                                                       $result2=$result2->result(); 
                                                  }
                                                  else
                                                  {
                                                       $result2=array();
                                                  }
                                                  
                                                   if($party_type=='Driver')
                                                  {
                                                       $result1=$result1->result();
                                                  }
                                                  else
                                                  {
                                                      $result1=array();
                                                  }
                                                  
                                                   if($party_type=='Employee')
                                                  {
                                                        $result3=$result3->result(); 
                                                  }
                                                  else
                                                  {
                                                        $result3=array();
                                                  }
                                    
                                      
                                  }
                          
                         
                         
                  
                     
                     
                 
                     
                 
                     $totalpayment=0;
                     $totaldebit=0;
                     $totalcridit=0;
                     
                     
                     $totalpayment1=0;
                     $totaldebit1=0;
                     $totalcridit1=0;
                     
                     $totalpayment2=0;
                     $totaldebit2=0;
                     $totalcridit2=0;
                     
                     
                      $totalpayment3=0;
                     $totaldebit3=0;
                     $totalcridit3=0;
                     
                     
                    
                      
                     foreach ($result as  $value) {
                     
                     
                      $totalpayment= round($value->totalcridit,2);
                      $totaldebit= round($value->totaldebit,2); 
                      $totalcridit= round($value->totalcridit,2);
                    
                      
                     }
                     
                     
                     foreach ($result1 as  $value1) {
                      
                      $totalpayment1= round($value1->totalcridit,2);
                      $totaldebit1= round($value1->totaldebit,2); 
                      $totalcridit1= round($value1->totalcridit,2);
                      
                      
                     }
                     
                     
                     foreach ($result2 as  $value2) {
                          
                      $totalpayment2= round($value2->totalcridit,2);
                      $totaldebit2= round($value2->totaldebit,2); 
                      $totalcridit2= round($value2->totalcridit,2);
                     
                      
                     }
                     
                     
                     foreach ($result3 as  $value3) {
                          
                      $totalpayment3= round($value3->totalcridit,2);
                      $totaldebit3= round($value3->totaldebit,2); 
                      $totalcridit3= round($value3->totalcridit,2);
                     
                      
                     }
                     
                     
                     
                     
                         $filename=date('d-m-Y').'_'.$name."_Balance_report"; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                         header("Expires: 0");
                  
                   ?>
                   
                      <table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr>


                          <th>No</th>
                          <th>Date</th>
                          <th>Party Name </th>
                          <th>Reference No </th>
                          <th>Bill Amount</th>
                          
                          <th style="font-weight:800;text-align: right;">Credit</th>
                         <th>Payment Mode</th>
                          
                         <th>Process By</th>
            
                        </tr>
                      </thead>
                        <tbody  ng-repeat="names in namesDataledgergroup" >
                            
                            
                            
                        <?php
                        foreach($arrayval as $names)
                        {
                            ?>
                            
                             <tr  class="trpoint" >
                          
                           <td><?php echo $names->no; ?></td>
                           <td><?php echo $names->payment_date; ?> </td>
                           <td><?php echo $names->party_name; ?></td>
                           <td><?php echo $names->reference_no; ?></td>
                           <td><?php echo $names->amount; ?></td>
                           
                           <td style="font-weight:800;text-align: right;"> <?php echo $names->credits; ?></td>
                           <td><?php echo $names->payment_mode; ?></td>
                           <td><?php echo $names->process_by; ?></td>
                           </tr>
                        
                            
                            <?php
                            
                            
                        }
                        
                        ?>
                       
                      
                      </tbody>
                      
                      
                      
                      
                      
                      
                      
                      
                       
                        <tr>
                                                                  <td></td>
                                                                  <td></td>
                                                                  <td></td>
                                                                  <td></td>
                                                                  
                                                                  <td id="d_tot" style="font-weight:800;text-align: right;"><?php echo $totaldebit+$totaldebit1+$totaldebit2+$totaldebit3; ?></td>
                                                                  <td id="c_tot" style="font-weight:800;text-align: right;"><?php echo $totalcridit+$totalcridit1+$totalcridit2+$totalcridit3 ?></td>
                                                                  <td></td>
                                                                
                        </tr>
                      
                      
                      
                      
                      
                      
                      
                      
                    </table>
                   <?php

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        public function fetch_data_get_ledger_view_export_all_base_by()
    {

                    
                       
                       
                      $accountshead=0;
                      $grouped = 0;
                   

                    if(isset($_GET['grouped']))
                    {
                         $grouped=$_GET['grouped'];
                     
                    }
                    
                   
                   $accountshead=0;
                    if(isset($_GET['accountshead']))
                    {
                         $accountshead=$_GET['accountshead'];
                     
                    }
                   
                      if(isset($_GET['deleteid']))
                     {
                         
                          $deleteid=$_GET['deleteid'];
                     }
                     else
                     {
                          $deleteid=0;
                     }
                     
                     $qq="";
                     $St="";
                     if($accountshead!='0')
                     {
                         $qq=' AND account_head_id='.$accountshead;
                     }

                       if($accountshead=='72')
                     {
                         $qq=" AND account_head_id IN ('14','15','16','17','18','20','21','22','23','24','25','27','28','29','30','31','32','33','34','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','53','54','55','57','64','65','66','67','73','74','75','76','77','78','79','80','81','134','135','136','137','138','141','143','144','147','148','152','153')";
                     }
                     
                     if($accountshead=='116')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                      if($accountshead=='123')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='119')
                     {
                         $qq=' AND order_id>0 AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='2')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }
                     if($accountshead=='120')
                     {
                         $qq=' AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='68')
                     {
                         $qq=' AND party_type=1';
                     }

                      if($accountshead=='380')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=372';
                     }

                     if($accountshead=='381')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2='.$accountshead;
                     }

                     if($accountshead=='382')
                     {
                         $qq=' AND party_type=5 AND account_heads_id_2=142 AND tcs_status=1';
                     }



                     if($accountshead=='155')
                     {
                         $qq=' AND party_type=2 AND driver_collection_status=1';
                     }

                     if($accountshead=='104')
                     {
                         $qq=' AND party_type IN ("3","5") AND account_head_id='.$accountshead;
                     }

                     if($accountshead=='151')
                     {
                         $qq=' AND party_type=5 AND customer_id=220';
                     }
                     if($accountshead=='156')
                     {
                         $qq=' AND party_type=5 AND customer_id=332';
                     }

                                               
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     //$formdate=date('Y-m-d',strtotime($formdate."-1 days"));
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     if($accountshead==107 || $accountshead==106 || $accountshead==105)
                     {
                         //$party_type=4;
                         
                     }
                     
                     
                     
                     $Stl="";
                     $banksteup_bank="";
                     $internal_payment_status=1;
                     if(isset($_GET['payment_status']))
                     {
                              $payment_status=$_GET['payment_status'];
                              
                              if($payment_status!='')
                              {
                                      if($payment_status=='1')
                                      {
                                          //$Stl=' AND account_head_id IN ("105","106","107")';
                                          
                                         
                                          $payment_mode='Cash';
                                          $banksteup1=" AND bank_id IN ('25','24') AND order_trancation_status=0 AND opening_balance_status=0";
                                          $banksteup_bank=" AND bank_account_id  IN ('25','24')";
                                      }
                                      else
                                      {
                                          
                                         $payment_mode='NON Cash';
                                        // $Stl=' AND account_head_id  NOT IN ("105","106","107")';
                                         $banksteup1=" AND bank_id NOT IN ('0','25','24') AND  order_trancation_status=0 AND opening_balance_status=0";
                                         $banksteup_bank=" AND bank_account_id NOT IN ('0','25','24')";
                                      } 
                                  
                              }
                              
                         
                         
                     }
                     
                     
                     
                   
                    
                                  if($party_type=='All')
                                  {
                                      $St=' ';
                                  }
                                  else
                                  {
                                      $St=' AND party_type='.$party_type;
                                  }
                          
                         
                            if($accountshead!='0')
                            {
                                
                                
                                
                                switch ($accountshead) {
                                case 126:
                                    $result4=$this->db->query("SELECT id,org_amount,amount,order_id,order_no,payment_mode,payment_date,payment_time,reference_no,party_type,process_by,payout,payin,paid_status,
                                    customer_id,user_id,deletemod,SUM(credits-debits) as totalsum,SUM(credits) as credits, SUM(debits) as debits,account_head_id FROM all_ledgers 
                                     WHERE    deleteid='".$deleteid."'   $banksteup1  $St $qq $Stl  GROUP by customer_id ORDER BY payment_date ASC");
                                    break;
                                case 151:  case 119: case 154:
                                    $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                    break;
                                    case 2:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE  party_type=1 AND  deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                    break;
                                     case 116:


                                    if($formdate=='2024-04-01' || $formdate=='2023-12-31')
                                    {
                                       $formdate='2023-06-01';
                                    }   


                                        $result4=$this->db->query("SELECT a.*,SUM(b.amount) as amount FROM orders_process as a join order_product_list_process as b ON a.id=b.order_id WHERE a.deleteid=0 AND b.deleteid=0 AND a.order_base>0 AND a.create_date BETWEEN '".$formdate."' AND '".$todate."' GROUP BY a.id ORDER BY a.id DESC");
                                     break;    
                                    case 59:
                                       $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='161'  ORDER BY a.id DESC");
                                    break;
                                    case 153:
                                  
                      $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='270' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");

                                    break;
                                    case 141: 
                                    $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='329' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."'  ORDER BY a.id DESC");
                                    break;
                                    case 172:
                                    $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='3' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                    break;
                                    case 155:
                                    $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0  AND party_type=2 AND driver_collection_status=1 GROUP by customer_id ORDER BY payment_date ASC");
                                    break;


                                    case 380:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE    deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND account_heads_id_2='372' AND party_type=5 ORDER BY payment_date ASC");
                                    break;
                                    case 381:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE    deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND party_type=5 $banksteup1  $St $qq $Stl ORDER BY payment_date ASC");
                                    break;
                                    case 382:
                                       $result4=$this->db->query("SELECT * FROM all_ledgers
                                    WHERE    deleteid='".$deleteid."' AND `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND account_heads_id_2='142' AND party_type=5 AND tcs_status=1 ORDER BY payment_date ASC");
                                    break;




                                    case 170:



                                        $result4=$this->db->query("SELECT a.*,SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.customer_id='180' ORDER BY a.id DESC");
                                    break;
                                    case 48:
                                        $result4=$this->db->query("SELECT  a.*, SUM(a.credits - a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id = b.id 
                                        WHERE a.deleteid = '0' AND a.party_type = 5 AND a.account_head_id IN ('48') AND a.comission_transfered NOT IN ('5') AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."'
                                        GROUP BY a.customer_id ORDER BY a.id DESC");
                                    break;
                                      case 106:
                                        $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='183' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                    break;
                                    case 152:
                                     $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='229' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."' ORDER BY a.id DESC");
                                     break;
                                    case 164:
                                      $result4=$this->db->query("SELECT *, SUM(a.credits-a.debits) as totalsum FROM all_ledgers as a LEFT JOIN accountheads as b ON a.customer_id=b.id WHERE a.deleteid='0' AND a.party_type=5 AND a.comission_transfered NOT IN ('5') AND a.customer_id='13' ORDER BY a.id DESC");
                                    break;
                                    case 136:
                                      $result4=$this->db->query("SELECT *, SUM(credits-debits) as totalsum FROM all_ledgers WHERE deleteid='0' AND account_head_id=136 AND comission_transfered NOT IN ('5') AND payment_date BETWEEN '".$formdate."' AND '".$todate."' GROUP by customer_id ORDER BY payment_date ASC");
                                    break;
                                    case 129: case 130: case 142: case 165:
                                     $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
                                    break;
                                    case 176: case 174: case 173:  case 168:
                                    $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."'  $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
                                    break;
                                    case 104:
                                     // $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl GROUP by customer_id ORDER BY payment_date ASC");

                                       $result4=$this->db->query("SELECT *, SUM(a.credits - a.debits) AS totalsum FROM all_ledgers AS a LEFT JOIN accountheads AS b ON a.customer_id = b.id LEFT JOIN vendor AS c ON a.customer_id = c.id WHERE a.deleteid = '0' AND ((a.party_type ='5' AND b.name = 'grand max') OR (a.party_type = '3')) AND a.account_head_id = 104 AND a.customer_id !='61' AND a.payment_date BETWEEN '".$formdate."' AND '".$todate."'  GROUP BY a.customer_id, b.name ORDER BY a.payment_date ASC");

                                       
                                default:
                               
                                $result4=$this->db->query("SELECT *,SUM(credits-debits) as totalsum FROM all_ledgers  WHERE  deleteid='".$deleteid."' AND payment_date BETWEEN '".$formdate."' AND '".$todate."' $banksteup1  $St $qq $Stl GROUP by customer_id,party_type ORDER BY payment_date ASC");
                                    break;
                                }
                               
                                 // $result4=$this->db->query("SELECT id,org_amount,amount,order_id,order_no,payment_mode,payment_date,payment_time,reference_no,party_type,process_by,payout,payin,paid_status,customer_id,user_id,deletemod,SUM(credits) as credits, SUM(debits) as debits,account_head_id,account_heads_id_2 FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='".$deleteid."'  $banksteup1  $St $qq $Stl GROUP BY customer_id ORDER BY payment_date ASC");
                                 
                                
                                
                            }
                            else
                            {
                               
                                 $result4=$this->db->query("SELECT id,org_amount,amount,order_id,order_no,payment_mode,payment_date,payment_time,reference_no,party_type,process_by,payout,payin,paid_status,customer_id,user_id,deletemod,SUM(credits) as credits, SUM(debits) as debits,account_head_id,account_heads_id_2 FROM all_ledgers  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid='".$deleteid."'   $banksteup1 $St $qq $Stl GROUP BY customer_id,party_type ORDER BY id DESC");
                                
                                
                                 
                                
                            }
                              
                              
                              
                              
                              
                     $array5=array();   
                     
                   
                     
                     if($accountshead=='0')
                     {
                         
                     $result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  `create_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid='".$deleteid."' AND internal_payment_status='".$internal_payment_status."' $banksteup_bank ORDER BY create_date DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                             $query = $this->db->query("SELECT id,bank_name FROM bankaccount  WHERE deleteid='".$deleteid."' AND id='".$value->bank_account_id."' ORDER BY bank_name ASC");
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $bank_name=$partys->bank_name.' (Bank AC)';
                                                        $customer_id=$partys->id;
                             }
                             
                                $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             $url='bankaccount/statement?bank_id='.$customer_id.'&name='.$bank_name;
                              $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                         
                         
                         
                         
                         
                         
                                       $username="";
                                       $resultvent= $this->Main_model->where_names('admin_users','id',$value->user_id);
                                       foreach ($resultvent as  $valuess) {
                                          $username= $valuess->name; 
                                          
                                         
                                       }
                                        
                         
                         
                         
                         
                         
                         
                         
                            $array5[] = array(
                            
                            
                            'no' => $ll, 
                            'id' => $value->id, 
                            'party_name' => $bank_name, 
                            'order_id' => '', 
                            'order_no' => '', 
                            'addclass' => $addclass,
                            'org_amount' => $value->amount,
                            'payment_mode' => $payment_mode, 
                            'reference_no' => $value->name,
                            'table'=>"bankaccount",
                            'link' => $url,
                            'username' => $username,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->status_by.' | '.$value->deletemod, 
                            'amount' => 0, 
                            'paid_status' => $value->status, 
                            'Payoff' => $value->debit, 
                            'Payout' => $value->credit,
                            'debits' => $value->debit,
                            'credits' => $value->credit,
                            'process_by' => $value->status_by.' | '.$value->deletemod,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->create_date)), 
                            'payment_time' => $value->create_date,
                            'accounthead'=>$account_head_idname
                        
                            

                        );

                         
                         $ll++;
                     }
                     
                     }
                              
                              
                              
                              
                              
                              
                             
                     $result4=$result4->result();
                     $array3=array();
                    
                      
                    
                 
                     
                         
                     $l=$ll;
                     foreach ($result4 as  $value)
                     {
                       
                       
                            if(isset($value->order_base))
                            {

                                $value->party_type=1;
                                $value->payment_date=$value->create_date;
                                $value->reference_no=$value->order_no;
                                $value->debits=$value->amount;
                                $value->credits=0;


                            }
                            $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             
                             
                             
                           
                             if($value->debits==''){ $value->debits=0; }
                             if($value->credits==''){ $value->credits=0; }
                         
                            if($value->party_type==1)
                            {
                                $table='customers';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");
                                        
                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                        
                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                            }
                            
                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                             $party_name="";


                             if($value->party_type>0)
                            {

                                     $res=$query->result();


                                     foreach($res as $partys)
                                     {
                                                                $party_name=$partys->name;
                                                                $customer_id=$partys->id;
                                     }

                            }





                               if($accountshead=='116')
                               {
                               
                                $url = 'order/ordercreate_product_process?order_id='. base64_encode($value->order_id);                               
                               }
                            //sales return
                              elseif($accountshead=='2')
                              {
                               $url = 'order/sales_return?order_id='. base64_encode($value->order_id);                                   
                              }
                             //Purchase acc
                              elseif($accountshead=='119'){
                                
                                $url ='purchase/invoice?order_id='.base64_encode($value->order_id).'&invoice_id='.$value->order_id.'&invoice_no='.$value->reference_no.'&old_tablename=0&old_tablename_sub=0&tablename=purchase_orders_process&tablename_sub=purchase_product_list_process&
                                movetablename=purchase_orders_process&movetablename_sub=purchase_product_list_process';                                
                              }
                             //Purchase return
                              elseif($accountshead=='120')
                             {
                                //$url = 'purchase/purchase_return_list';  
                                $url=$traget.'/others_ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type;                             
                             }
                            else
                            {


                                      if($value->party_type==5 || $value->party_type==7)
                                    {
                                          $url=$traget.'/others_ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type;
                                   
                                    }
                                    else
                                    {
                                        $url=$traget.'/ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type;
                                    }

                          

                            }


                             
                            
                            
                            $order_no=$value->order_no;
                             if (strpos($order_no, 'JE-') !== false) {
                                $stinc= '1';
                            }
                            else
                            {
                                $stinc=  '0';
                            }
                                                        
                            
                            if($stinc==1)
                            {
                                $val= explode('JE-', $order_no);
                                $invoice_link=base_url().'index.php/manual_journals/invoice/'.$val[1];
                                
                            }
                            else
                            {
                                
                                $invoice_link=0;
                            }
                            
                             
                             
                           $bank_name="";
                           $bank_name_dd= $this->Main_model->where_names('bankaccount','id',$value->bank_id);
                           foreach($bank_name_dd as $bb)
                           {
                               $bank_name=$bb->bank_name;
                              
                           }
                             
                           $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                              $valueset=$value->balance;
                                            
                                            if($valueset<0)
                                            {
                                                $getstatus=1;
                                            }
                                            else
                                            {
                                                $getstatus=0;
                                            }
                                            
                                             $total=abs($valueset);
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                       $username="";
                                       $resultvent= $this->Main_model->where_names('admin_users','id',$value->user_id);
                                       foreach ($resultvent as  $valuess) {
                                          $username= $valuess->name; 
                                          
                                         
                                       }
                                        
                         
                         
                            if($accountshead==2)
                            {
                                $value->debits=$value->credits;
                                $value->credits=0;
                                $account_head_idname="SALES RETURN";
                            }
                             if($accountshead==119)
                            {
                                $value->debits=$value->credits;
                                $value->credits=0;
                                $account_head_idname="PURCHASE ACCOUNT";
                            }

                          

                            if($accountshead==116)
                            {  

                                $value->credits=$value->debits;
                                $value->debits=0;
                               
                               
                            }



                             if($accountshead==156)
                            {
                               
                                $account_head_idname="COLLECTION VERIFICATION DISCOUNT";
                            }

                            if($accountshead==120)
                            {
                               
                                $account_head_idname="PURCHASE RETURN";
                            } 

                              if($accountshead==116)
                            {
                               
                                $account_head_idname="SALES ACCOUNT";
                            } 


                                switch ($accountshead) {
                                case 126:
                                    
                                    if($value->totalsum>0)
                                    {
                                      $value->credits=round($value->totalsum);
                                      $value->debits=0;
                                    }
                                    else
                                    {


                                        $value->debits=round(abs($value->totalsum));
                                        $value->credits=0;

                                    }
                                
                                    break;
                                case 151: case 116: case 2: case 119: case 380: case 381: case 382: case 154:
                                    
                                    break;
                                default:
                                
                                    if($value->totalsum>0)
                                    {
                                      $value->credits=round($value->totalsum);
                                      $value->debits=0;
                                    }
                                    else
                                    {


                                        $value->debits=round(abs($value->totalsum));
                                        $value->credits=0;

                                    }
                                
                                }

                              if($accountshead==155)
                            {
                                $value->debits=$value->credits;
                                 $value->credits=0;
                                $account_head_idname="AUTO EXPENSES";

                            }




                         
                         $value->reference_no=str_replace('Bad Debts', '', $value->reference_no);

  if($party_name!='')
  {


                            $array3[] = array(
                            
                            
                           
                            'party_name' => $party_name,  
                            'no' => $l+1  , 

                            'id' => $value->id, 
                            'addclass' => $addclass, 
                            'org_amount' => $value->org_amount, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'table'=>"all_ledgers",
                            'link' => $url,
                            'username' => $username,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->notes.' | '.$value->deletemod, 
                            'amount' => $value->amount, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                            'process_by' => $value->process_by.' | '.$value->deletemod,
                            'balance' => $total,
                            'getstatus' => $getstatus,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                            'accounthead'=>$account_head_idname
                        
                            

                        );


}


                        $l++;

                     }
                     
                     
                     
              
                       $setaccounthead = array('116','119','2');

                       if(!in_array($accountshead,$setaccounthead))
                       {
                           asort($array3);
                       }


                      
                       




                    $arrayval=array_merge($array5,$array3);
                   
                 
                     
                            $filename=date('d-m-Y').'_'.$nameset."_Ledger_Transaction"; 
                            header("Content-Type: application/xls");    
                            header("Content-Disposition: attachment; filename=$filename.xls");  
                            header("Pragma: no-cache"); 
                            header("Expires: 0");
                  
                   ?>
                   
                   
                     <table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr>

                        <?php if($grouped != 1){ ?>
                          <th colspan="10" style="text-align:center;font-size:16px;"><?php echo $nameset; ?> Report <?php echo date('d-m-Y'); ?></th>
                          <?php } else {?>
                            <th colspan="5" style="text-align:center;font-size:16px;"><?php echo $nameset; ?> Report <?php echo date('d-m-Y'); ?></th>
                        <?php } ?>
                        </tr>
                      </thead>
                       
                   
                   
                   
                      <table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr>


                          <th>No</th>
                          <?php if($grouped != 1){ ?>
                            <th>Date</th>
                            <?php }?>
                          
                          <th>Party Name </th>
                          <?php if($grouped != 1){ ?>
                          <th>Particulars</th>
                          <th>Reference No </th>
                          <?php }?>

                          <th style="font-weight:800;text-align: right;">Debit</th>
                          <th style="font-weight:800;text-align: right;">Credit</th>
                         
                          <?php
                          
                          if($Stl=='')
                          {
                            if($grouped != 1){
                              ?>

                             <th>Payment Mode</th>
                            
                              <?php
                            }
                          }
                          ?>
                         
                          
                          <th>Account Head</th>
                          <?php if($grouped != 1){ ?>
                          <th>Narration</th>
                          <?php } ?>
            
                        </tr>
                      </thead>
                        <tbody  ng-repeat="names in namesDataledgergroup" >
                            
                            
                            
                        <?php
                        foreach($arrayval as $names)
                        {
                            ?>
                            
                             <tr  class="trpoint" >
                          
                           <td><?php echo $names['no']; ?></td>
                           <?php if($grouped != 1){ ?>
                           <td><?php echo $names['payment_date']; ?> </td>
                           <?php } ?>
                           <td><?php echo $names['party_name']; ?></td>
                           <?php if($grouped != 1){ ?>
                           <td><?php echo $names['reference_no']; ?></td>
                            <td><?php echo $names['process_by']; ?></td>
                            <?php } ?>
                           <td style="font-weight:800;text-align: right;"> <?php echo $names['debits']; ?></td>
                           <td style="font-weight:800;text-align: right;"> <?php echo $names['credits']; ?></td>
                          
                           
                              <?php
                              
                              if($Stl=='')
                              {
                                 if($grouped != 1){
                                  ?>
                                  <td><?php echo $names['payment_mode']; ?></td>
                              
                                  <?php
                                 }
                              }
                              ?>
                         
                         
                           <td><?php echo $names['accounthead']; ?></td>
                           <?php if($grouped != 1){ ?>
                           <td><?php echo $names['notes']; ?></td>
                           <?php } ?>
                           </tr>
                        
                            
                            <?php
                            
                            
                        }
                        
                        ?>
                       
                      
                      </tbody>
                      
                      
                      
                      
                     
                      
                      
                      
                      
                    </table>
                   <?php

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        public function fetch_data_get_customer_order_report()
    {

                    
                     $cateid=$_GET['cate_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                    
                     $stat="";
                    
                     
                     if($_GET['formdate']=='undefined')
                     {
                         
                        
                         $formdate=date('Y-m-01');
                         $todate=date('Y-m-t');
                         $result=$this->db->query("SELECT COUNT(a.id) no_of_orders,a.customer_id as customer_id,b.company_name FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0  GROUP BY b.id  ORDER BY no_of_orders DESC");
                      
                         
                           
                     }
                     else
                     {
                         
                         if($cateid!='ALL')
                         {
                             $stat=' AND a.customer_id="'.$cateid.'"';
                         }
                         
                         
                        
                        $result=$this->db->query("SELECT COUNT(a.id) no_of_orders,a.customer_id as customer_id,b.company_name FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 $stat GROUP BY b.id ORDER BY no_of_orders DESC");
                            
                          
                     }
                     
                    
                     $result=$result->result();
                   
                         
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                       
                                       
                                       
                                        $sql="SELECT SUM(b.qty*b.rate) as totalvalue FROM orders_process as a JOIN  order_product_list_process as b ON a.id=b.order_id  WHERE a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0  AND b.deleteid=0  AND a.customer_id='".$value->customer_id."'";      
                          
                          
                      
                                       $resultsub=$this->db->query($sql);
                                       $resultsub=$resultsub->result();
                                       
                                     
                                       foreach($resultsub as $val)
                                       { 
                                             $totalvalue= $val->totalvalue;
                                           
                                                     
                                       }
                                      
                                      
                                      if($totalvalue=='')
                                      {
                                          $totalvalue=0;
                                      }
                                         
                                                $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                     
                                                    'no_of_orders' => $value->no_of_orders, 
                                                    'customername' => $value->company_name,
                                                    'totalvalue' =>round($totalvalue,2)
                                                    
                                                    
                        
                                                );
                                            
                                   


                        $i++;

                     }

                    echo json_encode($array);

    }
    
    
    
    
    
    
    
    
    
    
    public function fetch_data_get_customer_yes_no_order_report()
    {

                    
                    


                     $cateid=$_GET['cate_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                    
                     $stat="";
                     
                     
                     
                     
                    $userslog="";
                   
                    
                   
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                              $sales_team_id=array();
                              $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values) {
                                  
                                  $sales_team_id[]=$values->define_saleshd_id;
                                  
                              }
                              
                              
                               $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                               foreach ($poin_to_member as $point) {
                                    $sales_team_id[] = $point->define_saleshd_id;
                               }
                           
                               $sales_team_id="'".implode("','", $sales_team_id)."'";
                               $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
                           
                           
                                 
                    }
                    
                    
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                    
                     
                  
                         
                         if($cateid!='ALL')
                         {
                             $stat=' AND b.sales_team_id="'.$cateid.'"';
                             $result=$this->db->query("SELECT b.* FROM customer_yes_or_no_report as b  WHERE  b.id>0 AND b.year='".$formdate."' $stat ORDER BY b.customername DESC");
                     
                         }
                         else
                         {
                             
                               $result=$this->db->query("SELECT b.* FROM customer_yes_or_no_report as b  WHERE  b.id>0 AND b.year='".$formdate."' $stat $userslog ORDER BY b.customername DESC");
                            
                          }
                             
                    
                     
                    
                     
                     $result=$result->result();
                   
                         
                
                     
                     
                     $i=1;
                     $array=array();
                    
                     foreach ($result as  $value) {
                       
                       
                           
                         
                                
                                
                               
                                
                                       
                                              
                                         
                                                $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'sales_member' => $value->sales_member, 
                                                    'customer_id' => $value->customer_id,
                                                    'customername' => $value->customername,
                                                    'customerphone' => $value->customerphone,
                                                    'area' => $value->area,
                                                    'competitor' => $value->competitor,
                                                    'factory_workshop' => $value->factory_workshop,
                                                    'cc' => $value->cc,
                                                    'pp' => $value->pp,
                                                    'dd' => $value->dd,
                                                    'qq' => $value->qq,
                                                    'rr' => $value->rr,
                                                    'sa' => $value->sa,
                                                    'ba' => $value->ba,
                                                    'April' => $value->April,
                                                    'May' => $value->May,
                                                    'June' => $value->June,
                                                    'July' => $value->July,
                                                    'August' => $value->August,
                                                    'September' => $value->September,
                                                    'October' => $value->October,
                                                    'November' => $value->November,
                                                    'December' => $value->December,
                                                    'January' => $value->January,
                                                    'February' => $value->February,
                                                    'March' => $value->March

                                                   
                                                    
                        
                                                );
                                            
                                  


                        $i++;

                     }
                     
              

                    echo json_encode($array);

    }
    
    
    
    
        public function fetch_data_get_customer_yes_no_order_report_export()
    {







  
           
                    
                      $cateid=$_GET['cate_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                         $searchVal=$_GET['searchVal'];
                         $mode=$_GET['mode'];
                    
                     $stat="";
                       if($searchVal != ''){
                         $stat .= " AND c.company_name LIKE '%$searchVal%' ";

                         }
                     
                        if($mode == 'regular'){
                            $stat .= " AND c.regular = 'YES' ";
                        }
                    $userslog="";
                   
                     
                     
                     
                     
                     
                     
                    $userslog="";
                    
                    
                     if($this->session->userdata['logged_in']['access']=='17')
                    {
                        
                              $sales_team_id=array();
                              $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
                              $resultsales_team=$query->result();
                              foreach ($resultsales_team as  $values) {
                                  
                                  $sales_team_id[]=$values->define_saleshd_id;
                                  
                              }
                              
                              
                               $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                               foreach ($poin_to_member as $point) {
                                    $sales_team_id[] = $point->define_saleshd_id;
                               }
                           
                               $sales_team_id="'".implode("','", $sales_team_id)."'";
                               $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';     
                                 
                    }
                    
                    
                    
                    
                    if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
                    {
                        
                        
                        
                             $sales_team_id = array($this->userid);
                            $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                            foreach ($resultsales_team as $values) {
                                $sales_team_id[] = $values->sales_member_id;
                            }
                            
                              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                            foreach ($poin_to_member as $point) {
                                $sales_team_id[] = $point->id;
                            }
                          
                          $sales_team_id="'".implode("','", $sales_team_id)."'";
                                 
                          $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
                         
                         
                                 
                    }
                    
                    
                    
                     
                  
                        
                                                 
                         if($cateid!='ALL')
                         {
                             $stat.=' AND b.sales_team_id="'.$cateid.'"';
                             $result=$this->db->query("SELECT b.* FROM customer_yes_or_no_report as b LEFT JOIN customers c ON c.id = b.customer_id WHERE  b.id>0 $stat ORDER BY b.customername DESC");
                     
                         }
                         else
                         {
                             
                               $result=$this->db->query("SELECT b.* FROM customer_yes_or_no_report as b LEFT JOIN customers c ON c.id = b.customer_id WHERE  b.id>0 $stat $userslog ORDER BY b.customername DESC");
                            
                          }
                             
                    
                     
                    
                     $result=$result->result();
                     
                     
                 
                     
                     
                     $i=1;
                      $array=array();
                 
                  
                    
                  
                        $filename='Customer_yes_or_no_status_report_'.$formdate.'_TO_'.$todate; 
                        header("Content-Type: application/xls");    
                       header("Content-Disposition: attachment; filename=$filename.xls");  
                        header("Pragma: no-cache"); 
                        header("Expires: 0");
                  ?>
                  
                    <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"    style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                         <thead>
                             
                             
                              <tr><th colspan="4">Customer Yes Or No Report </th></tr>
                           
                          
                         </thead> 
                         
                    </table>
                  
                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr style="text-align: left;">

                          <th>No</th>
                          <th>Sales Member</th>
                          <th>Customer Name</th>
                          <th>Phone</th>
                          <th>Area</th>
                          <th>Competitor</th>
                          <th>OPEN/CLOSE</th>
                          <th>C</th>
                          <th>Q</th>
                          <th>P</th>
                          <th>S</th>
                          <th>F</th>
                          
                          <th>MAR</th>
                          <th>APR</th>
                          <th>MAY</th>
                          <th>JUN</th>
                          <th>JUL</th>
                          <th>AUG</th>
                          <th>SEP</th>
                          <th>OCT</th>
                          <th>NOV</th>
                          <th>DEC</th>
                          <th>JAN</th>
                          <th>FEB</th>
                          <th>S.A</th>
                          <th>B.A</th>
            
                        </tr>
                      </thead>
                        <tbody>
                            <?php
                              $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                       
                       
                             
                          


                       
                                       
                                                   $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'sales_member' => $value->sales_member, 
                                                    'customer_id' => $value->customer_id,
                                                    'customername' => $value->customername,
                                                    'customerphone' => $value->customerphone,
                                                    'area' => $value->area,
                                                    'competitor' => $value->competitor,
                                                    'factory_workshop' => $value->factory_workshop,
                                                    'cc' => $value->cc,
                                                    'pp' => $value->pp,
                                                    'dd' => $value->dd,
                                                    'qq' => $value->qq,
                                                    'rr' => $value->rr,
                                                    'sa' => $value->sa,
                                                    'ba' => $value->ba,
                                                    'April' => $value->April,
                                                    'May' => $value->May,
                                                    'June' => $value->June,
                                                    'July' => $value->July,
                                                    'August' => $value->August,
                                                    'September' => $value->September,
                                                    'October' => $value->October,
                                                    'November' => $value->November,
                                                    'December' => $value->December,
                                                    'January' => $value->January,
                                                    'February' => $value->February,
                                                    'March' => $value->March

                                                   
                                                    
                        
                                                );
                                            
                                   


                        $i++;

                     }
                        
                        
                      ?>
                      
                          <?php
                   
                          
                          foreach($array as $val)
                          {
                              ?>
                              
                                         <tr >
                          
                                          <td><?php echo $val['no']; ?></td>
                                          <td><?php echo $val['sales_member']; ?></td>
                                          <td><?php echo $val['customername']; ?></td>
                                          <td><?php echo $val['customerphone']; ?></td>
                                          <td><?php echo $val['area']; ?></td>
                                          <td><?php echo $val['competitor']; ?></td>
                                           <td><?php echo $val['factory_workshop']; ?></td>
                                              <td><?php echo $val['cc']; ?></td>
                                              <td><?php echo $val['pp']; ?></td>
                                              <td><?php echo $val['dd']; ?></td>
                                              <td><?php echo $val['qq']; ?></td>
                                              <td><?php echo $val['rr']; ?></td>
                                              

                                               <td><?php echo $val['April']; ?></td>
                                                <td><?php echo $val['May']; ?></td>
                                                 <td><?php echo $val['June']; ?></td>
                                                  <td><?php echo $val['July']; ?></td>
                                                   <td><?php echo $val['August']; ?></td>
                                                    <td><?php echo $val['September']; ?></td>
                                                     <td><?php echo $val['October']; ?></td>
                                                      <td><?php echo $val['November']; ?></td>
                                                       <td><?php echo $val['December']; ?></td>
                                                        <td><?php echo $val['January']; ?></td>
                                                         <td><?php echo $val['February']; ?></td>
                                                          <td><?php echo $val['March']; ?></td>
                                                          
                                           
                                          <td><?php echo $val['sa']; ?></td>
                                          <td><?php echo $val['ba']; ?></td>
                                              
                                          
                                        </tr>
                              <?php
                          }
                          
                          ?>
                        
                         
                        
                      
                      </tbody>
                    </table>
                  <?php
                  
                  
                  
                  
                  
                  
                  
                  

    }
    
    
    
    
    
        public function fetch_data_get_customer_order_report_export()
    {









  
           
                    
                      $cateid=$_GET['cate_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                    
                     $stat="";
                    
                     
                     if($_GET['formdate']=='undefined')
                     {
                         
                        
                         $formdate=date('Y-m-01');
                         $todate=date('Y-m-t');
                         $result=$this->db->query("SELECT COUNT(a.id) no_of_orders,a.customer_id as customer_id,b.company_name FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0  GROUP BY b.id  ORDER BY a.id DESC");
                    
                     }
                     else
                     {
                         
                         if($cateid!='ALL')
                         {
                             $stat=' AND customer|_id="'.$cateid.'"';
                         }
                         
                         
                        
                        $result=$this->db->query("SELECT COUNT(a.id) no_of_orders,a.customer_id as customer_id,b.company_name FROM orders_process as a JOIN customers as b ON a.customer_id=b.id  WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 $stat GROUP BY b.id ORDER BY a.id DESC");
                    
                     }
                     
                    
                     $result=$result->result();
                     
                     
                 
                     
                     
                     $i=1;
                      $array=array();
                 
                  
                    
                  
                         $filename='Customer_order_report_'.$formdate.'_TO_'.$todate; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                         header("Expires: 0");
                  ?>
                  
                    <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"    style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                         <thead>
                             
                             
                              <tr><th colspan="4">Customer Order Report <?php echo $formdate; ?> To <?php echo $todate; ?></th></tr>
                           
                          
                         </thead> 
                         
                    </table>
                  
                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr style="text-align: left;">

                          <th>No</th>
                          <th>Customer Name</th>
                          <th>NO Of Orders</th>
                          <th>Orders Value</th>
            
                        </tr>
                      </thead>
                        <tbody>
                            
                            <?php
                            
                                     foreach ($result as  $value) {
                                         
                                         
                                         
                                                   $sql="SELECT SUM(b.qty*b.rate) as totalvalue FROM orders_process as a JOIN  order_product_list_process as b ON a.id=b.order_id  WHERE a.create_date BETWEEN '".$formdate."' AND '".$todate."' AND a.order_no!='' AND a.deleteid=0 AND b.deleteid=0  AND a.customer_id='".$value->customer_id."'";      
                          
                          
                      
                                                   $resultsub=$this->db->query($sql);
                                                   $resultsub=$resultsub->result();
                                                   
                                                 
                                                   foreach($resultsub as $val)
                                                   { 
                                                         $totalvalue= $val->totalvalue;
                                                         
                                                                 
                                                   }
                                                  
                                                  
                                                  if($totalvalue=='')
                                                  {
                                                      $totalvalue=0;
                                                  }
                                                             
                                            
                            
                                        ?>
                                          <tr >
                          
                                          <td><b><?php echo $i; ?></b></td>
                                          <td><b><?php echo $value->company_name; ?></b></td>
                                          <td><b><?php echo $value->no_of_orders; ?></b></td>
                                           <td><b><?php echo $totalvalue; ?></b></td>
                                          
                                        </tr>
                                        
                                        <?php
                                        
                                         
                                        
                                        
                                        $i++;
                                     }
                            
                            ?>
                      
                        
                        
                       
                     
                        
                         
                        
                      
                      </tbody>
                    </table>
                  <?php
                  
                  
                  
                  
                  
                  
                  
                  

    }
    
    
    
    
    
    
    
    
    
    
    
    
            public function fetch_data_get_vendor_purchase_report()
    {

                    
                     $cateid=$_GET['cate_id'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $order_base=$_GET['order_base'];
                    
                     $stat="";
                    
                    
                    
                     if($order_base!='ALL')
                     {
                             $stat.=' AND a.order_base="'.$order_base.'"';
                             
                             
                             if($order_base>=2)
                             {
                                 $stat.=' AND c.selected_status="1"';
                             }
                             
                             
                     }
                     else
                     {
                                  $stat.=' AND c.selected_status="1"';
                     }
                         
                     
                     if($_GET['formdate']=='undefined')
                     {
                         
                        
                         $formdate=date('Y-m-01');
                         $todate=date('Y-m-t');
                         $result=$this->db->query("SELECT a.create_date as order_date,a.order_base,GROUP_CONCAT(c.vendor_id) as vendor_id,a.order_no,c.order_id FROM purchase_orders_process as a JOIN purchase_order_vendors as c ON a.id=c.order_id WHERE a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0 $stat GROUP BY c.order_id ORDER BY a.id DESC");
                      
                         
                           
                     }
                     else
                     {
                         
                         if($cateid!='ALL')
                         {
                             $stat.=' AND c.vendor_id="'.$cateid.'"';
                         }
                         
                         
                          $result=$this->db->query("SELECT a.create_date as order_date,a.order_base,GROUP_CONCAT(c.vendor_id) as vendor_id,a.order_no,c.order_id FROM purchase_orders_process as a JOIN purchase_order_vendors as c ON a.id=c.order_id WHERE a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0 $stat GROUP BY c.order_id ORDER BY a.id DESC");
                         
                     }
                     
                    
                     $result=$result->result();
                   
                         
                    
                     
                     
                     $i=1;
                     $array=array();
                      
                     foreach ($result as  $value) {
                       
                                                  
                                                   $sst=explode(',', $value->vendor_id);
                                                   $venodr_name=array();
                                                   $sql1="SELECT name FROM vendor as a  WHERE a.id IN ('".implode("','", $sst)."')";      
                                                   $resultsub1=$this->db->query($sql1);
                                                   $resultsub1=$resultsub1->result();
                                                   foreach($resultsub1 as $val1)
                                                   {  
                                                       $venodr_name[]= $val1->name;
                                                       
                                                   }
                                                   
                                                   $venodr_name_by=implode(',', $venodr_name);
                                       
                                                   $totalvalue=0;
                                                   $sql="SELECT SUM(qty*rate) as totalvalue FROM  purchase_product_list_process  WHERE  deleteid=0 AND order_id='".$value->order_id."'";      
                                                   $resultsub=$this->db->query($sql);
                                                   $resultsub=$resultsub->result();
                                                   
                                                 
                                                   foreach($resultsub as $val)
                                                   { 
                                                         $totalvalue= $val->totalvalue;
                                                         $gst=$totalvalue*18/100;
                                                         $totalvalue=$totalvalue+$gst;
                                                                 
                                                   }
                                                   
                                                   
                                                   if($value->order_base==0)
                                                   {
                                                       $status="Open Requisition";
                                                   }
                                                   
                                                   if($value->order_base==1)
                                                   {
                                                       $status="Enquiry  Requested";
                                                   }
                                                   
                                                    if($value->order_base==2)
                                                   {
                                                       $status="PO";
                                                   }
                                                   
                                                    if($value->order_base==10)
                                                   {
                                                       $status="Invoice Created";
                                                   }
                                       
                                                   if($value->order_base==9)
                                                   {
                                                       $status="Schedule Payment";
                                                   }
                                                   if($value->order_base==3)
                                                   {
                                                       $status="Partial Payout";
                                                   }
                                                   
                                                   if($value->order_base==4)
                                                   {
                                                       $status="Full Payout";
                                                   }
                                                   
                                                   if($value->order_base==5)
                                                   {
                                                       $status="Dispatched";
                                                   }
                                                   
                                                   if($value->order_base==6)
                                                   {
                                                       $status="Delivered";
                                                   }
                                                   
                                                   if($value->order_base==8)
                                                   {
                                                       $status="Inward Complated";
                                                   }
                                                   
                                                   if($value->order_base==-1)
                                                   {
                                                       $status="Cancelled";
                                                   }
                                      
                                      
                                      
                                                
                                                           
                                                          
                                                           
                                                   $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'order_no' => $value->order_no,  
                                                    'customername' => $venodr_name_by,
                                                    'order_date' =>date('d-m-Y',strtotime($value->order_date)),
                                                    'gst' =>round($gst),
                                                    'totalvalue' =>round($totalvalue),
                                                    'status' =>$status,
                                                    
                                                    
                        
                                                    );
                                            
                                   


                        $i++;

                     }

                    echo json_encode($array);

    }
    
    
    
    
        public function fetch_data_get_customer_vendor_purchase_export()
    {









  
           
                    
                      $cateid=$_GET['cate_id'];
                      $limit=$_GET['limit'];
                      $formdate=$_GET['formdate'];
                      $todate=$_GET['todate'];
                      $order_base=$_GET['order_base'];
                      $stat="";
                    
                    
                    
                    
                     if($order_base!='ALL')
                     {
                             $stat.=' AND a.order_base="'.$order_base.'"';
                             
                             
                             if($order_base>=2)
                             {
                                 $stat.=' AND c.selected_status="1"';
                             }
                             
                     }
                     else
                     {
                                  $stat.=' AND c.selected_status="1"';
                     }
                     
                    if($_GET['formdate']=='undefined')
                     {
                         
                        
                         $formdate=date('Y-m-d');
                         $todate=date('Y-m-d');
                         $result=$this->db->query("SELECT a.create_date as order_date,a.order_base,GROUP_CONCAT(c.vendor_id) as vendor_id,a.order_no,c.order_id FROM purchase_orders_process as a JOIN purchase_order_vendors as c ON a.id=c.order_id WHERE a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0  GROUP BY c.order_id ORDER BY a.id DESC");
                      
                         
                           
                     }
                     else
                     {
                         
                         if($cateid!='ALL')
                         {
                             $stat.=' AND c.vendor_id="'.$cateid.'"';
                         }
                         
                          $result=$this->db->query("SELECT a.create_date as order_date,a.order_base,GROUP_CONCAT(c.vendor_id) as vendor_id,a.order_no,c.order_id FROM purchase_orders_process as a JOIN purchase_order_vendors as c ON a.id=c.order_id WHERE a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0 $stat GROUP BY c.order_id ORDER BY a.id DESC");
                         
                     }
                    
                     $result=$result->result();
                     
                     
                 
                     
                     
                     $i=1;
                      $array=array();
                 
                  
                    
                  
                         $filename='Purchase_day_book_report_'.$formdate.'_TO_'.$todate; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                         header("Expires: 0");
                  ?>
                  
                    <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"    style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                         <thead>
                             
                             
                              <tr><th colspan="7">Purchase Report <?php echo $formdate; ?> To <?php echo $todate; ?></th></tr>
                           
                          
                         </thead> 
                         
                    </table>
                  
                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr style="text-align: left;">

                          <th>No</th>
                          <th>Date</th>
                          <th>Order No</th>
                          <th>Vendor Name</th>
                          <th>GST</th>
                          <th>Purchase Value</th>
             <th>Status</th>
                        </tr>
                      </thead>
                        <tbody>
                            
                            <?php
                                    $total=0;
                                    $tgst=0;
                                     foreach ($result as  $value) {
                                         
                                         
                                         
                                                 
                                                  $sst=explode(',', $value->vendor_id);
                                                   $venodr_name=array();
                                                   $sql1="SELECT name FROM vendor as a  WHERE a.id IN ('".implode("','", $sst)."')";      
                                                   $resultsub1=$this->db->query($sql1);
                                                   $resultsub1=$resultsub1->result();
                                                   foreach($resultsub1 as $val1)
                                                   {  
                                                       $venodr_name[]= $val1->name;
                                                       
                                                   }
                                                   
                                                   $venodr_name_by=implode(',', $venodr_name);
                                       
                                                   $totalvalue=0;
                                                   $sql="SELECT SUM(qty*rate) as totalvalue FROM  purchase_product_list_process  WHERE  deleteid=0 AND order_id='".$value->order_id."'";      
                                                   $resultsub=$this->db->query($sql);
                                                   $resultsub=$resultsub->result();
                                                   
                                                 
                                                   foreach($resultsub as $val)
                                                   { 
                                                        $totalvalue= $val->totalvalue;
                                                        $gst=$totalvalue*18/100;
                                                        $totalvalue=$totalvalue+$gst;
                                                                 
                                                   }
                                                   
                                                     if($value->order_base==0)
                                                   {
                                                       $status="Open Requisition";
                                                   }
                                                   if($value->order_base==10)
                                                   {
                                                       $status="Invoice Created";
                                                   }
                                                   if($value->order_base==1)
                                                   {
                                                       $status="Enquiry  Requested";
                                                   }
                                                   
                                                    if($value->order_base==2)
                                                   {
                                                       $status="PO";
                                                   }
                                       
                                                   if($value->order_base==9)
                                                   {
                                                       $status="Schedule Payment";
                                                   }
                                                   if($value->order_base==3)
                                                   {
                                                       $status="Partial Payout";
                                                   }
                                                   
                                                   if($value->order_base==4)
                                                   {
                                                       $status="Full Payout";
                                                   }
                                                   
                                                   if($value->order_base==5)
                                                   {
                                                       $status="Dispatched";
                                                   }
                                                   
                                                   if($value->order_base==6)
                                                   {
                                                       $status="Delivered";
                                                   }
                                                   
                                                   if($value->order_base==8)
                                                   {
                                                       $status="Inward Complated";
                                                   }
                                                   
                                                   if($value->order_base==-1)
                                                   {
                                                       $status="Cancelled";
                                                   }
                                      
                                                             
                                            
                            
                                        ?>
                                          <tr >
                          
                                          <td><b><?php echo $i; ?></b></td>
                                          <td><b><?php echo date('d-m-Y',strtotime($value->order_date)); ?></b></td>
                                          <td><b>"<?php echo $value->order_no; ?>"</b></td>
                                          <td><b><?php echo $venodr_name_by; ?></b></td>
                                          <td><b><?php echo round($gst); ?></b></td>
                                          <td><b><?php echo round($totalvalue); ?></b></td>
                                          <td><b><?php echo $status; ?></b></td>
                                        </tr>
                                        
                                        <?php
                                        
                                         $total+=round($totalvalue);
                                         $tgst+=round($gst);
                                        
                                        
                                        $i++;
                                     }

                                     ?>

                                      <tr >
                          
                                          <td></td>
                                          <td></td>
                                           <td></td>
                                           <td><b>Total</td>
                                          <td><b><?php echo round($tgst); ?></b></td>
                                          <td><b><?php echo round($total); ?></b></td>
                                          <td></td>
                                        </tr>


                                     <?php
                            
                            ?>
                      
                        
                        
                       
                     
                        
                         
                        
                      
                      </tbody>
                    </table>
                  <?php
                  
                  
                  
                  
                  
                  
                  
                  

    }
    
    
    
    
    
    
    
    
    
    
    
    
    
        public function fetch_data_vendor_purchase_product_view()
    {

                    
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     
                     $order_base=$_GET['order_base'];
                     
                     $search="";
                     
                     
                     
                     if($productid!='ALL') 
                     {
                         $search.=' AND b.product_id="'.$productid.'"';
                     }
                       
                     if($order_base!='ALL')
                     {
                             $search.=' AND a.order_base="'.$order_base.'"';
                           
                     }
                     
                    if($_GET['formdate']=='undefined')
                     {
                         
                        
                          $formdate=date('Y-m-01');
                          $todate=date('Y-m-t');
                          $result=$this->db->query("SELECT a.order_no,b.order_id,a.order_base,a.create_date,b.qty,b.rate,b.product_name FROM purchase_orders_process as a JOIN purchase_product_list_process as b ON a.id=b.order_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0 AND b.product_id!='0' $search  ORDER BY a.id DESC");
                    
                     }
                     else
                     {
                         
                         
                         
                         
                          $result=$this->db->query("SELECT a.order_no,b.order_id,a.order_base,a.create_date,b.qty,b.rate,b.product_name FROM purchase_orders_process as a JOIN purchase_product_list_process as b ON a.id=b.order_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0 AND b.product_id!='0'  $search  ORDER BY a.id DESC");
                    
                     }
                     
                    
                     
                    
                    
                    
                    
                       
                         
                     $result=$result->result();
                   
                         
                    
                     
                     
                     $i=1;
                      $array=array();
                      
                     foreach ($result as  $value) {
                         
                         
                         
                                                  
                                                   $sql1="SELECT order_base FROM purchase_orders_process as a  WHERE a.id ='".$value->order_id."'";      
                                                   $resultsub1=$this->db->query($sql1);
                                                   $resultsub1=$resultsub1->result();
                                                   foreach($resultsub1 as $val1)
                                                   {  
                                                       $order_base= $val1->order_base;
                                                       
                                                   }
                       
                       
                                                   if($order_base==0)
                                                   {
                                                       $status="Open Requisition";
                                                   }
                                                   
                                                   if($order_base==1)
                                                   {
                                                       $status="Enquiry  Requested";
                                                   }
                                                   if($value->order_base==10)
                                                   {
                                                       $status="Invoice Created";
                                                   }
                                                    if($order_base==2)
                                                   {
                                                       $status="PO";
                                                   }
                                       
                                                   if($order_base==9)
                                                   {
                                                       $status="Schedule Payment";
                                                   }
                                                   if($order_base==3)
                                                   {
                                                       $status="Partial Payout";
                                                   }
                                                   
                                                   if($order_base==4)
                                                   {
                                                       $status="Full Payout";
                                                   }
                                                   
                                                   if($order_base==5)
                                                   {
                                                       $status="Dispatched";
                                                   }
                                                   
                                                   if($order_base==6)
                                                   {
                                                       $status="Delivered";
                                                   }
                                                   
                                                   if($order_base==8)
                                                   {
                                                       $status="Inward Complated";
                                                   }
                                                   
                                                   if($order_base==-1)
                                                   {
                                                       $status="Cancelled";
                                                   }
                                                   
                                                   
                                                  $totalvalue= round($value->qty*$value->rate,2);
                                                  $gst=$totalvalue*18/100;
                                                  $totalvalue=$totalvalue+$gst;
                                     
                                                $array[] = array(
                                                    
                                                    
                                                    'no' => $i, 
                                                    'id' => $value->id, 
                                                    'order_id' => $value->id, 
                                                    'order_no' => $value->order_no, 
                                                    'product_name' => $value->product_name,
                                                    'qty' => $value->qty, 
                                                    'rate' => $value->rate, 
                                                    'gst' => round($gst,2),
                                                    'create_date' =>date('d-m-Y',strtotime($value->create_date)),
                                                    'totalamount' => round($totalvalue,2),
                                                    'status' => $status, 
                                                    
                        
                                                );
                                       


                        $i++;

                     }

                    echo json_encode($array);

    }
    
    
    
    
        public function fetch_data_vendor_purchase_product_export()
    {









  
           
                     $cateid=$_GET['cate_id'];
                     $productid=$_GET['productid'];
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     
                     $order_base=$_GET['order_base'];
                     
                     $search="";
                     
                     
                     
                     if($productid!='ALL') 
                     {
                         $search.=' AND b.product_id="'.$productid.'"';
                     }
                       
                     if($order_base!='ALL')
                     {
                             $search.=' AND a.order_base="'.$order_base.'"';
                           
                     }
                     
                    if($_GET['formdate']=='undefined')
                     {
                         
                        
                          $formdate=date('Y-m-01');
                          $todate=date('Y-m-t');
                          $result=$this->db->query("SELECT a.order_no,b.order_id,a.order_base,a.create_date,b.qty,b.rate,b.product_name FROM purchase_orders_process as a JOIN purchase_product_list_process as b ON a.id=b.order_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0 AND b.product_id!='0' $search  ORDER BY a.id DESC");
                    
                     }
                     else
                     {
                         
                         
                         
                         
                          $result=$this->db->query("SELECT a.order_no,b.order_id,a.order_base,a.create_date,b.qty,b.rate,b.product_name FROM purchase_orders_process as a JOIN purchase_product_list_process as b ON a.id=b.order_id WHERE  a.create_date BETWEEN '".$formdate."' AND '".$todate."'  AND a.deleteid=0 AND b.product_id!='0'  $search  ORDER BY a.id DESC");
                    
                     }
                     
                    
                    
                    
                    
                       
                         
                     $result=$result->result();
                 
                     
                     
                     $i=1;
                      $array=array();
                 
                  
                    
                  
                         $filename='purchase_product_report_'.$formdate.'_TO_'.$todate; 
                         header("Content-Type: application/xls");    
                         header("Content-Disposition: attachment; filename=$filename.xls");  
                         header("Pragma: no-cache"); 
                         header("Expires: 0");
                  ?>
                  
                    <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100"    style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                         <thead>
                             
                             
                              <tr><th colspan="9">Purchase Product Report <?php echo $formdate; ?> To <?php echo $todate; ?></th></tr>
                           
                          
                         </thead> 
                         
                    </table>
                  
                     <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"   style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr style="text-align: left;">


                         
                          <th>No</th>
                          <th>Date</th>
                          <th>PO No</th>
                          <th>Product name</th>
                          <th>QTY</th>
                          <th>Price</th>
                          <th>GST</th>
                          <th>Total Amount</th>
                          <th>Status</th>
            
                        </tr>
                      </thead>
                        <tbody>
                            
                            <?php
                                     
                                     $Totalval=0;
                                     $tgst=0;
                                     foreach ($result as  $value) {
                                         
                                          $Totalval+= round($value->qty*$value->rate,2);
                                          
                                          
                                                   $sql1="SELECT order_base FROM purchase_orders_process as a  WHERE a.id ='".$value->order_id."'";      
                                                   $resultsub1=$this->db->query($sql1);
                                                   $resultsub1=$resultsub1->result();
                                                   foreach($resultsub1 as $val1)
                                                   {  
                                                       $order_base= $val1->order_base;
                                                       
                                                   }
                       
                       
                                                   if($order_base==0)
                                                   {
                                                       $status="Open Requisition";
                                                   }
                                                   
                                                   if($order_base==1)
                                                   {
                                                       $status="Enquiry  Requested";
                                                   }
                                                   if($value->order_base==10)
                                                   {
                                                       $status="Invoice Created";
                                                   }
                                                    if($order_base==2)
                                                   {
                                                       $status="PO";
                                                   }
                                       
                                                   if($order_base==9)
                                                   {
                                                       $status="Schedule Payment";
                                                   }
                                                   if($order_base==3)
                                                   {
                                                       $status="Partial Payout";
                                                   }
                                                   
                                                   if($order_base==4)
                                                   {
                                                       $status="Full Payout";
                                                   }
                                                   
                                                   if($order_base==5)
                                                   {
                                                       $status="Dispatched";
                                                   }
                                                   
                                                   if($order_base==6)
                                                   {
                                                       $status="Delivered";
                                                   }
                                                   
                                                   if($order_base==8)
                                                   {
                                                       $status="Inward Complated";
                                                   }
                                                   
                                                   if($order_base==-1)
                                                   {
                                                       $status="Cancelled";
                                                   }
                                                  $totalvalue= round($value->qty*$value->rate,2);
                                                  $gst=$totalvalue*18/100;
                                                  $totalvalue=$totalvalue+$gst;
                            
                                        ?>
                                          <tr >
                          
                                          <td><?php echo $i; ?></td>
                                          <td><?php echo date('d-m-Y',strtotime($value->create_date)); ?></td>
                                          <td>"<?php echo $value->order_no; ?>"</td>
                                          <td><?php echo $value->product_name; ?></td>
                                          <td><?php echo $value->qty; ?></td>
                                          <td><?php echo $value->rate; ?></td>
                                          <td><?php echo round($gst,2); ?></td>
                                          <td><?php echo round($totalvalue,2); ?></td>
                                          <td><?php echo $status; ?></td>
                                        </tr>
                                        
                                      
                                        <?php
                                        
                                        $tgst+=round($gst,2);
                                        
                                        
                                        $i++;
                                     }
                            
                            ?>
                                 
                                 
                                 
                              <tr >
                          
                                          <td></td>
                                          <td></td>
                                          <td></td>
                                          <td></td>
                                          <td></td>
                                          <td>Total</td>
                                          <td><?php echo $tgst; ?></td>
                                          <td><?php echo $Totalval; ?></td>
                                          <td></td>
                              </tr>
                        
                        
                       
                     
                        
                         
                        
                      
                      </tbody>
                    </table>
                  <?php
                  
                  
                  
                  
                  
                  
                  
                  

    }
    
           public function day_book_all_view()
    {

                    
                    $accountshead=0;
                    
                     
                     
                     $qq="";
                     $St="";
                     
                     
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     
                     
                     
                     $Stl="";
                     $banksteup_bank="";
                   
                     if($party_type=='All')
                     {
                                      $St=' ';
                                     
                     }
                     else
                     {
                                      $St=' AND party_type='.$party_type;
                                      
                     }
                          
                         
                     $result4=$this->db->query("SELECT * FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0  $St ORDER BY payment_date ASC");
                     $array5=array();   
                     
                     
                     
                     
                     $result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  `create_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0 $St  ORDER BY create_date DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                             $query = $this->db->query("SELECT id,bank_name FROM bankaccount  WHERE deleteid='0' AND id='".$value->bank_account_id."' ORDER BY bank_name ASC");
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $bank_name=$partys->bank_name.' (Bank AC)';
                                                        $customer_id=$partys->id;
                             }
                             
                                $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             $url='bankaccount/statement?bank_id='.$customer_id.'&name='.$bank_name;
                              $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                         
                         
                         
                             
                             if($customer_id==24 || $customer_id==25)
                             {
                                 $payment_mode="Cash";
                             }
                             else
                             {
                                 $payment_mode="Bank transfer";
                             }
                             
                             
                         
                         
                         
                            $array5[] = array(
                            
                            
                            'no' => $ll, 
                            'id' => $value->id, 
                            'party_name' => $bank_name, 
                            'order_id' => '', 
                            'order_no' => '', 
                            'addclass' => $addclass,
                            'org_amount' => $value->amount,
                            'payment_mode' => $payment_mode, 
                            'reference_no' => $value->name,
                            'table'=>"bankaccount",
                            'link' => $url,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->status_by, 
                            'amount' => 0, 
                            'paid_status' => $value->status, 
                            'Payoff' => $value->debit, 
                            'Payout' => $value->credit,
                            'debits' => $value->debit,
                            'credits' => $value->credit,
                            'process_by' => $value->status_by,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->create_date)), 
                            'payment_time' => $value->create_date,
                            'accounthead'=>$account_head_idname
                        
                            

                        );

                         
                         $ll++;
                     }
                     
                          
                     $result4=$result4->result();
                     $array3=array();
                    
                      
                         
                     $l=$ll;
                     foreach ($result4 as  $value)
                     {
                       
                       
                               $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             
                             
                             
                           
                             if($value->debits==''){ $value->debits=0; }
                             if($value->credits==''){ $value->credits=0; }
                         
                            if($value->party_type==1)
                            {
                                $table='customers';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");
                                        
                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                        
                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                            }
                            
                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                              $party_name="";
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }
                             
                             
                             
                            $url=$traget.'/ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type;
                            
                            
                            
                            $order_no=$value->order_no;
                             if (strpos($order_no, 'JE-') !== false) {
                                $stinc= '1';
                            }
                            else
                            {
                                $stinc=  '0';
                            }
                                                        
                            
                            if($stinc==1)
                            {
                                $val= explode('JE-', $order_no);
                                $invoice_link=base_url().'index.php/manual_journals/invoice/'.$val[1];
                                
                            }
                            else
                            {
                                
                                $invoice_link=0;
                            }
                            
                             
                             
                           $bank_name="";
                           $bank_name_dd= $this->Main_model->where_names('bankaccount','id',$value->bank_id);
                           foreach($bank_name_dd as $bb)
                           {
                               $bank_name=$bb->bank_name;
                              
                           }
                             
                           $addclass="";
                         if($value->changes_status==1)
                         {
                             $addclass="bgcolorchange";
                             
                         }
                         
                              $valueset=$value->balance;
                                            
                                            if($valueset<0)
                                            {
                                                $getstatus=1;
                                            }
                                            else
                                            {
                                                $getstatus=0;
                                            }
                                            
                                             $total=abs($valueset);
                         
                         
                            $array3[] = array(
                            
                            
                            'no' => $l, 
                            'id' => $value->id, 
                            'party_name' => $party_name, 
                            'addclass' => $addclass, 
                            'org_amount' => $value->org_amount, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'table'=>"all_ledgers",
                            'link' => $url,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->notes, 
                            'amount' => $value->amount,
                            'voucher_base' => $value->voucher_base, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                            'process_by' => $value->process_by,
                            'balance' => $total,
                            'getstatus' => $getstatus,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                            'accounthead'=>$account_head_idname
                        
                            

                        );


                        $l++;

                     }
                     
                     
                      
                     
                     $arrayval=array_merge($array5,$array3);

                     echo json_encode($arrayval);
                     
                     
                     

    }
    

    public function day_book_all_view_beta()
    {

   
                     $accountshead=0;
                     $qq="";
                     $St="";

                     $accountheads_sub_group=$_GET['accountheads_sub_group'];

                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];

                     $timestampForGivenDate = strtotime ($_GET['formdate']);
                     $timestampForGivenDate1 = strtotime ($_GET['todate']);
                     $formdate1=date('Y-m-d', $timestampForGivenDate);
                        $todate1=date('Y-m-d', $timestampForGivenDate1);
                    //  $formdate1=date('Y-m-d',strtotime ('-1 day', $timestampForGivenDate));
                    //  $todate1=date('Y-m-d',strtotime ('-1 day', $timestampForGivenDate1));

                                function roundVal($total){
                                if($total !== ''){
                                 return number_format($total, 2, '.', '');
                                }else{
                                  return 0;
                                }

                            }
                    
                     if($party_type=='All')
                     {
                                      $Sts=' ';
                                     
                     }
                     else
                     {
                                      $Sts=' AND party_type='.$party_type;
                                      
                     }



                     if($accountheads_sub_group=='All')
                     {
                                      $bs=' ';
                                     
                     }
                     else
                     {


                        if($accountheads_sub_group=='116')
                        {
                             $bs=' AND account_heads_id_2='.$accountheads_sub_group;
                        }
                        elseif($accountheads_sub_group=='119')
                        {
                             $bs=' AND account_heads_id_2='.$accountheads_sub_group;
                        }
                        elseif($accountheads_sub_group=='2')
                        {
                             $bs=' AND account_heads_id_2='.$accountheads_sub_group;
                        }
                        else
                        {
                             $bs=' AND account_head_id='.$accountheads_sub_group;
                        }
                                      
                                      
                     }
                          
                    //  $result8=$this->db->query("SELECT SUM(credits-debits) as total_value FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate1."' AND '".$todate1."' AND  deleteid=0  $Sts ORDER BY payment_date ASC");
                    //      $result8=$result8->result();
                    
                    //  foreach ($result8 as  $value)
                    //  {
                       
                       
                    //    if($value->total_value>0)
                    //    {
                    //     $st=1;

                    //    }
                    //    else
                    //    {
                    //     $st=0;
                    //    }

                    //    $closing_balance=abs($value->total_value);
                               
                          
                    //      $closing_balance = round($closing_balance);
                    //      $st = $st;
                        
                         

                    //  }
                     

                     $Stl="";
                     $banksteup_bank="";
                   
                     if($party_type=='All')
                     {
                                      $St=' ';
                                     
                     }
                     else
                     {
                                      $St=' AND party_type='.$party_type;
                                      
                     }
                     
                // $cashamount=$this->db->query("SELECT SUM(debit) as totaldebits,SUM(credit) as totalcredits,SUM(credit-debit) as total_value FROM bankaccount_manage  WHERE  `create_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0  AND bank_account_id='25'  $St ORDER BY create_date ASC");
                //      $cashamount=$cashamount->result();
                //       foreach ($cashamount as  $cash)
                //      {
                //                $totaldebits_cash=$cash->totaldebits;
                //                $totalcredits_cash=$cash->totalcredits;
                //                $total_value_cash=$cash->total_value;
                //                if($total_value_cash>0)
                //                {
                //                    $cash_get=1;
                //                }
                //                else
                //                {
                //                    $total_value_cash=abs($total_value_cash);
                //                    $cash_get=0;
                //                } 

                //      }


                     $totaldebits=0;
                     $totalcredits=0;
                     $total_credits_bank =0;
                     $total_debits_bank =0;
                    //  $whihoutcash=$this->db->query("SELECT SUM(credits) as credits,SUM(debits) as debits FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0  AND payment_mode='Cash' $St ORDER BY payment_date ASC");
                    //  $whihoutcash=$whihoutcash->result();
                    //  foreach($whihoutcash as $ss)
                    //  {
                    //       $totaldebits=$ss->debits; 
                    //       $totalcredits=$ss->credits;   
                    //  }



                          
                         
                     $result4=$this->db->query("SELECT * FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0 
                      AND (payment_mode IS NULL OR payment_mode != 'Cash')   AND process_by !='Sales Return Driver Trip'  $bs  ORDER BY id DESC");
                     $result4=$result4->result();

                    // $deuplicate_data = $this->db->query("SELECT * FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0  $St AND payment_mode !='Cash' AND account_heads_id_2=116 ORDER BY payment_date ASC");

                    //  $deuplicate_data=$deuplicate_data->result();

                     $array=array();   
                     
                     
                    
                      
                         
                     $i=1;
                   
                     foreach ($result4 as  $value)
                     {
                       
                        
                                 
                           
                             if($value->debits==''){ $value->debits=0; }
                             if($value->credits==''){ $value->credits=0; }


                                



                            

                         
                            if($value->party_type==1)
                            {
                                $table='customers';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");
                                        
                            }
                             if($value->party_type==4)
                            {

                                //echo $value->deletemod;
                                //exit;
                                $table='bankaccount';
                                $traget='customer';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,bank_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY bank_name ASC");
                                        
                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                        
                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                            }
                            
                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                             if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }


                            
                              $party_name="";
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }
                             

                             
                             
                            $url=$traget.'/ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type.'&search_date='.$value->payment_date;
                            
                            
                                                        
                            
                            if($stinc==1)
                            {
                                $val= explode('JE-', $order_no);
                                $invoice_link=base_url().'index.php/manual_journals/invoice/'.$val[1];
                                
                            }
                            else
                            {
                                
                                $invoice_link=0;
                            }
                            
                               $subarray=array();


                             if($value->process_by=='Voucher')
                            {

                            $result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  deletemod='".$value->deletemod."' AND deleteid='0' AND bank_account_id !='25' AND party_type = '4' AND bank_account_id='".$value->customer_id."'  ORDER BY create_date DESC");


                              //$result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  deletemod='".$value->deletemod."' AND deleteid='0' AND bank_account_id !='25' AND party_type = '4'   ORDER BY create_date DESC");


                            }
                            else
                            {

                                 $result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  deletemod='".$value->deletemod."' AND deleteid='0' AND bank_account_id !='25' AND party_type = '4'  ORDER BY create_date DESC");


                            }




                            
                             $result5=$result5->result();

                             foreach($result5 as $vl)
                             {
                                

                                 $query = $this->db->query("SELECT id,bank_name FROM bankaccount  WHERE deleteid='0' AND id='".$vl->bank_account_id."' ORDER BY bank_name ASC");
                                 $res=$query->result();
                                 foreach($res as $partys)
                                 {
                                                            $bank_name=$partys->bank_name.' (Bank AC)';
                                                            $customer_id=$partys->id;
                                 }

                                 $url_bank='bankaccount/statement?bank_id='.$customer_id.'&name='.$bank_name.'&search_date='.$vl->create_date;
                                 







                                 if($customer_id==24 || $customer_id==25)
                                 {
                                     $payment_mode="CASH IN HAND";
                                 }
                                 else
                                 {
                                     $payment_mode="BANK TRANSFER";
                                 }

                                 
                                

                                $subarray[] = array(



                                            'id' => $vl->id, 
                                            'party_name' => $bank_name,
                                            'payment_mode' => $payment_mode, 
                                            'reference_no' => $vl->name,
                                            'table'=>"bankaccount",
                                            'link' => $url_bank,
                                            'notes' => $vl->status_by.' '.$vl->deletemod, 
                                            'debits' => roundVal($vl->credit),
                                            'credits' => roundVal($vl->debit),
                                            'process_by' => $vl->status_by.' '.$vl->deletemod,
                                            'bank_name'=>$bank_name,
                                            'payment_date' => date('d-m-Y',strtotime($vl->create_date)), 
                                            



                                );






                                $total_credits_bank += $vl->credit;
                                $total_debits_bank = $vl->debit;
       
                              }  
                              
//  exit;

                              $poin_to_member = $this->Main_model->where_names('admin_users','id',$value->user_id);
                              foreach ($poin_to_member as $point) {
                                    $username = $point->name;
                              }
                           

                               if($value->account_heads_id_2>0)
                               {


                                  $query_check= $this->db->query("SELECT id,name FROM accountheads_sub_group WHERE deleteid='0' AND id='".$value->account_heads_id_2."' ORDER BY name ASC");
                                  $query_check=$query_check->result();
                                  foreach ($query_check as $s) {
                                      $party_name_mode = $s->name;
                                  }


                                }

                                if($value->driver_collection_status==1)
                               {
                                    $party_name_mode = 'AUTO EXPENSES';

                               }




                               if($value->account_heads_id_2 == 154){
                                $party_name = "SALES COMMISION";
                               }






                             

                               
                                  if($value->party_type==4)
                                {


                                  $array[] = array(
                                
                                
                                    'no' => '',
                                    'id' => '',
                                    'party_name' => '',
                                    'order_id' => '',
                                    'order_no' => '', 
                                    'payment_mode' => '',
                                    'reference_no' => '',
                                    'table'=>"all_ledgers",
                                    'link' => '',
                                    'invoice_link' => '',
                                    'notes' => '', 
                                    'debits' => 0,
                                    'credits' => 0,
                                    'process_by' => '',
                                    'payment_date' => $value->party_type, 
                                    'subarray'=>$subarray
                                   
                                    );

                                     
                                }
                                else
                                {






                     
                    



                                           if($value->reference_no=='00000')
                                           {
                                               $value->reference_no='';
                                           }

                                     if($value->customer_id==346 && $value->party_type==5)
                                     {

                                     }
                                     else
                                     {
                                      
                                   $totaldebits += $value->debits; 
                                   $totalcredits += $value->credits;


                                   $array[] = array(
                                
                                
                                    'no' => $i, 
                                    'id' => $value->id, 
                                    'party_name' => $party_name, 
                                    'order_id' => $value->order_id, 
                                    'order_no' => $value->order_no, 
                                    'payment_mode' => $party_name_mode, 
                                    'reference_no' => $value->reference_no,
                                    'table'=>"all_ledgers",
                                    'voucher_base' => $value->voucher_base,
                                    'link' => $url,
                                    'invoice_link' => $invoice_link,
                                    'notes' => $value->notes.'|'.$value->deletemod, 
                                    'debits' => roundVal($value->debits),
                                    'credits' => roundVal($value->credits),
                                    'process_by' => $username,
                                    'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                    'subarray'=>$subarray
                                   
                                    );


                               }








                                  
                                } 

                               


                               

                              if($value->account_heads_id_2 == '116' AND $value->debits > '0' AND $value->order_id > 0)
                              {
                                 $party_name="SALES ACCOUNT";
                         
                           

                               $array[] = array(
                                
                                
                                'no' => $i, 
                                'id' => $value->id, 
                                'party_name' => $party_name, 
                                'order_id' => $value->order_id, 
                                'order_no' => $value->order_no, 
                                'payment_mode' => $party_name, 
                                'reference_no' => $value->reference_no,
                                'table'=>"all_ledgers",
                                'link' => $url,
                                'invoice_link' => $invoice_link,
                                'notes' =>"Sales Account", 
                                'voucher_base' => $value->voucher_base,
                                'debits' => 0,
                                'credits' => roundVal($value->debits),
                                'process_by' => $username,
                                'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                'subarray'=>$subarray
                               
                                );
                              }



                              if($value->order_trancation_status==2 && $value->party_type==2)
                              {



                                    $arrayName = array('Manual Journals','Voucher');
                                    if(!in_array($value->process_by, $arrayName))
                                    {




                                             $array[] = array(
                                            
                                            
                                            'no' => $i, 
                                            'id' => $value->id, 
                                            'party_name' => $party_name, 
                                            'order_id' => $value->order_id, 
                                            'order_no' => $value->order_no, 
                                            'payment_mode' => "AUTO EXPENSES", 
                                            'reference_no' => $value->reference_no,
                                            'table'=>"all_ledgers",
                                            'link' => '#',
                                            'invoice_link' => '#',
                                            'notes' =>"AUTO EXPENSES", 
                                            'voucher_base' => $value->voucher_base,
                                           
                                            'debits' => roundVal($value->credits),
                                            'credits' => 0,
                                            'process_by' => $username,
                                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                            'subarray'=>array()
                                           
                                            );

                                   }




                              }
                              
                              if($value->account_heads_id_2 == '116' AND $value->credits > '0' AND $value->order_id > 0 AND $value->payment_mode=='Bank Transfer'){
                              $party_name="SALES ACCOUNT";
                                // var_dump($value);
                                $array[] = array(
                                 
                                 
                                 'no' => $i, 
                                 'id' => $value->id, 
                                 'party_name' => $party_name, 
                                 'order_id' => $value->order_id, 
                                 'order_no' => $value->order_no, 
                                 'payment_mode' => $party_name, 
                                 'reference_no' => $value->reference_no,
                                 'table'=>"all_ledgers",
                                 'link' => $url,
                                 'invoice_link' => $invoice_link,
                                 'notes' =>"Sales Account", 
                                 'voucher_base' => $value->voucher_base,
                                 'debits' => roundVal($value->credits),
                                 'credits' => 0,
                                 'process_by' => $username,
                                 'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                 'subarray'=>$subarray
                                
                                 );
                               }

                              if($value->account_heads_id_2 == '2'){

                                  $array[] = array(
                                
                                
                                'no' => $i, 
                                'id' => $value->id, 
                                'party_name' => $party_name, 
                                'order_id' => $value->order_id, 
                                'order_no' => $value->order_no, 
                                'payment_mode' => "SALES RETURN", 
                                'reference_no' => $value->reference_no,
                                'table'=>"all_ledgers",
                                'link' => $url,
                                'voucher_base' => $value->voucher_base,
                                'invoice_link' => $invoice_link,
                                'notes' =>"Sales Return", 
                                'debits' =>  roundVal($value->credits),
                                'credits' => 0,
                                'process_by' => $username,
                                'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                'subarray'=>$subarray
                               
                                );
                              }

                              if($value->account_heads_id_2 == '142' && $value->process_by=='Sales Return CGST')
                              {

                                  $array[] = array(
                                
                                
                                'no' => $i, 
                                'id' => $value->id, 
                                'party_name' => $party_name, 
                                'order_id' => $value->order_id, 
                                'order_no' => $value->order_no, 
                                'payment_mode' => "Sales Return CGST", 
                                'reference_no' => $value->reference_no,
                                'voucher_base' => $value->voucher_base,
                                'table'=>"all_ledgers",
                                'link' => $url,
                                'invoice_link' => $invoice_link,
                                'notes' =>"Sales Return", 
                                'debits' =>  0,
                                'credits' => roundVal($value->debits),
                                'process_by' => $username,
                                'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                'subarray'=>$subarray
                               
                                );


                              }


                              if($value->account_heads_id_2 == '142' && $value->process_by=='Sales Return SGST')
                              {

                                  $array[] = array(
                                
                                
                                'no' => $i, 
                                'id' => $value->id, 
                                'party_name' => $party_name, 
                                'order_id' => $value->order_id, 
                                'order_no' => $value->order_no, 
                                'voucher_base' => $value->voucher_base,
                                'payment_mode' => "Sales Return CGST", 
                                'reference_no' => $value->reference_no,
                                'table'=>"all_ledgers",
                                'link' => $url,
                                'invoice_link' => $invoice_link,
                                'notes' =>"Sales Return", 
                                'debits' =>  0,
                                'credits' => roundVal($value->debits),
                                'process_by' => $username,
                                'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                'subarray'=>$subarray
                               
                                );


                              }

                              if($value->account_heads_id_2 == '119' AND $value->order_id > 0 ){
                                 // $party_name="PURCHASE ACCOUNT";
                                
                                  $array[] = array(
                                
                                
                                'no' => $i, 
                                'id' => $value->id, 
                                'party_name' => "PURCHASE ACCOUNT", 
                                'order_id' => $value->order_id, 
                                'order_no' => $value->order_no, 
                                'voucher_base' => $value->voucher_base,
                                'payment_mode' => "PURCHASE ACCOUNT", 
                                'reference_no' => $value->reference_no,
                                'table'=>"all_ledgers",
                                'link' => $url,
                                'invoice_link' => $invoice_link,
                                'notes' =>"Purchase Account", 
                                'debits' =>  roundVal($value->credits),
                                'credits' => roundVal($value->debits),
                                'process_by' => $username,
                                'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                'subarray'=>$subarray
                               
                                );
                              }

                              // if($value->account_heads_id_2 == '155'){

                              //     $array[] = array(
                                
                                
                              //   'no' => $i, 
                              //   'id' => $value->id, 
                              //   'party_name' => $party_name, 
                              //   'order_id' => $value->order_id, 
                              //   'order_no' => $value->order_no, 
                              //   'payment_mode' => $value->payment_mode, 
                              //   'reference_no' => $value->reference_no,
                              //   'table'=>"all_ledgers",
                              //   'link' => $url,
                              //   'invoice_link' => $invoice_link,
                              //   'notes' =>"Auto Expences", 
                              //   'debits' => "",
                              //   'credits' => $value->debits,
                              //   'process_by' => $username,
                              //   'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                              //   'subarray'=>$subarray
                               
                              //   );
                              // }

                               if($value->account_heads_id_2 == '160'){

                                // var_dump($value->id);
                                //   $array[] = array(
                                
                                
                                // 'no' => $i, 
                                // 'id' => $value->id, 
                                // 'party_name' => $party_name, 
                                // 'order_id' => $value->order_id, 
                                // 'order_no' => $value->order_no, 
                                // 'payment_mode' => $value->payment_mode, 
                                // 'reference_no' => $value->reference_no,
                                // 'table'=>"all_ledgers",
                                // 'link' => $url,
                                // 'invoice_link' => $invoice_link,
                                // 'notes' =>"Auto Expences", 
                                // 'debits' => "",
                                // 'credits' => $value->debits,
                                // 'process_by' => $username,
                                // 'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                                // 'subarray'=>$subarray
                               
                                // );
                              }


                      

                       $i++;

                     }


                   



                 $array2=array();
                $result6=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  single_deposite='1' AND deleteid='0' AND party_type='4' AND  `create_date` BETWEEN '".$formdate."' AND '".$todate."' AND bank_account_id !='25' $bs ORDER BY create_date DESC");
                             $result6=$result6->result();

                             foreach($result6 as $vl)
                             {



                                 $query = $this->db->query("SELECT id,bank_name FROM bankaccount  WHERE deleteid='0' AND id='".$vl->bank_account_id."' ORDER BY bank_name ASC");
                                 $res=$query->result();
                                 foreach($res as $partys)
                                 {
                                                            $bank_name=$partys->bank_name.' (Bank AC)';
                                                            $customer_id=$partys->id;
                                 }
                                    $username="";
                                 $poin_to_member = $this->Main_model->where_names('admin_users','id',$vl->user_id);
                                 foreach ($poin_to_member as $point) {
                                       $username = $point->name;
                                 }

                                 $url_bank='bankaccount/statement?bank_id='.$customer_id.'&name='.$bank_name.'&search_date='.$vl->create_date;
                                 if($customer_id==24 || $customer_id==25)
                                 {
                                     $payment_mode="CASH IN HAND";
                                 }
                                 else
                                 {
                                     $payment_mode="BANK IN ACCOUNT";
                                 }
                                 


                                $array2[] = array(



                                            'id' => $vl->id, 
                                            'party_name' => $bank_name,
                                            'payment_mode' => $payment_mode, 
                                            'reference_no' => $vl->name,
                                            'table'=>"bankaccount",
                                            'link' => $url_bank,
                                            'notes' => $vl->status_by.' '.$vl->deletemod, 
                                            'debits' =>  roundVal($vl->credit),

                                            'credits' =>  roundVal($vl->debit),
                                            'process_by' => $username,
                                            'bank_name'=>$bank_name,
                                            'payment_date' => date('d-m-Y',strtotime($vl->create_date)), 
                                            



                                );


                              }  

                     


                      if($st==1)
                      {
                        $totalcredits=$totalcredits+0+$totalcredits_cash;

                        $totalcredits = $totalcredits + $total_credits_bank;
                      } 
                      if($st==0)
                      {
                        $totaldebits = $totaldebits + $total_debits_bank;
                      }   

                    

                       $totalmines= $totalcredits-$totaldebits;
                       if($totalmines>0)
                       {
                        $st1=1;
                       }
                       else
                       {
                        $st1=0;
                       }






                         // $totalmines= abs($totalmines);
                         // $array['totaldebits']=round($totaldebits);
                         // $array['totalcredits']=round($totalcredits);
                         // $array['totalmines']=round($totalmines);
                         // $array['st1']=round($st1);




                         //   $array['totaldebits_cash']=round($totaldebits_cash);
                         //   $array['totalcredits_cash']=round($totalcredits_cash);
                         //   $array['total_value_cash']=round($total_value_cash);
                         //   $array['cash_get']=round($cash_get);


  // foreach ($array as $key => $value) {
  //                      $sum += $value[credits];
  //                      // var_dump($value['subarray']);
  //                    }

  //                  var_dump($sum);
                  $set = array_merge($array, $array2);
                     echo json_encode($set);
                  

                     



    }
    
    
    
      public function day_book_all_view_balance()
    {

                    $accountshead=0;

                     $qq="";
                     $St="";

                     $accountheads_sub_group=$_GET['accountheads_sub_group'];

                        $limit=$_GET['limit'];
                        $timestampForGivenDate = strtotime ($_GET['formdate']);
                        $timestampForGivenDate1 = strtotime ($_GET['todate']);
                        $formdate=date('Y-m-d', $timestampForGivenDate);
                        $todate=date('Y-m-d', $timestampForGivenDate1);
                        // echo $formdate;
                        // die;
                        $party_type=$_GET['party_type'];
                        $opening_date=date('d-m-Y',strtotime ($formdate));         
                     
                     $Stl="";
                     $banksteup_bank="";
                   
                     if($party_type=='All'){
                        $St=' ';
                     }
                     else{
                        $St=' AND party_type='.$party_type;              
                     }

                    //  $cashamount=$this->db->query("SELECT SUM(credit - debit) as total_value
                    //  FROM bankaccount_manage
                    //  WHERE create_date = '2023-08-02' AND deleteid = 0 AND bank_account_id = '25'");

                     $opening_balance=$this->db->query("SELECT SUM(credit-debit) as total_value FROM bankaccount_manage  WHERE  `create_date`  < '".$formdate."' AND  deleteid=0  AND bank_account_id='25' AND party_type NOT IN('1','2','3','5') $St ORDER BY create_date ASC");
                     $opening_balance=$opening_balance->result();
                      foreach ($opening_balance as  $val)
                     {
                               
                               $total_value_opening=$val->total_value;
                     }

                     $closing_balance=$this->db->query("SELECT SUM(credit-debit) as total_value FROM bankaccount_manage  WHERE  `create_date`  < '".$todate."' AND  deleteid=0  AND bank_account_id='25' AND party_type NOT IN('1','2','3','5') $St ORDER BY create_date ASC");
                     $closing_balance=$closing_balance->result();
                      foreach ($closing_balance as  $val)
                     {

                               $total_value_closing=$val->total_value;
                     }


                     $result4=$this->db->query("SELECT SUM(credits-debits) as total_value FROM all_ledgers  WHERE  `payment_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0 AND payment_mode!='Cash' $St ORDER BY payment_date ASC");
                         $result4=$result4->result();
                     $array5=array();   
                     

                     $l=$ll;
                     foreach ($result4 as  $value)
                     {
                       
                       $total_value_opening =$total_value_opening;
                       $total_value_closing = $total_value_closing;
                    //    echo $total_value;

                       if($total_value_opening>0){
                        $opening_status=1;
                       }
                       else{
                        $opening_status=0;
                       }
                       
                       if($total_value_closing>0){
                        $closing_status=1;
                       }
                       else{
                        $closing_status=0;
                       }

                       $opening_balance=abs($total_value_opening);
                       $closing_balance=abs($total_value_closing);
                               
                         $array3['opening_balance'] = round($opening_balance);
                         $array3['closing_balance'] = round($closing_balance);
                         $array3['opening_status'] = $opening_status;
                         $array3['closing_status'] = $closing_status;
                         $array3['opening_date'] = date('d-m-Y',strtotime($formdate));
                         $array3['closing_date'] = date('d-m-Y',strtotime($todate));

                        $l++;

                     }
                     
                    

                     echo json_encode($array3);
                     
                     
                     

    }
    
       public function day_book_export()
    {

                    
                       
                      $accountshead=0;
                      $qq="";
                      $St="";
                     
                     
                     
                     $limit=$_GET['limit'];
                     $formdate=$_GET['formdate'];
                     $todate=$_GET['todate'];
                     $party_type=$_GET['party_type'];
                     
                     
                     $Stl="";
                     $internal_payment_status=1;
                     $banksteup_bank="";
                     $Stl="";
                     $banksteup_bank="";
                   
                     if($party_type=='All')
                     {
                                      $St=' ';
                                     
                     }
                     else
                     {
                                      $St=' AND party_type='.$party_type;
                                      
                     }
                    
                     
                      $array5=array();   
                     
                 
                      
                     $result5=$this->db->query("SELECT * FROM bankaccount_manage  WHERE  `create_date` BETWEEN '".$formdate."' AND '".$todate."' AND  deleteid=0 $St ORDER BY create_date DESC");
                     $result5=$result5->result();
                     $ll=1;
                     foreach ($result5 as  $value)
                     {
                         
                             $query = $this->db->query("SELECT id,bank_name FROM bankaccount  WHERE deleteid='0' AND id='".$value->bank_account_id."' ORDER BY bank_name ASC");
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $bank_name=$partys->bank_name.' (Bank AC)';
                                                        $customer_id=$partys->id;
                             }
                             
                                $account_head_idname="";
                            
                            
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                        $account_head_idname=$ass->name;
                                                       
                             }
                             
                             
                             $url='bankaccount/statement?bank_id='.$customer_id.'&name='.$bank_name;
                             
                             
                             if($customer_id==24 || $customer_id==25)
                             {
                                 $nameset="Cash";
                             }
                             else
                             {
                                 $nameset="Bank transfer";
                             }
                             
                             
                             
                            $array5[] = array(
                            
                            
                            'no' => $ll, 
                            'id' => $value->id, 
                            'party_name' => $bank_name, 
                            'order_id' => '', 
                            'order_no' => '', 
                            'payment_mode' => $nameset, 
                            'reference_no' => $value->name,
                            'table'=>"bankaccount",
                            'link' => $url,
                            'invoice_link' => $invoice_link,
                            'notes' => $value->status_by, 
                            'amount' => 0, 
                            'paid_status' => $value->status, 
                            'Payoff' => $value->debit, 
                            'Payout' => $value->credit,
                            'debits' => $value->debit,
                            'credits' => $value->credit,
                            'process_by' => $value->status_by,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->create_date)), 
                            'payment_time' => $value->create_date,
                            'accounthead'=>$account_head_idname
                        
                            

                        );

                         
                         $ll++;
                     }
                     
                     
                          
                     $result4=$this->db->query("SELECT * FROM all_ledgers  WHERE `payment_date` BETWEEN '".$formdate."' AND '".$todate."'   AND deleteid=0  $St  ORDER BY payment_date ASC");
                                 
                                 
                              
                             
                     $result4=$result4->result();
                           
                          
                     
                     $array3=array();
                     
                      
                    
                 
                     
                         
                     $l=$ll;
                     foreach ($result4 as  $value) {
                       
                       
                        $account_head_idname="";
                           
                           
                              $result_account_head=$this->db->query("SELECT * FROM accountheads_sub_group WHERE  id='".$value->account_head_id."'  ORDER BY sort_order ASC");
                              $result_account_head_text=$result_account_head->result();
                              
                             foreach($result_account_head_text as $ass)
                             {
                                                         $account_head_idname=$ass->name;
                                                       
                             }
                            
                           
                         if($value->debits==''){ $value->debits=0; }
                         if($value->credits==''){ $value->credits=0; }
                         
                            if($value->party_type==1)
                            {
                                $table='customers';
                                $traget='customer';
                                  $traget2='customer_id';
                                $query = $this->db->query("SELECT id,company_name as name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."'  ORDER BY company_name ASC");
                                        
                            }
                            if($value->party_type==2)
                            {
                                $table='driver';
                                $traget='driver';
                                  $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                        
                            }
                             if($value->party_type==3)
                            {
                                $table='vendor';
                                $traget='vendor';
                                $traget2='customer_id';
                                $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                            }
                            
                            if($value->party_type==5)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                            if($value->party_type==6)
                            {
                                        $table='accountheads_sub_group';
                                        $traget='accountheads_sub_group';
                                        $traget2='customer_id';
                                        $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            if($value->party_type==7)
                            {
                                        $table='accountheads';
                                        $traget='accountheads';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            
                             if($value->party_type==8)
                            {
                                        $table='admin_users';
                                        $traget='admin_users';
                                        $traget2='customer_id';
                                        
                                         $query = $this->db->query("SELECT id,name FROM $table  WHERE deleteid='0' AND id='".$value->customer_id."' ORDER BY name ASC");
                                
                                        
                            }
                            $party_name="";
                             $res=$query->result();
                             foreach($res as $partys)
                             {
                                                        $party_name=$partys->name;
                                                        $customer_id=$partys->id;
                             }
                             
                             
                             
                            $url=$traget.'/ledger_find?'.$traget2.'='.$customer_id.'&party_type='.$value->party_type;
                             
                             
                            $bank_name="";
                            $bank_name_dd= $this->Main_model->where_names('bankaccount','id',$value->bank_id);
                            foreach($bank_name_dd as $bb)
                            {
                               $bank_name=$bb->bank_name;
                              
                            }
                             
                         
                            $array3[] = array(
                            
                            
                            'no' => $l, 
                            'id' => $value->id, 
                            'party_name' => $party_name, 
                            'order_id' => $value->order_id, 
                            'order_no' => $value->order_no, 
                            'payment_mode' => $value->payment_mode, 
                            'reference_no' => $value->reference_no,
                            'table'=>"all_ledgers",
                            'link' => $url, 
                            'notes' => $value->notes, 
                            'amount' => $value->amount, 
                            'paid_status' => $value->paid_status, 
                            'Payoff' => $value->payin, 
                            'Payout' => $value->payout,
                            'debits' => $value->debits,
                            'credits' => $value->credits,
                            'process_by' => $value->process_by,
                            'balance' => $value->balance,
                            'bank_name'=>$bank_name,
                            'payment_date' => date('d-m-Y',strtotime($value->payment_date)), 
                            'payment_time' => $value->payment_time,
                            'accounthead'=>$account_head_idname
                        
                            

                        );


                        $l++;

                     }
                     
                     
                     
                     
               
                     
                     
                     
                     $arrayval=array_merge($array5,$array3);

                   
                 
                     
                            $filename=date('d-m-Y',strtotime($formdate)).'_'.$nameset."Day_book_Ledger_Transaction"; 
                            header("Content-Type: application/xls");    
                            header("Content-Disposition: attachment; filename=$filename.xls");  
                            header("Pragma: no-cache"); 
                            header("Expires: 0");
                  
                   ?>
                   
                      <table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr>


                          <th colspan="8" style="text-align:center;font-size:16px;">DAY BOOK <?php echo date('d-m-Y',strtotime($formdate)); ?></th>
                        
                        </tr>
                      </thead>
                       
                      
                      
                    </table>
                      <table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr>


                          <th>No</th>
                          <th>Date</th>
                          <th>Particulars</th>
                          <th>Party Name </th>
                          <th>Transation  No </th>
                          <th>Transation Type</th>
                          <th style="font-weight:800;text-align: right;">Debit</th>
                          <th style="font-weight:800;text-align: right;">Credit</th>
                         
                         
                        </tr>
                      </thead>
                        <tbody  ng-repeat="names in namesDataledgergroup" >
                            
                            
                            
                        <?php
                        foreach($arrayval as $names)
                        {
                            ?>
                            
                             <tr  class="trpoint" >
                          
                           <td><?php echo $names['no']; ?></td>
                             
                         
                           <td><?php echo $names['payment_date']; ?> </td>
                           <td><?php echo $names['process_by']; ?></td>
                           <td><?php echo $names['party_name']; ?></td>
                           <td><?php echo $names['reference_no']; ?></td>
                           <td><?php echo $names['payment_mode']; ?></td>
                           <td style="font-weight:800;text-align: right;"> <?php echo $names['debits']; ?></td>
                           <td style="font-weight:800;text-align: right;"> <?php echo $names['credits']; ?></td>
                          
                         
                          
                           </tr>
                        
                            
                            <?php
                            
                            
                        }
                        
                        ?>
                       
                      
                      </tbody>
                      
                      
                      
                      
                     
                      
                      
                      
                      
                    </table>
                   <?php

    }
    
    

    public function customer_balance_comparision()
    {
                

                 
                  
        if(isset($this->session->userdata['logged_in']))
        {
            
             $data['customers']= $this->Main_model->where_names_two_order_by('admin_users','deleteid',0,'access',12,'id','ASC'); 
             
             $data['table_customize'] = $this->Main_model->where_names('table_customize','user_id',$this->userid);
             
             
             
             
             
             $data['sales_group'] = $this->Main_model->where_names('sales_group','deleteid','0');
           
             $data['categories'] = $this->Main_model->where_names('categories','deleteid','0');
             $data['active_base']='route';
             $data['active']='route';
             $data['title']    = 'Balance Report';
             $data['top_nav']  = $this->load->view('commen/top_nav', $data, TRUE);
             $data['side_nav'] = $this->load->view('commen/side_nav', $data, TRUE);
             $data['footer_copy_rights'] = $this->load->view('commen/footer_copy_rights', $data, TRUE);
             $data['benchmark_date'] = $this->getBenchmarkDate();
            //  echo $data['benchmark_date'];
            //  exit;
             $this->load->view('report/customer_balance_comparision_report.php',$data);


        }
        else
        {

              redirect('index.php/adminmain');

        }                    
                  


    }

 



 


    public function fetch_data_customer_balance_comparision()
    {

        //exit;
 $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

 $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

         function divideVal($value){
            if($value != 0 && $value != ''){
                if($_GET['dividend'] == 1){
                    return floatval(round($value,2));
                }elseif($_GET['dividend'] == 'L'){
                    return floatval(round(($value/100000),2));
                }elseif($_GET['dividend'] == 'C') {
                    return floatval(round(($value/10000000),2));
                }
            }else{
                return 0;
            }
 
         }
// $testMode = (isset($_GET['test']) && $_GET['test']);

         function refineValue($value){
            if($value != 0 && $value != ''){
                return floatval(round($value,2));
            }else{
                return 0;
            }
 
         }
         //$customer_id=31804; 
          $testMode = (isset($_GET['test']) && $_GET['test'] == 'true');
                      $testMode = true;

         $sales_group=$_GET['sales_group'];
 
         $formdate=$_GET['formdate'];
         $todate=$_GET['todate'];
         $usersgroup = " ";
         if($sales_group!='ALL')
         {
 
              $usersgroup=' AND a.id="'.$sales_group.'"';
 
         }
         $slCond = '';
         $order_status = $_GET['order_status'];
         if($order_status != 'ALL'){
            $slCond = 'AND  aa.id = '.$order_status.'  ';
         }
 
 
         $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 $usersgroup $slCond  GROUP BY a.id ORDER BY a.name ASC");
         $result=$result->result();
        $dates = array($formdate,$todate);
        // $dates = array($formdate);
 
          $arrayMain = array();
          $totals = array();
         $customerListArray = $this->db->query("SELECT company_name, id FROM customers WHERE deleteid = 0")->result();
         $cusNames = [];
         foreach($customerListArray as $cus){
            $cusNames[$cus->id] = $cus->company_name;
         }

         foreach($dates as $loopDate){
            $i=1;
            $array=array();
 
            foreach ($result as $valuessg) {
                $salesperson                 = [];
                $get_sales_person = $this->db->query(
                    "SELECT aa.id as sales_team_id,b.mark_vendor_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND aa.status = 1 AND a.party_type='1' $slCond AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 GROUP BY aa.id ORDER BY aa.username ASC"
                );
                $get_sales_person = $get_sales_person->result();
                $balanceLedgerSl = 0;
                $sheettotal_sales_master = 0;
                $grpBalance = 0;
 
                // print_r($get_sales_person);
                // exit;
                foreach ($get_sales_person as $valueget) {
                    $overAllBal = 0;
                    $sheettotal_sales = 0;
                    $balanceLedger = 0;
                    $balancetoatal_sales = 0;
                    $net_balance_sales = 0;


                    $limitExtend = " SET SESSION group_concat_max_len = 999999 ";
                    $setLimit = $this->db->query($limitExtend);
            

              // $resultsubdata=$this->db->query("SELECT a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."' AND b.mark_vendor_id IN ('0','1','-1')  $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");



                    $resultsubdata=$this->db->query(" SELECT GROUP_CONCAT(distinct b.mark_vendor_id SEPARATOR ',')  as mark_vendor_ids,GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id'  ORDER BY b.company_name ASC")->result();


   $resultsubdataArray=$this->db->query("SELECT b.id, b.mark_vendor_id, b.company_name  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id' and a.deleteid = 0  GROUP BY b.id")->result();
   
                    // print_r($resultsubdataArray);
                    // exit;
                    $customerData = $resultsubdata[0]->customersList;
                    $customerIds = explode(",", $customerData);

                   $mark_vendor_ids = $resultsubdata[0]->mark_vendor_ids;
                   $mark_vendor_ids_val = explode(",", $mark_vendor_ids);



                    $customerIdsFromated = [];
                   foreach ($customerIds as $key => $value) {
                       if (is_numeric($value)) {
                           $customerIdsFromated[$key] = "'" . $value . "'";
                       }
                   }
                   $customerData = implode(",", $customerIdsFromated);

                   $vendorids = [];
                   foreach ($mark_vendor_ids_val as $keys => $values) {
                       if (is_numeric($values))
                       {   
                          if($values>0)
                          {
                            $vendorids[$keys] = "'" . $values . "'";
                          }
                           
                       }
                   }

                   $vendors = implode(",", $vendorids);
                   // $overallProduction = array();
   

                   if($testMode){
                      
                            $overallProduction = $this->db->query("SELECT 
                                   b.customer_id,SUM(b.total_picked_amount) AS totalvalue,
                                   SUM(os.bill_total) AS bill_total
                                   FROM 
                                        order_product_list_process AS a 
                                    JOIN order_delivery_order_status AS b ON a.order_id = b.order_id
                                    JOIN orders_process AS os ON a.order_id = os.id
                                         
                                        JOIN all_ledgers al ON al.order_id = b.order_id  WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND a.return_status=0 AND b.order_base>0
                                        AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$todate'  AND (b.assign_status_12_date > '$todate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$todate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                   
                                    ORDER BY 
                                        a.id DESC")->result();
                      // exit;
                   }else{
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                   
            
                      if($testMode){
                     $overallTotal = $this->db->query("SELECT b.customer_id,SUM(b.total_picked_amount) AS totalvalue
                                                                FROM  order_product_list_process AS a 
                                    JOIN 
                                        order_delivery_order_status AS b ON a.order_id = b.order_id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND b.order_base > 0
                                         AND b.reason != 'Return To Re-sale' AND b.return_status=0
                                                                      AND b.deleteid = 0  
                                                                      AND (
                                                                           CASE
                                                                              WHEN (b.delivery_status = 2 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$todate' OR b.assign_status_2_date IS NULL)) OR (b.delivery_status = 1 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)) THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  
                                                                 
                                                                  ORDER BY 
                                                                      a.id DESC")->result();


                 }else{
                  $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }
                if($testMode){
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }else{
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0  GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }
                   
                    if($testMode){
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }else{
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }
            
             if($testMode){
                     $overallTransit = $this->db->query("SELECT b.customer_id,SUM(b.total_picked_amount) AS totalvalue
                                                                FROM  order_product_list_process AS a 
                                    JOIN 
                                        order_delivery_order_status AS b ON a.order_id = b.order_id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)  
                                        AND b.order_base > 0
                                        AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0  AND b.return_status=0
                                        AND (
                                            CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$todate' AND ((b.trip_end_date >= '$todate' OR b.trip_end_date IS NULL) AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$todate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    
                                    ORDER BY 
                                        a.id DESC")->result();


                  }else{
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }




   








      $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
                          
                   $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                          
                   $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   



 


                  





      //             $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id  FROM all_ledgers as a LEFT JOIN customers c ON c.id = a.customer_id  WHERE   a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND  c.sales_team_id='$valueget->sales_team_id'  GROUP BY a.customer_id ")->result(); 
      //                                          // $resultDRsscurrentdate=$resultDRsscurrentdate              
      // $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id  FROM all_ledgers as a LEFT JOIN customers c ON c.id = a.customer_id   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0' AND   c.sales_team_id='$valueget->sales_team_id'   GROUP BY a.customer_id ")->result(); 
                                               // $resultDRsscurrentdate=$resultDRsscurrentdate              
             //    
                $masterData = [];
                $custData = [];
//  
//             echo "SELECT SUM(b.bill_total) as bill_total , b.customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer_id IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 GROUP BY b.customer_id ORDER BY b.id DESC";
                // print_r($resultDR);
                // exit;

        //     foreach ($overallProduction as $item) {
        //         $cusData[$item->customer_id]['totalvalue'] = $item->totalvalue;
        //         $cusData[$item->customer_id]['production'] = $item->totalvalue;
        // }
        foreach ($overallProduction as $item) {
            $custData[$item->customer_id]['production'] =  0;
            $totalValue = 0;

            $totalValue = $item->totalvalue;


             if($item->totalvalue>0)
             {
                                                                       $totalvalue=$item->totalvalue;
                                                                       //$totalvalue=$val->bill_total;
             }
             else
             {
                                                                        $totalvalue=$item->bill_total;
             }
                                                                    


            $custData[$item->customer_id]['production'] =  round($totalValue);
        }


        foreach($overallTotal as $item) {
            $custData[$item->customer_id]['total'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue;
            $custData[$item->customer_id]['total'] =  round($totalValue);
        }
        foreach($overallInproduction as $item) {
            $custData[$item->customer_id]['inproduction_total_return']= 0;
            $custData[$item->customer_id]['inproduction_total_return']= round($item->bill_total,2);
        }
        foreach($overallReturn as $item) {
            $custData[$item->customer_id]['total_return'] = 0;
            $custData[$item->customer_id]['total_return'] = round($item->bill_total,2);
        }
       foreach($overallTransit as $item) {
            $custData[$item->customer_id]['total_transit'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue;
            $custData[$item->customer_id]['total_transit'] =  round($totalValue);
        }




        $old_date_opening_balance=0;
        foreach($overallOld as $item)
        {

            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
             $old_date_opening_balance+=$item->credits - $item->debits;
               
        }
         $opeinging_balance=0;
        foreach($overallOpeningBal as $item) {
            $custData[$item->customer_id]['opeinging_balance'] = 0;
            $custData[$item->customer_id]['opeinging_balance'] = $item->credits - $item->debits;
            $opeinging_balance+=$item->credits - $item->debits;
        }
        $trnDr=0;
        $trnCr=0;
        foreach($overallCurrentBal as $item){
            $custData[$item->customer_id]['trnDr'] = 0;
            $custData[$item->customer_id]['trnCr'] = 0;
            $custData[$item->customer_id]['trnDr'] = $item->debits;
            $custData[$item->customer_id]['trnCr'] = $item->credits;
            $trnDr+=$item->debits;
                    $trnCr+=$item->credits;
        }
        // foreach($resultDRsscurrentdate as $item){
        //    $custData[$item->mark_vendor_id]['opeinging_balance_vendor'] = 0;
        //    $custData[$item->mark_vendor_id]['opeinging_balance_vendor'] = $item->credits - $item->debits;
           
        // }
        //  foreach($resultDR as $item){
        //    $custData[$item->mark_vendor_id]['debits_vendor'] = 0;
        //    $custData[$item->mark_vendor_id]['debits_vendor'] = $item->debits;
        //    $custData[$item->mark_vendor_id]['credits_vendor'] = 0;
        //    $custData[$item->mark_vendor_id]['credits_vendor'] = $item->credits;
           
        // }

        // echo "<table>";
        // print_r($custData);
        // exit;

        foreach ($resultsubdataArray as $customerId){
                        // $masterData[$customerId] = $customerId;
                        $masterData[$customerId->id]['production'] = 0;
                        $masterData[$customerId->id]['total'] = 0;
                        $masterData[$customerId->id]['inproduction_total_return'] = 0;
                        $masterData[$customerId->id]['total_return'] = 0;
                        $masterData[$customerId->id]['total_transit'] = 0;

                        $masterData[$customerId->id]['production'] = $custData[$customerId->id]['production'];
                        $masterData[$customerId->id]['total'] = $custData[$customerId->id]['total'];
                        $masterData[$customerId->id]['inproduction_total_return']= ($custData[$customerId->id]['inproduction_total_return']);
                        $masterData[$customerId->id]['total_return'] = $custData[$customerId->id]['total_return'];
                        $masterData[$customerId->id]['total_transit']  = ($custData[$customerId->id]['total_transit']);

                        $masterData[$customerId->id]['total_credit_balance'] = 0;
                        $masterData[$customerId->id]['total_debit_balance']           = 0;
                        $masterData[$customerId->id]['total_credit_balance_new']       = 0;
                        $masterData[$customerId->id]['total_debit_balance_new']        = 0;
                        $masterData[$customerId->id]['opening_balance']                = 0;

                         $masterData[$customerId->id]['trnDr'] = 0;
                        $masterData[$customerId->id]['trnCr'] = 0;


  if($valueget->sales_team_id==1890)
 {


                        










$resultDRsscurrentdate_s=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate."'  AND a.opening_balance_status='0'  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$customerId->mark_vendor_id."','".$customerId->id."')");
$resultDRsscurrentdate_s=$resultDRsscurrentdate_s->result();
$old_date_opening_balance=$resultDRsscurrentdate_s[0]->credits-$resultDRsscurrentdate_s[0]->debits; 

    
 $resultDRsscurrentdate_vendor=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1' AND a.cnn_status = 0  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$customerId->mark_vendor_id."','".$customerId->id."')");
  $resultDRsscurrentdate_vendor=$resultDRsscurrentdate_vendor->result();

              

   $opeinging_balance=$resultDRsscurrentdate_vendor[0]->credits-$resultDRsscurrentdate_vendor[0]->debits; 


      $masterData[$customerId->id]['old_date_opening_balance'] =  $old_date_opening_balance;
      $masterData[$customerId->id]['opeinging_balance'] = $opeinging_balance;

 $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$customerId->mark_vendor_id."'");
       $resultDR=$resultDR->result();

                                      
                                         foreach($resultDR as $vald)
                                         { 

                             $debits=$vald->debits;
                             $credits=$vald->credits;
                             

                                         }
                
                $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr']+$debits;
                $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr']+$credits;

 }
 else
 {


                $masterData[$customerId->id]['old_date_opening_balance'] =  $custData[$customerId->id]['old_date_opening_balance'];
                $masterData[$customerId->id]['opeinging_balance'] = $custData[$customerId->id]['opeinging_balance'];
                $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr'];
                $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr'];

 }
       

                       
                        if ($masterData[$customerId->id]['old_date_opening_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        }

                        
                        if ($masterData[$customerId->id]['opeinging_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        }
                        //Vendor
                            
                                

                        $masterData[$customerId->id]['totalvaluecrited']   = round($masterData[$customerId->id]['total_credit_balance'] + $masterData[$customerId->id]['total_credit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluedebit']    = round($masterData[$customerId->id]['total_debit_balance'] + $masterData[$customerId->id]['total_debit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluecrited']   = abs($masterData[$customerId->id]['totalvaluecrited']);
                        $masterData[$customerId->id]['totalvaluedebit']    = abs($masterData[$customerId->id]['totalvaluedebit']);
                        $masterData[$customerId->id]['opening_balance_val'] = $masterData[$customerId->id]['totalvaluecrited'] - $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance_cr'] = $masterData[$customerId->id]['totalvaluecrited'];
                        $masterData[$customerId->id]['opening_balance_dr'] = $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance'] = abs($masterData[$customerId->id]['opening_balance_val']);
                        $masterData[$customerId->id]['sheet_in_factory'] = ($masterData[$customerId->id]['total'] + $masterData[$customerId->id]['total_return']);

                        
                        
                        


                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $Totaltranspotval=0;
                    $TotalDr=$masterData[$customerId->id]['opening_balance_dr'];
                    $TotalCr=$masterData[$customerId->id]['opening_balance_cr'];
                    $totbalance=  $masterData[$customerId->id]['trnCr']-$masterData[$customerId->id]['trnDr'];
                    $Total_trn_dr               = $masterData[$customerId->id]['opening_balance_dr'] + $masterData[$customerId->id]['trnDr'];
                    $Total_trn_cr               = $masterData[$customerId->id]['opening_balance_cr'] + $masterData[$customerId->id]['trnCr'];
 //Vendor
                      
                    //  echo $Total_trn_dr."====".$Total_trn_cr.'<br/>';
                     if ($Total_trn_dr < $Total_trn_cr) {
                         $creditsset = $Total_trn_dr - $Total_trn_cr;
                         $creditsset = abs($creditsset);
                         $payment_status_bu_closeing = 'CR';
                         $closeing = $creditsset;
                     } else {
                         $debitsset = $Total_trn_cr - $Total_trn_dr;
                         $debitsset = abs($debitsset);
                         $payment_status_bu_closeing = 'DR';
                         if ($debitsset == 0) {
                             $payment_status_bu_closeing = 'CR';
                         } else {
                             $payment_status_bu_closeing = 'DR';
                         }
                         $closeing = $debitsset;
                     }
                    // if($masterData[$customerId]['production'] || $masterData[$customerId]['sheet_in_factory'] || $masterData[$customerId]['total_transit'] || $masterData[$customerId]['inproduction_total_return']){
                    //   echo "<tr><td>" . $cusNames[$customerId]."</td><td> ".$masterData[$customerId]['production']."</td><td> ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['total_transit']."</td><td> ".$masterData[$customerId]['inproduction_total_return']."</td></tr>";
                    // }
                     $Totaltranspot = 0;
                         if($payment_status_bu_closeing=='DR')
                         {
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit'];
                             $Totaltranspotval= $closeing-$Totaltranspot;
                             $Totaltranspotval= $Totaltranspotval-$masterData[$customerId->id]['inproduction_total_return'];
                         }
 
 
                          if($payment_status_bu_closeing=='CR')
                         {
                             
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit']+$masterData[$customerId->id]['inproduction_total_return'];
                             //$Totaltranspotval= $closeing-$Totaltranspot;
                             if($closeing>0)
                             {
                                $Totaltranspot=$closeing+$Totaltranspot;
                         

                                $Totaltranspotval= '-'.$Totaltranspot;
                             }
                             else
                             {
                                $Totaltranspotval= '-'.$Totaltranspot;
 
                             }
                         }
 
                         
                         



                      

                          $sheet=0;
                          $st=0;
                          $st=$masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['inproduction_total_return']+$masterData[$customerId->id]['total_transit'];

                        //   echo $masterData[$customerId]['production']." ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['inproduction_total_return']." ".$masterData[$customerId]['total_transit'].'<br/>';;
                          $totalcloseingbalance=$debitsset-$creditsset;
                          $netbalance_total_set=$totalcloseingbalance-$st;
                          
                           if($netbalance_total_set>0)
                           {
                                  $sheet=$st;
                           }
                           else
                           {
                                  $sheet=$debitsset;
                           }

                        //    $sheet = round($sheet,2);
                          $sheettotal_sales+=round($sheet,2);
                          $sheettotal_sales_master+=$sheet;
                        //   $totabetbalance+=$debitsset-$sheet;



                         $net_balance_sales +=$debitsset-$sheet;
                         $grpBalance +=$debitsset-$sheet;




                        if($Totaltranspotval > 0 && $Totaltranspotval != 0){
                            $balanceLedger = $balanceLedger + 1;
                            $balanceLedgerSl = $balanceLedgerSl + 1;
                        }elseif($Totaltranspotval < 0 && $Totaltranspotval != 0){
                            $creditLedger = $creditLedger + 1;
                            $creditLedgerSl = $creditLedgerSl + 1;
                        }
                        
                         if($sheet > 0){
                             $sheetLedger = $sheetLedger + 1;
                             $sheetLedgerSl = $sheetLedgerSl + 1;
                         }
                
                    }
               
                   $updatedBalLed = [];
                   $updatedActBal = [];
                   $updatedSheet = [];
                   $updatedBalLed = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'bal_led');
                   $updatedActBal = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'act_bal');
                   $updatedSheet = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'sheet');

                   if($updatedBalLed[0] && count($updatedBalLed) > 0){
                    $balanceLedger = $updatedBalLed[0]->value;
                   }
                   if($updatedActBal[0] && count($updatedActBal) > 0){
                    $net_balance_sales = $updatedActBal[0]->value;
                   }
                   if($updatedSheet[0] && count($updatedSheet) > 0){
                    $sheettotal_sales = $updatedSheet[0]->value;
                   }

                   $spSerialNo = $spSerialNo + 1;
                   $salesperson[]=array(
                       'no' => $spSerialNo,
                       'sales_person_id'=>$valueget->sales_team_id,
                       'sales_team_id'=>$valueget->sales_team_id,
                       'id'=>$valueget->sales_team_id,
                       'sales_person_name'=>$valueget->sales_person_name,
                       'sheet' => divideVal($sheettotal_sales ),
                       'sheet_nd' => round($sheettotal_sales,2),
                       'balance' =>  divideVal(is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'balance_nd' =>    (is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'total'=>divideVal($sheettotal_sales+$net_balance_sales),
                       'total_nd'=> ($sheettotal_sales+$net_balance_sales),
                       'balance_ledger' =>$balanceLedger,
                       'credit_ledger' =>$creditLedger,
                       'sheet_ledger' =>$sheetLedger,
                        'updates_bal_led' => $updatedBalLed,
                        'updates_act_bal' => $updatedActBal,
                        'updates_sheet' => $updatedSheet
                  );
               }

               $totalcloseing = round($debitssettotal - $creditssettotal, 2);
               $totalcloseing = abs($totalcloseing);
               $balancetoatal = abs($balancetoatal);
               $array[] = array(


                   'no' => $i,
                   'id' => $valuessg->sales_group_id,
                   // 'sales_team_id'=>$valuessg->sales_group_id,
                   'sales_group_name' => $valuessg->sales_group_name,
                   'balance_ledger'=> $balanceLedgerSl,
                   'credit_ledger' =>$creditLedgerSl,
                    'sheet_ledger' =>$sheetLedgerSl,
                   'net_balance' => divideVal(round($grpBalance, 2)),
                   'net_balance_nd' =>  (round($grpBalance, 2)),
                   'sheet_total'=> divideVal(round($sheettotal_sales_master,2)),
                   'sheet_total_nd'=>  (round($sheettotal_sales_master,2)),
                   'total_nd'=>  (round($grpBalance,2)+round($sheettotal_sales_master,2)),
                   'total'=>  divideVal(round($grpBalance,2)+round($sheettotal_sales_master,2)),
                   'salesperson'=>$salesperson

               );
               $i++;
           }
           $arrayMain[] = $array;
 
        }
        //  exit;
         $rootData = $arrayMain[0];
         $rootTwo = $arrayMain[1];
         $totals = array();
 
         foreach ($rootData as $key => &$team) {
            $team['net_balance2'] = $rootTwo[$key]['net_balance'];
            $team['net_balance2_nd'] = $rootTwo[$key]['net_balance_nd'];
            $team['balance_ledger2'] = $rootTwo[$key]['balance_ledger'];
            $team['sheet_total2'] = $rootTwo[$key]['sheet_total'];
            $team['sheet_total2_nd'] = $rootTwo[$key]['sheet_total_nd'];
            $team['total2'] = $rootTwo[$key]['total'];
            $team['total2_nd'] = $rootTwo[$key]['total_nd'];
            $team['totalMain'] = $team['net_balance'] - $team['net_balance2'];
            $team['totalMain_nd'] = $team['net_balance_nd'] - $team['net_balance2_nd'];
            $totals['net_balance'] += $team['net_balance'];
            $totals['net_balance_nd'] += $team['net_balance_nd'];
            $totals['net_balance2'] += $team['net_balance2'];
            $totals['net_balance2_nd'] += $team['net_balance2_nd'];
            $totals['balance_ledger'] += $team['balance_ledger'];
            $totals['balance_ledger2'] += $team['balance_ledger2'];
            $totals['sheet_total'] += $team['sheet_total'];
            $totals['sheet_total_nd'] += $team['sheet_total_nd'];
            $totals['sheet_total2'] += $team['sheet_total2'];
            $totals['sheet_total2_nd'] += $team['sheet_total2_nd'];
            $totals['totalMain'] += $team['totalMain'];
            $totals['totalMain_nd'] += $team['totalMain_nd'];
            $totals['total'] += $team['total'];
            $totals['total_nd'] += $team['total_nd'];
            $totals['total2'] += $team['total2'];
            $totals['total2_nd'] += $team['total2_nd'];
         }
 
        $arrayMain[] = $totals;
        // exit;
        echo json_encode($arrayMain);
 
    }
  

    public function fetch_data_customer_balance_comparision_export()
    {
       $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

$this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

function divideVal($value){
            if($value != 0 && $value != ''){
                if($_GET['dividend'] == 1){
                    return floatval(round($value,2));
                }elseif($_GET['dividend'] == 'L'){
                    return floatval(round(($value/100000),2));
                }elseif($_GET['dividend'] == 'C') {
                    return floatval(round(($value/10000000),2));
                }
            }else{
                return 0;
            }
 
         }
// $testMode = (isset($_GET['test']) && $_GET['test']);

         function refineValue($value){
            if($value != 0 && $value != ''){
                return floatval(round($value,2));
            }else{
                return 0;
            }
 
         }
         //$customer_id=31804; 
          $testMode = (isset($_GET['test']) && $_GET['test'] == 'true');
                      $testMode = true;

         $sales_group=$_GET['sales_group'];
 
         $formdate=$_GET['formdate'];
         $todate=$_GET['todate'];
         $usersgroup = " ";
         if($sales_group!='ALL')
         {
 
              $usersgroup=' AND a.id="'.$sales_group.'"';
 
         }
         $slCond = '';
         $order_status = $_GET['order_status'];
         if($order_status != 'ALL'){
            $slCond = 'AND  aa.id = '.$order_status.'  ';
         }
 
 
         $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 $usersgroup $slCond  GROUP BY a.id ORDER BY a.name ASC");
         $result=$result->result();
        $dates = array($formdate,$todate);
        // $dates = array($formdate);
 
          $arrayMain = array();
          $totals = array();
         $customerListArray = $this->db->query("SELECT company_name, id FROM customers WHERE deleteid = 0")->result();
         $cusNames = [];
         foreach($customerListArray as $cus){
            $cusNames[$cus->id] = $cus->company_name;
         }

         foreach($dates as $loopDate){
            $i=1;
            $array=array();
 
            foreach ($result as $valuessg) {
                $salesperson                 = [];
                $get_sales_person = $this->db->query(
                    "SELECT aa.id as sales_team_id,b.mark_vendor_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND aa.status = 1 AND a.party_type='1' $slCond AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 GROUP BY aa.id ORDER BY aa.username ASC"
                );
                $get_sales_person = $get_sales_person->result();
                $balanceLedgerSl = 0;
                $sheettotal_sales_master = 0;
                $grpBalance = 0;
 
                // print_r($get_sales_person);
                // exit;
                foreach ($get_sales_person as $valueget) {
                    $overAllBal = 0;
                    $sheettotal_sales = 0;
                    $balanceLedger = 0;
                    $balancetoatal_sales = 0;
                    $net_balance_sales = 0;


                    $limitExtend = " SET SESSION group_concat_max_len = 999999 ";
                    $setLimit = $this->db->query($limitExtend);
            

              // $resultsubdata=$this->db->query("SELECT a.id as l_id,a.md_verification,b.excess_status,b.id,b.sales_team_id,b.sales_group,b.locality,b.feedback_details,b.phone,b.opening_balance,b.company_name,b.payment_status  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id   WHERE   b.deleteid=0 AND b.sales_team_id='".$valueget->sales_team_id."' AND b.mark_vendor_id IN ('0','1','-1')  $stat $userslog $searchsql2 GROUP BY b.id ORDER BY b.company_name ASC");



                    $resultsubdata=$this->db->query(" SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id'  ORDER BY b.company_name ASC")->result();


   $resultsubdataArray=$this->db->query(" SELECT b.id, b.mark_vendor_id, b.company_name  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id' and a.deleteid = 0  GROUP BY b.id")->result();
   
                    // print_r($resultsubdataArray);
                    // exit;
                    $customerData = $resultsubdata[0]->customersList;
                    $customerIds = explode(",", $customerData);
                    $customerIdsFromated = [];
                   foreach ($customerIds as $key => $value) {
                       if (is_numeric($value)) {
                           $customerIdsFromated[$key] = "'" . $value . "'";
                       }
                   }
                   $customerData = implode(",", $customerIdsFromated);
                   // $overallProduction = array();
   

                   if($testMode){
                      $overallProduction = $this->db->query("SELECT 
                                   b.customer_id,SUM(b.total_picked_amount) AS totalvalue,
                                   SUM(os.bill_total) AS bill_total
                                   FROM 
                                        order_product_list_process AS a 
                                    JOIN order_delivery_order_status AS b ON a.order_id = b.order_id
                                    JOIN orders_process AS os ON a.order_id = os.id
                                         
                                        JOIN all_ledgers al ON al.order_id = b.order_id  WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND a.return_status=0 AND b.order_base>0
                                        AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$todate'  AND (b.assign_status_12_date > '$todate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$todate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                   
                                    ORDER BY 
                                        a.id DESC")->result();
                      // exit;
                   }else{
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                   
            
                      if($testMode){
                   $overallTotal = $this->db->query("SELECT b.customer_id,SUM(b.total_picked_amount) AS totalvalue
                                                                FROM  order_product_list_process AS a 
                                    JOIN 
                                        order_delivery_order_status AS b ON a.order_id = b.order_id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND b.order_base > 0
                                         AND b.reason != 'Return To Re-sale' AND b.return_status=0
                                                                      AND b.deleteid = 0  
                                                                      AND (
                                                                           CASE
                                                                              WHEN (b.delivery_status = 2 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$todate' OR b.assign_status_2_date IS NULL)) OR (b.delivery_status = 1 AND b.assign_status_11_date <= '$todate' AND (b.assign_status_3_date > '$todate' OR b.assign_status_3_date IS NULL)) THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  
                                                                 
                                                                  ORDER BY 
                                                                      a.id DESC")->result();
                 }else{
                  $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }
                if($testMode){
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }else{
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0  GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }
                   
                    if($testMode){
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }else{
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }
            
             if($testMode){
                     $overallTransit = $this->db->query("SELECT b.customer_id,SUM(b.total_picked_amount) AS totalvalue
                                                                FROM  order_product_list_process AS a 
                                    JOIN 
                                        order_delivery_order_status AS b ON a.order_id = b.order_id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)  
                                        AND b.order_base > 0
                                        AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0  AND b.return_status=0
                                        AND (
                                            CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$todate' AND ((b.trip_end_date >= '$todate' OR b.trip_end_date IS NULL) AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$todate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        )  
                                    
                                    ORDER BY 
                                        a.id DESC")->result();
                  }else{
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }
   
                   $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
                          
                   $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                          
                   $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   




                    $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   





      //             $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id  FROM all_ledgers as a LEFT JOIN customers c ON c.id = a.customer_id  WHERE   a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND  c.sales_team_id='$valueget->sales_team_id'  GROUP BY a.customer_id ")->result(); 
      //                                          // $resultDRsscurrentdate=$resultDRsscurrentdate              
      // $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id  FROM all_ledgers as a LEFT JOIN customers c ON c.id = a.customer_id   WHERE   a.payment_date BETWEEN '".$formdate."' AND '".$todate."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0' AND   c.sales_team_id='$valueget->sales_team_id'   GROUP BY a.customer_id ")->result(); 
                                               // $resultDRsscurrentdate=$resultDRsscurrentdate              
             //    
                $masterData = [];
                $custData = [];
//  
//             echo "SELECT SUM(b.bill_total) as bill_total , b.customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer_id IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 GROUP BY b.customer_id ORDER BY b.id DESC";
                // print_r($resultDR);
                // exit;

        //     foreach ($overallProduction as $item) {
        //         $cusData[$item->customer_id]['totalvalue'] = $item->totalvalue;
        //         $cusData[$item->customer_id]['production'] = $item->totalvalue;
        // }
        foreach ($overallProduction as $item) {
            $custData[$item->customer_id]['production'] =  0;
            $totalValue = 0;

            if($item->totalvalue>0)
            {
                  $totalValue = $item->totalvalue;
            }
            else
            {
                  $totalValue = $item->bill_total;
            }
            
            $custData[$item->customer_id]['production'] =  round($totalValue);
        }


        foreach($overallTotal as $item) {
            $custData[$item->customer_id]['total'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue;
            $custData[$item->customer_id]['total'] =  round($totalValue);
        }
        foreach($overallInproduction as $item) {
            $custData[$item->customer_id]['inproduction_total_return']= 0;
            $custData[$item->customer_id]['inproduction_total_return']= round($item->bill_total,2);
        }
        foreach($overallReturn as $item) {
            $custData[$item->customer_id]['total_return'] = 0;
            $custData[$item->customer_id]['total_return'] = round($item->bill_total,2);
        }
       foreach($overallTransit as $item) {
            $custData[$item->customer_id]['total_transit'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue;
            $custData[$item->customer_id]['total_transit'] =  round($totalValue);
        }
        foreach($overallOld as $item){
            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
               
        }
        foreach($overallOpeningBal as $item) {
            $custData[$item->customer_id]['opeinging_balance'] = 0;
            $custData[$item->customer_id]['opeinging_balance'] = $item->credits - $item->debits;
        }
        foreach($overallCurrentBal as $item){
            $custData[$item->customer_id]['trnDr'] = 0;
            $custData[$item->customer_id]['trnCr'] = 0;
            $custData[$item->customer_id]['trnDr'] = $item->debits;
            $custData[$item->customer_id]['trnCr'] = $item->credits;
        }
        // foreach($resultDRsscurrentdate as $item){
        //    $custData[$item->mark_vendor_id]['opeinging_balance_vendor'] = 0;
        //    $custData[$item->mark_vendor_id]['opeinging_balance_vendor'] = $item->credits - $item->debits;
           
        // }
        //  foreach($resultDR as $item){
        //    $custData[$item->mark_vendor_id]['debits_vendor'] = 0;
        //    $custData[$item->mark_vendor_id]['debits_vendor'] = $item->debits;
        //    $custData[$item->mark_vendor_id]['credits_vendor'] = 0;
        //    $custData[$item->mark_vendor_id]['credits_vendor'] = $item->credits;
           
        // }

        // echo "<table>";
        // print_r($custData);
        // exit;

        foreach ($resultsubdataArray as $customerId){
                        // $masterData[$customerId] = $customerId;
                        $masterData[$customerId->id]['production'] = 0;
                        $masterData[$customerId->id]['total'] = 0;
                        $masterData[$customerId->id]['inproduction_total_return'] = 0;
                        $masterData[$customerId->id]['total_return'] = 0;
                        $masterData[$customerId->id]['total_transit'] = 0;

                        $masterData[$customerId->id]['production'] = $custData[$customerId->id]['production'];


                        $masterData[$customerId->id]['total'] = $custData[$customerId->id]['total'];
                        $masterData[$customerId->id]['inproduction_total_return']= ($custData[$customerId->id]['inproduction_total_return']);
                        $masterData[$customerId->id]['total_return'] = $custData[$customerId->id]['total_return'];
                        $masterData[$customerId->id]['total_transit']  = ($custData[$customerId->id]['total_transit']);

                        $masterData[$customerId->id]['total_credit_balance'] = 0;
                        $masterData[$customerId->id]['total_debit_balance']           = 0;
                        $masterData[$customerId->id]['total_credit_balance_new']       = 0;
                        $masterData[$customerId->id]['total_debit_balance_new']        = 0;
                        $masterData[$customerId->id]['opening_balance']                = 0;


                        $masterData[$customerId->id]['trnDr'] = 0;
                        $masterData[$customerId->id]['trnCr'] = 0;
                       

                        
 if($valueget->sales_team_id==1890)
 {














$resultDRsscurrentdate_s=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate."'  AND a.opening_balance_status='0'  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$customerId->mark_vendor_id."','".$customerId->id."')");
$resultDRsscurrentdate_s=$resultDRsscurrentdate_s->result();
$old_date_opening_balance=$resultDRsscurrentdate_s[0]->credits-$resultDRsscurrentdate_s[0]->debits; 

    
 $resultDRsscurrentdate_vendor=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.opening_balance_status='1' AND a.cnn_status = 0  AND a.deleteid=0 AND a.party_type IN ('3','1')  AND a.customer_id IN ('".$customerId->mark_vendor_id."','".$customerId->id."')");
  $resultDRsscurrentdate_vendor=$resultDRsscurrentdate_vendor->result();

              

   $opeinging_balance=$resultDRsscurrentdate_vendor[0]->credits-$resultDRsscurrentdate_vendor[0]->debits; 


      $masterData[$customerId->id]['old_date_opening_balance'] =  $old_date_opening_balance;
      $masterData[$customerId->id]['opeinging_balance'] = $opeinging_balance;

 $resultDR=$this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='3' AND  a.cnn_status = 0 AND a.opening_balance_status='0'  AND a.customer_id='".$customerId->mark_vendor_id."'");
       $resultDR=$resultDR->result();

                                      
                                         foreach($resultDR as $vald)
                                         { 

                             $debits=$vald->debits;
                             $credits=$vald->credits;
                             

                                         }
                
                $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr']+$debits;
                $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr']+$credits;

 }
 else
 {


                $masterData[$customerId->id]['old_date_opening_balance'] =  $custData[$customerId->id]['old_date_opening_balance'];
                $masterData[$customerId->id]['opeinging_balance'] = $custData[$customerId->id]['opeinging_balance'];
                $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr'];
                $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr'];

 }




                        if ($masterData[$customerId->id]['old_date_opening_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        }

                        



                        if ($masterData[$customerId->id]['opeinging_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        }
             
                               
                                

                        $masterData[$customerId->id]['totalvaluecrited']   = round($masterData[$customerId->id]['total_credit_balance'] + $masterData[$customerId->id]['total_credit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluedebit']    = round($masterData[$customerId->id]['total_debit_balance'] + $masterData[$customerId->id]['total_debit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluecrited']   = abs($masterData[$customerId->id]['totalvaluecrited']);
                        $masterData[$customerId->id]['totalvaluedebit']    = abs($masterData[$customerId->id]['totalvaluedebit']);
                        $masterData[$customerId->id]['opening_balance_val'] = $masterData[$customerId->id]['totalvaluecrited'] - $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance_cr'] = $masterData[$customerId->id]['totalvaluecrited'];
                        $masterData[$customerId->id]['opening_balance_dr'] = $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance'] = abs($masterData[$customerId->id]['opening_balance_val']);
                        $masterData[$customerId->id]['sheet_in_factory'] = ($masterData[$customerId->id]['total'] + $masterData[$customerId->id]['total_return']);

                        
                        
                        


                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $Totaltranspotval=0;
                    $TotalDr=$masterData[$customerId->id]['opening_balance_dr'];
                    $TotalCr=$masterData[$customerId->id]['opening_balance_cr'];
                    $totbalance=  $masterData[$customerId->id]['trnCr']-$masterData[$customerId->id]['trnDr'];
                    $Total_trn_dr               = $masterData[$customerId->id]['opening_balance_dr'] + $masterData[$customerId->id]['trnDr'];
                    $Total_trn_cr               = $masterData[$customerId->id]['opening_balance_cr'] + $masterData[$customerId->id]['trnCr'];
 //Vendor
                      
                    //  echo $Total_trn_dr."====".$Total_trn_cr.'<br/>';
                     if ($Total_trn_dr < $Total_trn_cr) {
                         $creditsset = $Total_trn_dr - $Total_trn_cr;
                         $creditsset = abs($creditsset);
                         $payment_status_bu_closeing = 'CR';
                         $closeing = $creditsset;
                     } else {
                         $debitsset = $Total_trn_cr - $Total_trn_dr;
                         $debitsset = abs($debitsset);
                         $payment_status_bu_closeing = 'DR';
                         if ($debitsset == 0) {
                             $payment_status_bu_closeing = 'CR';
                         } else {
                             $payment_status_bu_closeing = 'DR';
                         }
                         $closeing = $debitsset;
                     }
                    // if($masterData[$customerId]['production'] || $masterData[$customerId]['sheet_in_factory'] || $masterData[$customerId]['total_transit'] || $masterData[$customerId]['inproduction_total_return']){
                    //   echo "<tr><td>" . $cusNames[$customerId]."</td><td> ".$masterData[$customerId]['production']."</td><td> ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['total_transit']."</td><td> ".$masterData[$customerId]['inproduction_total_return']."</td></tr>";
                    // }
                     $Totaltranspot = 0;
                         if($payment_status_bu_closeing=='DR')
                         {
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit'];
                             $Totaltranspotval= $closeing-$Totaltranspot;
                             $Totaltranspotval= $Totaltranspotval-$masterData[$customerId->id]['inproduction_total_return'];
                         }
 
 
                          if($payment_status_bu_closeing=='CR')
                         {
                             
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit']+$masterData[$customerId->id]['inproduction_total_return'];
                             //$Totaltranspotval= $closeing-$Totaltranspot;
                             if($closeing>0)
                             {
                                $Totaltranspot=$closeing+$Totaltranspot;
                         

                                $Totaltranspotval= '-'.$Totaltranspot;
                             }
                             else
                             {
                                $Totaltranspotval= '-'.$Totaltranspot;
 
                             }
                         }
 
                         
                         



                      

                          $sheet=0;
                          $st=0;
                          $st=$masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['inproduction_total_return']+$masterData[$customerId->id]['total_transit'];
                        //   echo $masterData[$customerId]['production']." ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['inproduction_total_return']." ".$masterData[$customerId]['total_transit'].'<br/>';;
                          $totalcloseingbalance=$debitsset-$creditsset;
                          $netbalance_total_set=$totalcloseingbalance-$st;
                          
                           if($netbalance_total_set>0)
                           {
                                  $sheet=$st;
                           }
                           else
                           {
                                  $sheet=$debitsset;
                           }

                        //    $sheet = round($sheet,2);
                          $sheettotal_sales+=round($sheet,2);
                          $sheettotal_sales_master+=$sheet;
                        //   $totabetbalance+=$debitsset-$sheet;
                          $net_balance_sales +=$debitsset-$sheet;
                          $grpBalance +=$debitsset-$sheet;
                        if($Totaltranspotval > 0 && $Totaltranspotval != 0){
                            $balanceLedger = $balanceLedger + 1;
                            $balanceLedgerSl = $balanceLedgerSl + 1;
                        }elseif($Totaltranspotval < 0 && $Totaltranspotval != 0){
                            $creditLedger = $creditLedger + 1;
                            $creditLedgerSl = $creditLedgerSl + 1;
                        }
                        
                         if($sheet > 0){
                             $sheetLedger = $sheetLedger + 1;
                             $sheetLedgerSl = $sheetLedgerSl + 1;
                         }
                
                    }
               
                   $updatedBalLed = [];
                   $updatedActBal = [];
                   $updatedSheet = [];
                   $updatedBalLed = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'bal_led');
                   $updatedActBal = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'act_bal');
                   $updatedSheet = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'sheet');

                   if($updatedBalLed[0] && count($updatedBalLed) > 0){
                    $balanceLedger = $updatedBalLed[0]->value;
                   }
                   if($updatedActBal[0] && count($updatedActBal) > 0){
                    $net_balance_sales = $updatedActBal[0]->value;
                   }
                   if($updatedSheet[0] && count($updatedSheet) > 0){
                    $sheettotal_sales = $updatedSheet[0]->value;
                   }

                   $spSerialNo = $spSerialNo + 1;
                   $salesperson[$valueget->sales_person_name]=array(
                       'no' => $spSerialNo,
                       'sales_person_id'=>$valueget->sales_team_id,
                       'sales_team_id'=>$valueget->sales_team_id,
                       'id'=>$valueget->sales_team_id,
                       'sales_person_name'=>$valueget->sales_person_name,
                       'sheet' => divideVal($sheettotal_sales ),
                       'sheet_nd' => round($sheettotal_sales,2),
                       'balance' =>  divideVal(is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'balance_nd' =>    (is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'total'=>divideVal($sheettotal_sales+$net_balance_sales),
                       'total_nd'=> ($sheettotal_sales+$net_balance_sales),
                       'balance_ledger' =>$balanceLedger,
                       'credit_ledger' =>$creditLedger,
                       'sheet_ledger' =>$sheetLedger,
                        'updates_bal_led' => $updatedBalLed,
                        'updates_act_bal' => $updatedActBal,
                        'updates_sheet' => $updatedSheet
                  );
               }

               $totalcloseing = round($debitssettotal - $creditssettotal, 2);
               $totalcloseing = abs($totalcloseing);
               $balancetoatal = abs($balancetoatal);
               $array[] = array(


                   'no' => $i,
                   'id' => $valuessg->sales_group_id,
                   'sales_group_name' => $valuessg->sales_group_name,
                   'balance_ledger'=> $balanceLedgerSl,
                   'credit_ledger' =>$creditLedgerSl,
                    'sheet_ledger' =>$sheetLedgerSl,
                   'net_balance' => divideVal(round($grpBalance, 2)),
                   'net_balance_nd' =>  (round($grpBalance, 2)),
                   'sheet_total'=> divideVal(round($sheettotal_sales_master,2)),
                   'sheet_total_nd'=>  (round($sheettotal_sales_master,2)),
                   'total_nd'=>  (round($grpBalance,2)+round($sheettotal_sales_master,2)),
                   'total'=>  divideVal(round($grpBalance,2)+round($sheettotal_sales_master,2)),
                   'salesperson'=>$salesperson

               );
               $i++;
           }
           $arrayMain[] = $array;
 
        }


        //  exit;
         $rootData = $arrayMain[0];
         $rootTwo = $arrayMain[1];
         $totals = array();
         $slValues = array();


         foreach ($rootData as $key => &$team) {

            $team['net_balance2'] = $rootTwo[$key]['net_balance'];
            $team['net_balance2_nd'] = $rootTwo[$key]['net_balance_nd'];
            $team['balance_ledger2'] = $rootTwo[$key]['balance_ledger'];
            $team['sheet_total2'] = $rootTwo[$key]['sheet_total'];
            $team['sheet_total2_nd'] = $rootTwo[$key]['sheet_total_nd'];
            $team['total2'] = $rootTwo[$key]['total'];
            $team['total2_nd'] = $rootTwo[$key]['total_nd'];
            $team['totalMain'] = $team['net_balance'] - $team['net_balance2'];
            $team['totalMain_nd'] = $team['net_balance_nd'] - $team['net_balance2_nd'];
                               
            $totals['net_balance'] += $team['net_balance'];
            $totals['net_balance_nd'] += $team['net_balance_nd'];
            $totals['net_balance2'] += $team['net_balance2'];
            $totals['net_balance2_nd'] += $team['net_balance2_nd'];
            $totals['balance_ledger'] += $team['balance_ledger'];
            $totals['balance_ledger2'] += $team['balance_ledger2'];
            $totals['sheet_total'] += $team['sheet_total'];
            $totals['sheet_total_nd'] += $team['sheet_total_nd'];
            $totals['sheet_total2'] += $team['sheet_total2'];
            $totals['sheet_total2_nd'] += $team['sheet_total2_nd'];
            $totals['totalMain'] += $team['totalMain'];
            $totals['totalMain_nd'] += $team['totalMain_nd'];
            $totals['total'] += $team['total'];
            $totals['total_nd'] += $team['total_nd'];
            $totals['total2'] += $team['total2'];
            $totals['total2_nd'] += $team['total2_nd'];
             // if(isset($team['salesperson'])){
               
 foreach($team['salesperson'] as $key1 => & $entry){
                    $entry['sheet2'] =  ($rootTwo[$key]['salesperson'][$key1]['sheet']);
                    $entry['balance2'] =  ($rootTwo[$key]['salesperson'][$key1]['balance']);
                    $entry['balance_ledger2'] =  ($rootTwo[$key]['salesperson'][$key1]['balance_ledger']);
                    $entry['total2'] =  ($rootTwo[$key]['salesperson'][$key1]['total']);
                    $entry['sheet'] =  ($entry['sheet']);
                    $entry['balance'] =  ($entry['balance']);
                    $entry['balance_ledger'] =  ($entry['balance_ledger']);
                    $slValues[$key1]['balance'] = ($entry['balance']);
                    $slValues[$key1]['sheet'] = ($entry['sheet']);
                    $slValues[$key1]['balance2'] = ($rootTwo[$key]['salesperson'][$key1]['balance']);
                    $slValues[$key1]['sheet2'] = ($rootTwo[$key]['salesperson'][$key1]['sheet']);
                    $slValues[$key1]['balance_ledger'] = ($entry['balance_ledger']);
                    $slValues[$key1]['balance_ledger2'] = ($rootTwo[$key]['salesperson'][$key1]['balance_ledger']);
                    $slValues[$key1]['total'] = ($entry['total']);
                    $slValues[$key1]['total2'] = ($rootTwo[$key]['salesperson'][$key1]['total']);

                    $entry['total'] =  ($entry['total']);
                     $slValues[$key1]['totalMain'] =  ($entry['balance'] -  $slValues[$key1]['balance2']);
                }
              // }
         }


 
        $arrayMain[] = $totals;
        //  $rootData[''] = $rootTwo['net_balance'];
        //  $rootData['balance_ledger2'] = $rootTwo['balance_ledger'];
        //  $rootData['sheet_total2'] = $rootTwo['sheet_total'];
        //  $rootData['total2'] = $rootTwo['total'];
         // print_r($rootData);
         // exit;
         $fromdate = $_GET['formdate'];
         $todate = $_GET['todate'];
         $filename='Abstract Report - ('.$formdate.' with '.$todate.')'; 
         header("Content-Type: application/xls");    
         header("Content-Disposition: attachment; filename=$filename.xls");  
         header("Pragma: no-cache"); 
         header("Expires: 0");
        
         ?>


<table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                      <thead>
                        <tr>


                          <th colspan="11" style="text-align:center;font-size:16px;">Abstract Report - <?php echo $_GET['formdate'] . ' with ' . $_GET['todate']; ?>
                    </th>

                </tr>
            </thead>



        </table>
        <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"
            style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;">
            <thead>
                <tr>


                    <th style="text-align:center;font-size:16px;">No</th>
                    <th style="text-align:center;font-size:16px;">Name</th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['formdate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['todate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['formdate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['formdate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['formdate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['todate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['todate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">
                        <?= date('M d', strtotime($_GET['todate'])) ?>
                    </th>
                    <th style="text-align:center;font-size:16px;">Total</th>

                </tr>
            </thead>



        </table>
        <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"
            style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;">
            <thead>
                <tr>


                    <th style="text-align:center;font-size:16px;"> </th>
                    <th style="text-align:center;font-size:16px;"> </th>
                    <th style="text-align:center;font-size:16px;">BAL.LED</th>
                    <th style="text-align:center;font-size:16px;">BAL.LED</th>
                    <th style="text-align:center;font-size:16px;">ACT.BAL</th>
                    <th style="text-align:center;font-size:16px;">SHEET</th>
                    <th style="text-align:center;font-size:16px;">TOTAL</th>
                    <th style="text-align:center;font-size:16px;">ACT.BAL</th>
                    <th style="text-align:center;font-size:16px;">SHEET</th>
                    <th style="text-align:center;font-size:16px;">TOTAL</th>
                    <th style="text-align:center;font-size:16px;">Total</th>

                </tr>
                <?php
                foreach ($rootData as $key => &$team) {
                    ?>
                    <tr>
                        <td> </td>
                        <td style="font-sizeL16px;color:#ff5e14;font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['sales_group_name'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['balance_ledger'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['balance_ledger2'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['net_balance'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['sheet_total'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['total'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['net_balance2'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['sheet_total2'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['total2'] ?>
                        </td>
                        <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                            <?= $team['totalMain'] ?>
                        </td>
                    </tr>
                    <?php
                        foreach ($team['salesperson'] as $key => $entry) {
                            ?>
                            <tr>
                                <td> </td>
                                <td style="font-size:16px;">
                                    <?=  $key ?>
                                </td>
                                <td>
                                    <?= $slValues[$key]['balance_ledger']  ?>
                                </td>
                                <td>
                                    <?=  $slValues[$key]['balance_ledger2'] ?>
                                </td>
                                <td>
                                    <?=  $slValues[$key]['balance'] ?>
                                </td>
                                <td>
                                    <?=  $slValues[$key]['sheet']  ?>
                                </td>
                                <td>
                                    <?=  $slValues[$key]['total'] ?>
                                </td>
                                <td>
                                    <?=  $slValues[$key]['balance2'] ?>
                                </td>
                                <td>
                                     <?= $slValues[$key]['sheet2'] ?>
                                </td>
                                <td>
                                    <?=  $slValues[$key]['total2'] ?>
                                </td>
                                <td>
                                    <?=  $slValues[$key]['totalMain'] ?>
                                </td>
                            </tr>
                            <?php
   }
                    ?>
                    <tr>

                    <?php
                    for($i = 0; $i < 10; $i++) {
                    ?>
                        <th></th>
                        <?php
                    }
                        ?>
                    </tr>
                    <?php

                }
                ?>

                <tr>
                    <td> </td>
                    <td style="font-size:16px;font-weight:bold;">TOTALS</td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['balance_ledger'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['balance_ledger2'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['net_balance'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['sheet_total'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['total'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['net_balance2'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['sheet_total2'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['total2'] ?>
                    </td>
                    <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                        <?= $totals['totalMain'] ?>
                    </td>
                </tr>
 



        </table>

        <?php



    }





     public function fetch_data_credit_balance_comparision(){

        function divideVal($value){
           if($value != 0 && $value != ''){
               if($_GET['dividend'] == 1){
                   return round($value,2);
               }elseif($_GET['dividend'] == 'L'){
                   return round(($value/100000),2);
               }elseif($_GET['dividend'] == 'C') {
                   return round(($value/10000000),2);
               }
           }else{
               return 0;
           }

        }
        function refineValue($value){
            if($value != 0 && $value != ''){
                return floatval(round($value,2));
            }else{
                return 0;
            }

         }
        //$customer_id=31804;




        if($this->session->userdata['logged_in']['access']=='17')
        {
 
              $sales_team_id=array();
              $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
              $resultsales_team=$query->result();
              foreach ($resultsales_team as  $values) {
 
                  $sales_team_id[]=$values->define_saleshd_id;
 
              }
 
 
              $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
              foreach ($poin_to_member as $point) {
                    $sales_team_id[] = $point->define_saleshd_id;
              }
 
               $sales_team_id="'".implode("','", $sales_team_id)."'";
               $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';
 
 
 
 
        }
 
 
        if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
        {
 
 
 
                     $sales_team_id = array($this->userid);
                $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
                foreach ($resultsales_team as $values) {
                    $sales_team_id[] = $values->sales_member_id;
                }
 
                  $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
                foreach ($poin_to_member as $point) {
                    $sales_team_id[] = $point->id;
                }
 
 
              $sales_team_id="'".implode("','", $sales_team_id)."'";
 
              $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';
 
 
 
        }
        $cateid=$_GET['order_status'];
        $sales_group=$_GET['sales_group'];

        $formdate=$_GET['formdate'];
        $todate=$_GET['todate'];
       $usersgroup="";
       
       if($sales_group!='ALL')
       {

            $usersgroup=' AND a.id="'.$sales_group.'"';

       }

       $slCond = '';
       $order_status = $_GET['order_status'];
       if($order_status != 'ALL'){
          $slCond = 'AND  aa.id = '.$order_status.'  ';
       }



  $testMode = (isset($_GET['test']) && $_GET['test'] == 'true');
                      // $testMode = true;

        
           // date removed
           $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 $usersgroup $slCond GROUP BY a.id ORDER BY a.name ASC");
           $result=$result->result();

        $dates = array($formdate,$todate);
         $arrayMain = array();

        foreach($dates as $loopDate){

           $i=1;
           $array=array();

           foreach ($result as $valuessg) {
            $salesperson                 = [];
            $get_sales_person = $this->db->query(
                "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND aa.status = 1 $slCond AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 AND aa.status=1 GROUP BY aa.id ORDER BY aa.username ASC"
            );
            $get_sales_person = $get_sales_person->result();
            $balanceLedgerSl = 0;
            $sheettotal_sales_master = 0;
            $grpBalance = 0;
            $balanceLedgerSl = 0;
            $sheetLedgerSl = 0;
            $creditLedgerSl = 0;
            $sheettotal_sales_master = 0;
            $spSerialNo = 0;
               foreach ($get_sales_person as $valueget) {
                    $overAllBal = 0;
                    $sheettotal_sales = 0;
                    $balanceLedger = 0;
                    $balancetoatal_sales = 0;
                    $net_balance_sales = 0;
			$creditLedger =0;	
				$sheetLedger = 0;
                             

                    $limitExtend = " SET SESSION group_concat_max_len = 9999999 ";
                    $setLimit = $this->db->query($limitExtend);



           
                    $resultsubdata=$this->db->query(" SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id'  ORDER BY b.company_name ASC")->result();


   $resultsubdataArray=$this->db->query(" SELECT b.id, b.mark_vendor_id, b.company_name  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id' and a.deleteid = 0  GROUP BY b.id")->result();
   
                   //  print_r($resultsubdata);
                   //  exit;
                    $customerData = $resultsubdata[0]->customersList;
                    $customerIds = explode(",", $customerData);
                    $customerIdsFromated = [];
                   foreach ($customerIds as $key => $value) {
                       if (is_numeric($value)) {
                           $customerIdsFromated[$key] = "'" . $value . "'";
                       }
                   }
                   $customerData = implode(",", $customerIdsFromated);
                   // $overallProduction = array();
    if(!$customerData){
      $customerData = '0';
    }

                     if($testMode){
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid = 0  

                     AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$loopDate'  AND (b.assign_status_12_date > '$loopDate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$loopDate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        ) 


                                         GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                      // exit;
                   }else{
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                   
            
                      if($testMode){
                   $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND b.reason != 'Return To Re-sale'  AND b.order_base>0
                                                                      AND b.deleteid = 0  AND b.return_status=0

                   AND (
                                                                           CASE
                                                                              WHEN 

                                                                              (b.delivery_status = 2 AND (b.assign_status_11_date <= '$loopDate' OR b.assign_status_12_date <= '$loopDate') AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$loopDate' OR b.assign_status_2_date IS NULL)) 


                                                                              OR 


                                                                              (b.delivery_status = 1 AND b.assign_status_11_date <= '$loopDate' AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)) 

                                                                              THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  

                                                                       GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }else{
                  $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }
                if($testMode){
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }else{
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0  GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }
                   
                    if($testMode){
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }else{
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }
            
             if($testMode){
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)  AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0   AND b.order_base>0 AND b.return_status = 0
                       AND (
                                             CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$loopDate' AND ((b.trip_end_date > '$loopDate' OR b.trip_end_date IS NULL)AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$loopDate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        ) 
 GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }else{
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }
   
                   $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
                          
                   $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                          
                   $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   




                    $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   

               
   
             //    
                $masterData = [];
                $custData = [];
//  
//             echo "SELECT SUM(b.bill_total) as bill_total , b.customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer_id IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 GROUP BY b.customer_id ORDER BY b.id DESC";
                // print_r($overallInproduction);
                // exit;

        //     foreach ($overallProduction as $item) {
        //         $cusData[$item->customer_id]['totalvalue'] = $item->totalvalue;
        //         $cusData[$item->customer_id]['production'] = $item->totalvalue;
        // }
        foreach ($overallProduction as $item) {
            $custData[$item->customer_id]['production'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['production'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallTotal as $item) {
            $custData[$item->customer_id]['total'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallInproduction as $item) {
            $custData[$item->customer_id]['inproduction_total_return']= 0;
            $custData[$item->customer_id]['inproduction_total_return']= round($item->bill_total,2);
        }
        foreach($overallReturn as $item) {
            $custData[$item->customer_id]['total_return'] = 0;
            $custData[$item->customer_id]['total_return'] = round($item->bill_total,2);
        }
       foreach($overallTransit as $item) {
            $custData[$item->customer_id]['total_transit'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total_transit'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallOld as $item){
            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
               
        }
        foreach($overallOpeningBal as $item) {
            $custData[$item->customer_id]['opeinging_balance'] = 0;
            $custData[$item->customer_id]['opeinging_balance'] = $item->credits - $item->debits;
        }
        foreach($overallCurrentBal as $item){
            $custData[$item->customer_id]['trnDr'] = 0;
            $custData[$item->customer_id]['trnCr'] = 0;
            $custData[$item->customer_id]['trnDr'] = $item->debits;
            $custData[$item->customer_id]['trnCr'] = $item->credits;
        }

        // echo "<table>";
        foreach ($resultsubdataArray as $customerId){
                        // $masterData[$customerId] = $customerId;
                        $masterData[$customerId->id]['production'] = 0;
                        $masterData[$customerId->id]['total'] = 0;
                        $masterData[$customerId->id]['inproduction_total_return'] = 0;
                        $masterData[$customerId->id]['total_return'] = 0;
                        $masterData[$customerId->id]['total_transit'] = 0;

                        $masterData[$customerId->id]['production'] = $custData[$customerId->id]['production'];
                        $masterData[$customerId->id]['total'] = $custData[$customerId->id]['total'];
                        $masterData[$customerId->id]['inproduction_total_return']= ($custData[$customerId->id]['inproduction_total_return']);
                        $masterData[$customerId->id]['total_return'] = $custData[$customerId->id]['total_return'];
                        $masterData[$customerId->id]['total_transit']  = ($custData[$customerId->id]['total_transit']);

                        $masterData[$customerId->id]['total_credit_balance'] = 0;
                        $masterData[$customerId->id]['total_debit_balance']           = 0;
                        $masterData[$customerId->id]['total_credit_balance_new']       = 0;
                        $masterData[$customerId->id]['total_debit_balance_new']        = 0;
                        $masterData[$customerId->id]['opening_balance']                = 0;

                        $masterData[$customerId->id]['old_date_opening_balance'] =  $custData[$customerId->id]['old_date_opening_balance'];
                        if ($masterData[$customerId->id]['old_date_opening_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        }

                        $masterData[$customerId->id]['opeinging_balance'] = $custData[$customerId->id]['opeinging_balance'];
                        if ($masterData[$customerId->id]['opeinging_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        }
                       if($customerId->mark_vendor_id > 0){


                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = '119' THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$customerId->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $opeinging_balance_vendor;
                                              }





                          // if( $custData[$item->customer_id]['opeinging_balance_vendor'] > 0){
                          //  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }else{
                          //    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }
                        }
                               

                        $masterData[$customerId->id]['totalvaluecrited']   = round($masterData[$customerId->id]['total_credit_balance'] + $masterData[$customerId->id]['total_credit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluedebit']    = round($masterData[$customerId->id]['total_debit_balance'] + $masterData[$customerId->id]['total_debit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluecrited']   = abs($masterData[$customerId->id]['totalvaluecrited']);
                        $masterData[$customerId->id]['totalvaluedebit']    = abs($masterData[$customerId->id]['totalvaluedebit']);
                        $masterData[$customerId->id]['opening_balance_val'] = $masterData[$customerId->id]['totalvaluecrited'] - $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance_cr'] = $masterData[$customerId->id]['totalvaluecrited'];
                        $masterData[$customerId->id]['opening_balance_dr'] = $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance'] = abs($masterData[$customerId->id]['opening_balance_val']);
                        $masterData[$customerId->id]['sheet_in_factory'] = ($masterData[$customerId->id]['total'] + $masterData[$customerId->id]['total_return']);

                        
                        $masterData[$customerId->id]['trnDr'] = 0;
                        $masterData[$customerId->id]['trnCr'] = 0;
                        $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr'];
                        $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr'];




                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $Totaltranspotval=0;
                    $TotalDr=$masterData[$customerId->id]['opening_balance_dr'];
                    $TotalCr=$masterData[$customerId->id]['opening_balance_cr'];
                    $totbalance=  $masterData[$customerId->id]['trnCr']-$masterData[$customerId->id]['trnDr'];
                    $Total_trn_dr               = $masterData[$customerId->id]['opening_balance_dr'] + $masterData[$customerId->id]['trnDr'];
                    $Total_trn_cr               = $masterData[$customerId->id]['opening_balance_cr'] + $masterData[$customerId->id]['trnCr'];

                    //  echo $Total_trn_dr."====".$Total_trn_cr.'<br/>';
                     if ($Total_trn_dr < $Total_trn_cr) {
                         $creditsset = $Total_trn_dr - $Total_trn_cr;
                         $creditsset = abs($creditsset);
                         $payment_status_bu_closeing = 'CR';
                         $closeing = $creditsset;
                     } else {
                         $debitsset = $Total_trn_cr - $Total_trn_dr;
                         $debitsset = abs($debitsset);
                         $payment_status_bu_closeing = 'DR';
                         if ($debitsset == 0) {
                             $payment_status_bu_closeing = 'CR';
                         } else {
                             $payment_status_bu_closeing = 'DR';
                         }
                         $closeing = $debitsset;
                     }
                    // if($masterData[$customerId->id]['production'] || $masterData[$customerId->id]['sheet_in_factory'] || $masterData[$customerId->id]['total_transit'] || $masterData[$customerId->id]['inproduction_total_return']){
                    //   echo "<tr><td>" . $cusNames[$customerId->id]."</td><td> ".$masterData[$customerId->id]['production']."</td><td> ".$masterData[$customerId->id]['sheet_in_factory']." ".$masterData[$customerId->id]['total_transit']."</td><td> ".$masterData[$customerId->id]['inproduction_total_return']."</td></tr>";
                    // }
                         if($payment_status_bu_closeing=='DR')
                         {
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit'];
                             $Totaltranspotval= $closeing-$Totaltranspot;
                             $Totaltranspotval= $Totaltranspotval-$masterData[$customerId->id]['inproduction_total_return'];
                         }
 
 
                          if($payment_status_bu_closeing=='CR')
                         {
                             
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit']+$masterData[$customerId->id]['inproduction_total_return'];
                             //$Totaltranspotval= $closeing-$Totaltranspot;
                             if($closeing>0)
                             {
                                $Totaltranspot=$closeing+$Totaltranspot;
                         

                                $Totaltranspotval= '-'.$Totaltranspot;
                             }
                             else
                             {
                                $Totaltranspotval= '-'.$Totaltranspot;
 
                             }
                         }
 
                         
                         



                      

                          $sheet=0;
                          $st=0;
                          $st=$masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['inproduction_total_return']+$masterData[$customerId->id]['total_transit'];

                        //   echo $masterData[$customerId->id]['production']." ".$masterData[$customerId->id]['sheet_in_factory']." ".$masterData[$customerId->id]['inproduction_total_return']." ".$masterData[$customerId]['total_transit'].'<br/>';;
                          $totalcloseingbalance=$debitsset-$creditsset;
                          $netbalance_total_set=$totalcloseingbalance-$st;
                          
                           if($netbalance_total_set>0)
                           {
                                  $sheet=$st;
                           }
                           else
                           {
                                  $sheet=$debitsset;
                           }

                        //    $sheet = round($sheet,2);
                          $sheettotal_sales+=round($sheet,2);
                          $sheettotal_sales_master+=$sheet;
                        //   $totabetbalance+=$debitsset-$sheet;
                          $net_balance_sales +=$debitsset-$sheet;
                          $grpBalance +=$debitsset-$sheet;
                        if($Totaltranspotval > 0 && $Totaltranspotval != 0){
                            $balanceLedger = $balanceLedger + 1;
                            $balanceLedgerSl = $balanceLedgerSl + 1;
                        }elseif($Totaltranspotval < 0 && $Totaltranspotval != 0){
                            $creditLedger = $creditLedger + 1;
                            $creditLedgerSl = $creditLedgerSl + 1;
                        }
                        
                         if($sheet > 0){
                             $sheetLedger = $sheetLedger + 1;
                             $sheetLedgerSl = $sheetLedgerSl + 1;
                         }
                
                    }
               
                   $updatedBalLed = [];
                   $updatedActBal = [];
                   $updatedSheet = [];
                   $updatedBalLed = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'bal_led');
                   $updatedActBal = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'act_bal');
                   $updatedSheet = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'sheet');

                   if($updatedBalLed[0] && count($updatedBalLed) > 0){
                    $balanceLedger = $updatedBalLed[0]->value;
                   }
                   if($updatedActBal[0] && count($updatedActBal) > 0){
                    $net_balance_sales = $updatedActBal[0]->value;
                   }
                   if($updatedSheet[0] && count($updatedSheet) > 0){
                    $sheettotal_sales = $updatedSheet[0]->value;
                   }

                   $spSerialNo = $spSerialNo + 1;
                   $salesperson[]=array(
                       'no' => $spSerialNo,
                       'sales_person_id'=>$valueget->sales_team_id,
                       'sales_person_name'=>$valueget->sales_person_name,
                       'sheet' => divideVal($sheettotal_sales ),
                       'balance' =>  divideVal(is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'total'=>divideVal($sheettotal_sales+$net_balance_sales),
                       'balance_ledger' =>$balanceLedger,
                       'credit_ledger' =>$creditLedger,
                       'sheet_ledger' =>$sheetLedger,
                        'updates_bal_led' => $updatedBalLed,
                        'updates_act_bal' => $updatedActBal,
                        'updates_sheet' => $updatedSheet
                  );
               }

               $totalcloseing = round($debitssettotal - $creditssettotal, 2);
               $totalcloseing = abs($totalcloseing);
               $balancetoatal = abs($balancetoatal);
               $array[] = array(


                   'no' => $i,
                   'id' => $valuessg->sales_group_id,
                   'sales_team_id'=>$valuessg->sales_group_id,
                   'sales_group_name' => $valuessg->sales_group_name,
                   'balance_ledger'=> $balanceLedgerSl,
                   'credit_ledger' =>$creditLedgerSl,
                    'sheet_ledger' =>$sheetLedgerSl,
                   'net_balance' => divideVal(round($grpBalance, 2)),
                   'sheet_total'=> divideVal(round($sheettotal_sales_master,2)),
                   'total'=> divideVal(round($grpBalance,2)+round($sheettotal_sales_master,2)),
                   'salesperson'=>$salesperson

               );
               $i++;
           }
           $arrayMain[] = $array;
 
        }
      
        $rootData = $arrayMain[0];
        $rootTwo = $arrayMain[1];
        $totals = array();
        foreach ($rootData as $key => &$team) {
            $team['net_balance'] = 0;
            $team['balance_ledger'] = 0;
            $team['credit_ledger'] = 0;
            $team['sheet_ledger'] = 0;
            $team['sheet_total'] = 0;
            $team['total'] = 0;
            $team['net_balance'] = 0;
            $team['balance_ledger2'] = 0;
            $team['sheet_total2'] = 0;
            $team['total2'] = 0;
            foreach ($team['salesperson'] as $keySl => &$sl) {
                //SL - day 1
                // $sl['total'] = $sl['balance'] + $sl['sheet'];

                $sl['balance2'] = refineValue($rootTwo[$key]['salesperson'][$keySl]['balance']);
                $sl['credit_ledger'] = refineValue($rootTwo[$key]['salesperson'][$keySl]['credit_ledger']);
                $sl['sheet_ledger'] = refineValue($rootTwo[$key]['salesperson'][$keySl]['sheet_ledger']);
                $sl['balance_ledger2'] = refineValue($rootTwo[$key]['salesperson'][$keySl]['balance_ledger']);
                $sl['sheet2'] = refineValue($rootTwo[$key]['salesperson'][$keySl]['sheet']);
                $sl['total2'] = refineValue($sl['balance2'] + $sl['sheet2']);
                //TEAM - day 1
                $sl['totalMain'] = refineValue($sl['balance'] - $sl['balance2']);

                $team['net_balance'] = refineValue($team['net_balance'] + $sl['balance']);
                $team['balance_ledger'] = refineValue($team['balance_ledger'] + $sl['balance_ledger']);
                $team['sheet_total'] = refineValue($team['sheet_total'] + $sl['sheet']);
                $team['total'] = refineValue($team['total'] + ($sl['balance'] + $sl['sheet']));
                //TEAM - day 2
                $team['net_balance2'] = refineValue($team['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance']);
                $team['balance_ledger2'] = refineValue($team['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger']);
                $team['sheet_ledger'] = refineValue($team['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger']);
                $team['credit_ledger'] = refineValue($team['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger']);
                $team['sheet_total2'] = refineValue($team['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet']);
                $team['total2'] = refineValue($team['total2'] + ($rootTwo[$key]['salesperson'][$keySl]['balance'] + $rootTwo[$key]['salesperson'][$keySl]['sheet']));
                // $team['net_balance'] = $team['net_balance2'] + $rootTwo[$key]['net_balance'];
                // $team['balance_ledger2'] = $rootTwo[$key]['balance_ledger'];
                // $team['sheet_total2'] = $rootTwo[$key]['sheet_total'];
                // $team['total2'] = $rootTwo[$key]['total'];



                $totals['balance_ledger'] = refineValue($totals['balance_ledger'] + $sl['balance_ledger']);
                $totals['balance_ledger2'] = refineValue($totals['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger']);
                $totals['credit_ledger'] = refineValue($totals['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger']);
                $totals['sheet_ledger'] = refineValue($totals['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger']);
                $totals['net_balance'] = refineValue($totals['net_balance'] + $sl['balance']);
                $totals['net_balance2'] = refineValue($totals['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance']);
                $totals['sheet_total'] = refineValue($totals['sheet_total'] + $sl['sheet']);
                $totals['sheet_total2'] = refineValue($totals['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet']);
                $totals['total'] = refineValue($totals['total'] + $sl['total']);
                $totals['total2'] = refineValue($totals['total2'] + $rootTwo[$key]['salesperson'][$keySl]['total']);


            }

            $team['totalMain'] = refineValue($team['net_balance'] - $team['net_balance2']);

            
        }

         $totals['totalMain'] = $totals['net_balance'] - $totals['net_balance2'];


 
        $arrayMain[0] = $rootData;
        $arrayMain[1] = $rootTwo;
        $arrayMain[] = $totals;
      echo json_encode($arrayMain);

    }

    public function fetch_data_credit_balance_comparision_export(){
                            
      
  

        $customer_id=$_GET['customer_id'];
        
         function divideVal($value){
            if($value != 0 && $value != ''){
                if($_GET['dividend'] == 1){
                    return floatval(round($value,2));
                }elseif($_GET['dividend'] == 'L'){
		    $valRes = $value/100000;
                    return floatval(round($valRes,2));
                }elseif($_GET['dividend'] == 'C') {
                    return floatval(round(($value/10000000),2));
                }
            }else{
                return 0;
            }
            
         }
         
        //$customer_id=31804;
        
        $cateid=$_GET['order_status'];
        $sales_group=$_GET['sales_group'];
        
        $productid=$_GET['productid'];
        $limit=$_GET['limit'];
        $formdate=$_GET['formdate'];
        $todate=$_GET['todate'];
        $order_status=$_GET['order_status'];
        $payment_mode=$_GET['payment_mode'];
        
        $pagenum = $_GET['page'];
        $pagesize = $_GET['size'];
        $offset = ($pagenum - 1) * $pagesize;
        $slCond = '';
       $order_status = $_GET['order_status'];
       if($order_status != 'ALL'){
          $slCond = 'AND  aa.id = '.$order_status.'  ';
       }
        
       
    
        $stat=' ';
        $userslog="";
       $usersgroup="";
       if($cateid!='ALL')
       {
            $userslog.=' AND b.sales_team_id="'.$cateid.'"';       
       } 
       
       
       
       if($customer_id!='0')
       {
            $userslog.=' AND b.id="'.$customer_id.'"';       
       } 
        
       
       if($sales_group!='ALL')
       {
           
            $usersgroup=' AND a.id="'.$sales_group.'"';  

       }
       
         
         
      
     
       
       if($this->session->userdata['logged_in']['access']=='17')
       {
           
             $sales_team_id=array();
             $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
             $resultsales_team=$query->result();
             foreach ($resultsales_team as  $values) {
                 
                 $sales_team_id[]=$values->define_saleshd_id;
                 
             }
             
             
             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
             foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->define_saleshd_id;
             }
             
              $sales_team_id="'".implode("','", $sales_team_id)."'";
              $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';   
              
              
              
                    
       }
        
       
       if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
       {
           
           
           
                    $sales_team_id = array($this->userid);
               $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
               foreach ($resultsales_team as $values) {
                   $sales_team_id[] = $values->sales_member_id;
               }
               
                 $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
               foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->id;
               }
             
             
             $sales_team_id="'".implode("','", $sales_team_id)."'";
                    
             $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';    
            
            
                    
       }
       
       
     
         
        $search = $_GET['search'];
        $searchsql="";
        $searchsql2="";
        if($search!="")
        {
            //$searchsql=" AND  ss.name LIKE'%".$search."%'";
            $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
        }
        
  $testMode = (isset($_GET['test']) && $_GET['test'] == 'true');
        
        
           // date removed
           $result=$this->db->query("SELECT a.name as sales_group_name,a.id as sales_group_id FROM  sales_group as a JOIN sales_member_group as b ON a.id=b.sales_group_id JOIN admin_users as aa ON b.sales_member_id=aa.id WHERE  a.deleteid=0 AND aa.deleteid=0 $usersgroup $slCond GROUP BY a.id ORDER BY a.name ASC");
           $result=$result->result();

        $dates = array($formdate,$todate);
         $arrayMain = array();

        foreach($dates as $loopDate){

           $i=1;
           $array=array();

           foreach ($result as $valuessg) {
            $salesperson                 = [];
            $get_sales_person = $this->db->query(
                "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND aa.status = 1 $slCond AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 AND aa.status=1 GROUP BY aa.id ORDER BY aa.username ASC"
            );
            $get_sales_person = $get_sales_person->result();
               $balanceLedgerSl = 0;
               $sheetLedgerSl = 0;
               $creditLedgerSl = 0;
               $sheettotal_sales_master = 0;
               $spSerialNo = 0;
                foreach ($get_sales_person as $valueget) {
                    $overAllBal = 0;
                    $sheettotal_sales = 0;
                    $balanceLedger = 0;
                    $balancetoatal_sales = 0;
                    $net_balance_sales = 0;
			$creditLedger =0;	
				$sheetLedger = 0;
                             

                    $limitExtend = " SET SESSION group_concat_max_len = 9999 ";
                    $setLimit = $this->db->query($limitExtend);
            
                      $resultsubdata=$this->db->query(" SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id'  ORDER BY b.company_name ASC")->result();


   $resultsubdataArray=$this->db->query(" SELECT b.id, b.mark_vendor_id, b.company_name  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id' and a.deleteid = 0  GROUP BY b.id")->result();
   
                   //  print_r($resultsubdata);
                   //  exit;
                    $customerData = $resultsubdata[0]->customersList;
                    $customerIds = explode(",", $customerData);
                    $customerIdsFromated = [];
                   foreach ($customerIds as $key => $value) {
                       if (is_numeric($value)) {
                           $customerIdsFromated[$key] = "'" . $value . "'";
                       }
                   }
                   $customerData = implode(",", $customerIdsFromated);
                   // $overallProduction = array();
    if(!$customerData){
      $customerData = '0';
    }

                     if($testMode){
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid = 0  

                     AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$loopDate'  AND (b.assign_status_12_date > '$loopDate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$loopDate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        ) 


                                         GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                      // exit;
                   }else{
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                   
            
                      if($testMode){
                   $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND b.reason != 'Return To Re-sale'  AND b.order_base>0
                                                                      AND b.deleteid = 0  AND b.return_status=0

                   AND (
                                                                           CASE
                                                                              WHEN 

                                                                              (b.delivery_status = 2 AND (b.assign_status_11_date <= '$loopDate' OR b.assign_status_12_date <= '$loopDate') AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$loopDate' OR b.assign_status_2_date IS NULL)) 


                                                                              OR 


                                                                              (b.delivery_status = 1 AND b.assign_status_11_date <= '$loopDate' AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)) 

                                                                              THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  

                                                                       GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }else{
                  $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }
                if($testMode){
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }else{
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0  GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }
                   
                    if($testMode){
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }else{
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }
            
             if($testMode){
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)  AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0   AND b.order_base>0 AND b.return_status = 0
                       AND (
                                             CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$loopDate' AND ((b.trip_end_date > '$loopDate' OR b.trip_end_date IS NULL)AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$loopDate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        ) 
 GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }else{
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }
   
                   $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
                          
                   $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                          
                   $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   




                    $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   

               
   
             //    
                $masterData = [];
                $custData = [];
//  
//             echo "SELECT SUM(b.bill_total) as bill_total , b.customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer_id IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 GROUP BY b.customer_id ORDER BY b.id DESC";
                // print_r($overallInproduction);
                // exit;

        //     foreach ($overallProduction as $item) {
        //         $cusData[$item->customer_id]['totalvalue'] = $item->totalvalue;
        //         $cusData[$item->customer_id]['production'] = $item->totalvalue;
        // }
        foreach ($overallProduction as $item) {
            $custData[$item->customer_id]['production'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['production'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallTotal as $item) {
            $custData[$item->customer_id]['total'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallInproduction as $item) {
            $custData[$item->customer_id]['inproduction_total_return']= 0;
            $custData[$item->customer_id]['inproduction_total_return']= round($item->bill_total,2);
        }
        foreach($overallReturn as $item) {
            $custData[$item->customer_id]['total_return'] = 0;
            $custData[$item->customer_id]['total_return'] = round($item->bill_total,2);
        }
       foreach($overallTransit as $item) {
            $custData[$item->customer_id]['total_transit'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total_transit'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallOld as $item){
            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
               
        }
        foreach($overallOpeningBal as $item) {
            $custData[$item->customer_id]['opeinging_balance'] = 0;
            $custData[$item->customer_id]['opeinging_balance'] = $item->credits - $item->debits;
        }
        foreach($overallCurrentBal as $item){
            $custData[$item->customer_id]['trnDr'] = 0;
            $custData[$item->customer_id]['trnCr'] = 0;
            $custData[$item->customer_id]['trnDr'] = $item->debits;
            $custData[$item->customer_id]['trnCr'] = $item->credits;
        }

        // echo "<table>";
        foreach ($resultsubdataArray as $customerId){
                        // $masterData[$customerId] = $customerId;
                        $masterData[$customerId->id]['production'] = 0;
                        $masterData[$customerId->id]['total'] = 0;
                        $masterData[$customerId->id]['inproduction_total_return'] = 0;
                        $masterData[$customerId->id]['total_return'] = 0;
                        $masterData[$customerId->id]['total_transit'] = 0;

                        $masterData[$customerId->id]['production'] = $custData[$customerId->id]['production'];
                        $masterData[$customerId->id]['total'] = $custData[$customerId->id]['total'];
                        $masterData[$customerId->id]['inproduction_total_return']= ($custData[$customerId->id]['inproduction_total_return']);
                        $masterData[$customerId->id]['total_return'] = $custData[$customerId->id]['total_return'];
                        $masterData[$customerId->id]['total_transit']  = ($custData[$customerId->id]['total_transit']);

                        $masterData[$customerId->id]['total_credit_balance'] = 0;
                        $masterData[$customerId->id]['total_debit_balance']           = 0;
                        $masterData[$customerId->id]['total_credit_balance_new']       = 0;
                        $masterData[$customerId->id]['total_debit_balance_new']        = 0;
                        $masterData[$customerId->id]['opening_balance']                = 0;

                        $masterData[$customerId->id]['old_date_opening_balance'] =  $custData[$customerId->id]['old_date_opening_balance'];
                        if ($masterData[$customerId->id]['old_date_opening_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        }

                        $masterData[$customerId->id]['opeinging_balance'] = $custData[$customerId->id]['opeinging_balance'];
                        if ($masterData[$customerId->id]['opeinging_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        }
                       if($customerId->mark_vendor_id > 0){


                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = '119' THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$customerId->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $opeinging_balance_vendor;
                                              }





                          // if( $custData[$item->customer_id]['opeinging_balance_vendor'] > 0){
                          //  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }else{
                          //    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }
                        }
                                

                        $masterData[$customerId->id]['totalvaluecrited']   = round($masterData[$customerId->id]['total_credit_balance'] + $masterData[$customerId->id]['total_credit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluedebit']    = round($masterData[$customerId->id]['total_debit_balance'] + $masterData[$customerId->id]['total_debit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluecrited']   = abs($masterData[$customerId->id]['totalvaluecrited']);
                        $masterData[$customerId->id]['totalvaluedebit']    = abs($masterData[$customerId->id]['totalvaluedebit']);
                        $masterData[$customerId->id]['opening_balance_val'] = $masterData[$customerId->id]['totalvaluecrited'] - $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance_cr'] = $masterData[$customerId->id]['totalvaluecrited'];
                        $masterData[$customerId->id]['opening_balance_dr'] = $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance'] = abs($masterData[$customerId->id]['opening_balance_val']);
                        $masterData[$customerId->id]['sheet_in_factory'] = ($masterData[$customerId->id]['total'] + $masterData[$customerId->id]['total_return']);

                        
                        $masterData[$customerId->id]['trnDr'] = 0;
                        $masterData[$customerId->id]['trnCr'] = 0;
                        $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr'];
                        $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr'];




                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $Totaltranspotval=0;
                    $TotalDr=$masterData[$customerId->id]['opening_balance_dr'];
                    $TotalCr=$masterData[$customerId->id]['opening_balance_cr'];
                    $totbalance=  $masterData[$customerId->id]['trnCr']-$masterData[$customerId->id]['trnDr'];
                    $Total_trn_dr               = $masterData[$customerId->id]['opening_balance_dr'] + $masterData[$customerId->id]['trnDr'];
                    $Total_trn_cr               = $masterData[$customerId->id]['opening_balance_cr'] + $masterData[$customerId->id]['trnCr'];

                    //  echo $Total_trn_dr."====".$Total_trn_cr.'<br/>';
                     if ($Total_trn_dr < $Total_trn_cr) {
                         $creditsset = $Total_trn_dr - $Total_trn_cr;
                         $creditsset = abs($creditsset);
                         $payment_status_bu_closeing = 'CR';
                         $closeing = $creditsset;
                     } else {
                         $debitsset = $Total_trn_cr - $Total_trn_dr;
                         $debitsset = abs($debitsset);
                         $payment_status_bu_closeing = 'DR';
                         if ($debitsset == 0) {
                             $payment_status_bu_closeing = 'CR';
                         } else {
                             $payment_status_bu_closeing = 'DR';
                         }
                         $closeing = $debitsset;
                     }
                    // if($masterData[$customerId->id]['production'] || $masterData[$customerId->id]['sheet_in_factory'] || $masterData[$customerId->id]['total_transit'] || $masterData[$customerId->id]['inproduction_total_return']){
                    //   echo "<tr><td>" . $cusNames[$customerId->id]."</td><td> ".$masterData[$customerId->id]['production']."</td><td> ".$masterData[$customerId->id]['sheet_in_factory']." ".$masterData[$customerId->id]['total_transit']."</td><td> ".$masterData[$customerId->id]['inproduction_total_return']."</td></tr>";
                    // }
                         if($payment_status_bu_closeing=='DR')
                         {
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit'];
                             $Totaltranspotval= $closeing-$Totaltranspot;
                             $Totaltranspotval= $Totaltranspotval-$masterData[$customerId->id]['inproduction_total_return'];
                         }
 
 
                          if($payment_status_bu_closeing=='CR')
                         {
                             
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit']+$masterData[$customerId->id]['inproduction_total_return'];
                             //$Totaltranspotval= $closeing-$Totaltranspot;
                             if($closeing>0)
                             {
                                $Totaltranspot=$closeing+$Totaltranspot;
                         

                                $Totaltranspotval= '-'.$Totaltranspot;
                             }
                             else
                             {
                                $Totaltranspotval= '-'.$Totaltranspot;
 
                             }
                         }
 
                         
                         



                      

                          $sheet=0;
                          $st=0;
                          $st=$masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['inproduction_total_return']+$masterData[$customerId->id]['total_transit'];
                        //   echo $masterData[$customerId]['production']." ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['inproduction_total_return']." ".$masterData[$customerId]['total_transit'].'<br/>';;
                          $totalcloseingbalance=$debitsset-$creditsset;
                          $netbalance_total_set=$totalcloseingbalance-$st;
                          
                           if($netbalance_total_set>0)
                           {
                                  $sheet=$st;
                           }
                           else
                           {
                                  $sheet=$debitsset;
                           }

                        //    $sheet = round($sheet,2);
                          $sheettotal_sales+=round($sheet,2);
                          $sheettotal_sales_master+=$sheet;
                        //   $totabetbalance+=$debitsset-$sheet;
                          $net_balance_sales +=$debitsset-$sheet;
                          $grpBalance +=$debitsset-$sheet;
                        if($Totaltranspotval > 0 && $Totaltranspotval != 0){
                            $balanceLedger = $balanceLedger + 1;
                            $balanceLedgerSl = $balanceLedgerSl + 1;
                        }elseif($Totaltranspotval < 0 && $Totaltranspotval != 0){
                            $creditLedger = $creditLedger + 1;
                            $creditLedgerSl = $creditLedgerSl + 1;
                        }
                        
                         if($sheet > 0){
                             $sheetLedger = $sheetLedger + 1;
                             $sheetLedgerSl = $sheetLedgerSl + 1;
                         }
                
                    }
               
                   $updatedBalLed = [];
                   $updatedActBal = [];
                   $updatedSheet = [];
                   $updatedBalLed = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'bal_led');
                   $updatedActBal = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'act_bal');
                   $updatedSheet = $this->getReportUpdates($valueget->sales_team_id,$loopDate,'sheet');

                   if($updatedBalLed[0] && count($updatedBalLed) > 0){
                    $balanceLedger = $updatedBalLed[0]->value;
                   }
                   if($updatedActBal[0] && count($updatedActBal) > 0){
                    $net_balance_sales = $updatedActBal[0]->value;
                   }
                   if($updatedSheet[0] && count($updatedSheet) > 0){
                    $sheettotal_sales = $updatedSheet[0]->value;
                   }

                   $spSerialNo = $spSerialNo + 1;
                   $salesperson[]=array(
                       'no' => $spSerialNo,
                       'sales_person_id'=>$valueget->sales_team_id,
                       'sales_person_name'=>$valueget->sales_person_name,
                       'sheet' => divideVal($sheettotal_sales ),
                       'balance' =>  divideVal(is_numeric($net_balance_sales)? round(floatval($net_balance_sales), 2): ''),
                       'total'=>divideVal($sheettotal_sales+$net_balance_sales),
                       'balance_ledger' =>$balanceLedger,
                       'credit_ledger' =>$creditLedger,
                       'sheet_ledger' =>$sheetLedger,
                        'updates_bal_led' => $updatedBalLed,
                        'updates_act_bal' => $updatedActBal,
                        'updates_sheet' => $updatedSheet
                  );
               }
           
               $totalcloseing = round($debitssettotal - $creditssettotal, 2);
               $totalcloseing = abs($totalcloseing);
               $balancetoatal = abs($balancetoatal);
               $array[] = array(
                                  
                                  
                   'no' => $i, 
                   'id' => $valuessg->id, 
                   'sales_team_id'=>$valuessg->sales_group_id,
                   'sales_group_name' => $valuessg->sales_group_name, 
                   'balance_ledger'=> $balanceLedgerSl,
                   'credit_ledger' =>$creditLedgerSl,
                    'sheet_ledger' =>$sheetLedgerSl,
                   'net_balance' => divideVal(round($balancetoatal, 2)),
                   'sheet_total'=>divideVal(round($sheettotal_sales_master,2)),
                   'total'=> divideVal(round($sheettotal_sales_master,2)+round($balancetoatal,2)),
                   'salesperson'=>$salesperson

               );   
               $i++;
           }
           $arrayMain[] = $array;
           
        }
      
        
        $rootData = $arrayMain[0];
        $rootTwo = $arrayMain[1];
        $totals = array();
        foreach ($rootData as $key => &$team) {
            $team['net_balance'] = 0;
            $team['balance_ledger'] = 0;
            $team['credit_ledger'] = 0;
            $team['sheet_ledger'] = 0;
            $team['sheet_total'] = 0;
            $team['total'] = 0;
            $team['net_balance'] = 0;
            $team['balance_ledger2'] = 0;
            $team['sheet_total2'] = 0;
            $team['total2'] = 0;
            $team['salesperson'][] = [];
            foreach ($team['salesperson'] as $keySl => &$sl) {
                //SL - day 1
                // $sl['total'] = $sl['balance'] + $sl['sheet'];

                $sl['balance2'] = $rootTwo[$key]['salesperson'][$keySl]['balance'];
                $sl['credit_ledger'] = $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
                $sl['sheet_ledger'] = $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
                $sl['balance_ledger2'] = $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
                $sl['sheet2'] = $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $sl['total2'] = $sl['balance2'] + $sl['sheet2'];
                //TEAM - day 1
                $sl['totalMain'] = round($sl['total'] - $sl['total2'],2);

                $team['net_balance'] = $team['net_balance'] + $sl['balance'];
                $team['balance_ledger'] = $team['balance_ledger'] + $sl['balance_ledger'];
                $team['sheet_total'] = $team['sheet_total'] + $sl['sheet'];
                $team['total'] = $team['total'] + ($sl['balance'] + $sl['sheet']);
                //TEAM - day 2
                $team['net_balance2'] = $team['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance'];
                $team['balance_ledger2'] = $team['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
                $team['sheet_ledger'] = $team['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
                $team['credit_ledger'] = $team['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
                $team['sheet_total2'] = $team['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $team['total2'] = $team['total2'] + ($rootTwo[$key]['salesperson'][$keySl]['balance'] + $rootTwo[$key]['salesperson'][$keySl]['sheet']);
                // $team['net_balance'] = $team['net_balance2'] + $rootTwo[$key]['net_balance'];
                // $team['balance_ledger2'] = $rootTwo[$key]['balance_ledger'];
                // $team['sheet_total2'] = $rootTwo[$key]['sheet_total'];
                // $team['total2'] = $rootTwo[$key]['total'];



                $totals['balance_ledger'] = $totals['balance_ledger'] + $sl['balance_ledger'];
                $totals['balance_ledger2'] = $totals['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
                $totals['credit_ledger'] = $totals['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
                $totals['sheet_ledger'] = $totals['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
                $totals['net_balance'] = $totals['net_balance'] + $sl['balance'];
                $totals['net_balance2'] = round($totals['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance'], 2);
                $totals['sheet_total'] = $totals['sheet_total'] + $sl['sheet'];
                $totals['sheet_total2'] = $totals['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $totals['total'] = $totals['total'] + $sl['total'];
                $totals['total2'] = $totals['total2'] + $rootTwo[$key]['salesperson'][$keySl]['total'];


            }

            $team['totalMain'] = round($team['net_balance'] - $team['net_balance2'],2);


        }
        
        $totals['totalMain'] = $totals['net_balance'] - $totals['net_balance2'];
       $arrayMain[0] = $rootData;
       $arrayMain[1] = $rootTwo;
       $arrayMain[] = $totals;
        $fromdate = $_GET['formdate'];
        $todate = $_GET['todate'];
        $filename='Target vs Actual Report ('.$formdate.' with '.$todate.')'; 
        header("Content-Type: application/xls");    
        header("Content-Disposition: attachment; filename=$filename.xls");  
        header("Pragma: no-cache"); 
        header("Expires: 0");
       
        ?>


<table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                     <thead>
                       <tr>


                         <th colspan="13" style="text-align:center;font-size:16px;">Target vs Actual Report - <?php echo $_GET['formdate'] . ' with ' . $_GET['todate']; ?>
                   </th>

               </tr>
           </thead>



       </table>
       <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"
           style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;">
           <thead>
               <tr>


                   <th style="text-align:center;font-size:16px;">No</th>
                   <th style="text-align:center;font-size:16px;">Name</th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['formdate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['todate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['todate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['todate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['formdate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['formdate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['formdate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['todate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['todate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">
                       <?= date('M d', strtotime($_GET['todate'])) ?>
                   </th>
                   <th style="text-align:center;font-size:16px;">Total</th>

               </tr>
           </thead>



       </table>
       <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"
           style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;">
           <thead>
               <tr>


                   <th style="text-align:center;font-size:16px;"> </th>
                   <th style="text-align:center;font-size:16px;"> </th>
                   <th style="text-align:center;font-size:16px;">BAL.LED</th>
                   <th style="text-align:center;font-size:16px;">BAL.LED</th>
                   <th style="text-align:center;font-size:16px;">S.LED</th>
                   <th style="text-align:center;font-size:16px;">C.LED</th>
                   <th style="text-align:center;font-size:16px;">ACT.BAL</th>
                   <th style="text-align:center;font-size:16px;">SHEET</th>
                   <th style="text-align:center;font-size:16px;">TOTAL</th>
                   <th style="text-align:center;font-size:16px;">ACT.BAL</th>
                   <th style="text-align:center;font-size:16px;">SHEET</th>
                   <th style="text-align:center;font-size:16px;">TOTAL</th>
                   <th style="text-align:center;font-size:16px;">Total</th>

               </tr>
               <?php
               foreach ($rootData as $key => &$team) {
                   ?>
                   <tr>
                       <td> </td>
                       <td style="font-sizeL16px;color:#ff5e14;font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['sales_group_name'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['balance_ledger'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['balance_ledger2'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['sheet_ledger'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['credit_ledger'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['net_balance'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['sheet_total'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['total'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['net_balance2'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['sheet_total2'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['total2'] ?>
                       </td>
                       <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                           <?= $team['totalMain'] ?>
                       </td>
                   </tr>
                   <?php

                   if (isset($team['salesperson'][0])) {
                       foreach ($team['salesperson'] as $key => $entry) {
                           if($key < (count($team['salesperson']) - 1)){

                        
                           ?>
                           <tr>
                               <td> </td>
                               <td style="font-size:16px;">
                                   <?= $entry['sales_person_name'] ?>
                               </td>
                               <td>
                                   <?= $entry['balance_ledger'] ?>
                               </td>
                               <td>
                                   <?= $entry['balance_ledger2'] ?>
                               </td>
                               <td>
                                   <?= $entry['sheet_ledger'] ?>
                               </td>
                               <td>
                                   <?= $entry['credit_ledger'] ?>
                               </td>
                               <td>
                                   <?= $entry['balance'] ?>
                               </td>
                               <td>
                                   <?= $entry['sheet'] ?>
                               </td>
                               <td>
                                   <?= $entry['total'] ?>
                               </td>
                               <td>
                                   <?= $entry['balance2'] ?>
                               </td>
                               <td>
                                   <?= $entry['sheet2'] ?>
                               </td>
                               <td>
                                   <?= $entry['total2'] ?>
                               </td>
                               <td>
                                   <?= $entry['totalMain'] ?>
                               </td>
                           </tr>
                           <?php
  }
                       }
                   }

                   ?>
                   <tr>

                   <?php
                   for($i = 0; $i < 12; $i++) {
                   ?>
                       <th></th>
                       <?php
                   }
                       ?>
                   </tr>
                   <?php

               }
               ?>

               <tr>
                   <td> </td>
                   <td style="font-size:16px;font-weight:bold;">TOTALS</td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['balance_ledger'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['balance_ledger2'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['sheet_ledger'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['credit_ledger'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['net_balance'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['sheet_total'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['total'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['net_balance2'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['sheet_total2'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['total2'] ?>
                   </td>
                   <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                       <?= $totals['totalMain'] ?>
                   </td>
               </tr>




       </table>

       <?php



   }

    public function fetch_data_customer_balance_increase()
   {



 $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
 $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");

        $customer_id=$_GET['customer_id'];

        function divideVal($value){
           if($value != 0 && $value != ''){
               if($_GET['dividend'] == 1){
                   return round($value,2);
               }elseif($_GET['dividend'] == 'L'){
                   return round(($value/100000),2);
               }elseif($_GET['dividend'] == 'C') {
                   return round(($value/10000000),2);
               }
           }else{
               return 0;
           }

        }
        //$customer_id=31804;

        $cateid=$_GET['order_status'];
        $sales_group=$_GET['sales_group'];

        $productid=$_GET['productid'];
        $limit=$_GET['limit'];
        $formdate=$_GET['formdate'];
        $todate=$_GET['todate'];
        $order_status=$_GET['order_status'];
        $payment_mode=$_GET['payment_mode'];

        $pagenum = $_GET['page'];
        $pagesize = $_GET['size'];
        $offset = ($pagenum - 1) * $pagesize;

        $slCond = '';
        $order_status = $_GET['order_status'];
        if($order_status != 'ALL'){
           $slCond = 'AND  aa.id = '.$order_status.'  ';
        }


        $stat=' ';
        $userslog="";
       $usersgroup="";
       if($cateid!='ALL')
       {
            $userslog.=' AND b.sales_team_id="'.$cateid.'"';
       }



       if($customer_id!='0')
       {
            $userslog.=' AND b.id="'.$customer_id.'"';
       }


       if($sales_group!='ALL')
       {

            $usersgroup=' AND ss.id="'.$sales_group.'"';

       }






       if($this->session->userdata['logged_in']['access']=='17')
       {

             $sales_team_id=array();
             $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
             $resultsales_team=$query->result();
             foreach ($resultsales_team as  $values) {

                 $sales_team_id[]=$values->define_saleshd_id;

             }


             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
             foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->define_saleshd_id;
             }

              $sales_team_id="'".implode("','", $sales_team_id)."'";
              $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';




       }


       if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
       {



                    $sales_team_id = array($this->userid);
               $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
               foreach ($resultsales_team as $values) {
                   $sales_team_id[] = $values->sales_member_id;
               }

                 $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
               foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->id;
               }


             $sales_team_id="'".implode("','", $sales_team_id)."'";

             $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';



       }
                        //$('.showdetails_8846').hide();

  $testMode = (isset($_GET['test']) && $_GET['test'] == 'true');
                      // $testMode = true;



        $search = $_GET['search'];
        $searchsql="";
        $searchsql2="";
        if($search!="")
        {
            //$searchsql=" AND  ss.name LIKE'%".$search."%'";
            $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
        }


           // date removed
        $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users aa ON aa.id = b.sales_team_id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND b.deleteid=0  $slCond  $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC");
        $result=$result->result();


        // echo "Query 1 - " . date("Y-m-d H:i:s");
        // echo "</br>";
        // echo "SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC";




        $dates = array($formdate,$todate);
         $arrayMain = array();
         $totals = array();
        //Two dates
        foreach($dates as $loopDate){
           $i=1;
           $array=array();

           foreach ($result as $valuessg) {
            $salesperson                 = [];
            //SalesGroup with customers
            $get_sales_person = $this->db->query(
                "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND aa.status = 1 $slCond  AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 AND aa.status=1 GROUP BY aa.id ORDER BY aa.username ASC"
            );
            $get_sales_person = $get_sales_person->result();
            $balanceLedgerSl = 0;
            $sheettotal_sales_master = 0;
            $grpBalance = 0;

            // exit;
                foreach ($get_sales_person as $valueget) {
                    $overAllBal = 0;
                    $sheettotal_sales = 0;
                    $balanceLedger = 0;
                    $balancetoatal_sales = 0;
                    $net_balance_sales = 0;


                    $limitExtend = " SET SESSION group_concat_max_len = 9999 ";
                    $setLimit = $this->db->query($limitExtend);
            
                 
                    $resultsubdata=$this->db->query(" SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id'  ORDER BY b.company_name ASC")->result();


   $resultsubdataArray=$this->db->query(" SELECT b.id, b.mark_vendor_id, b.company_name  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id' and a.deleteid = 0  GROUP BY b.id")->result();
   
                   //  print_r($resultsubdata);
                   //  exit;
                    $customerData = $resultsubdata[0]->customersList;
                    $customerIds = explode(",", $customerData);
                    $customerIdsFromated = [];
                   foreach ($customerIds as $key => $value) {
                       if (is_numeric($value)) {
                           $customerIdsFromated[$key] = "'" . $value . "'";
                       }
                   }
                   $customerData = implode(",", $customerIdsFromated);
                   // $overallProduction = array();
    if(!$customerData){
      $customerData = '0';
    }
 if($testMode){
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT   CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid = 0  

                     AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$loopDate'  AND (b.assign_status_12_date > '$loopDate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$loopDate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        ) 


                                         GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                      // exit;
                   }else{
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                   
            
                      if($testMode){
                   $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND b.reason != 'Return To Re-sale'  AND b.order_base>0
                                                                      AND b.deleteid = 0  AND b.return_status=0

                   AND (
                                                                           CASE
                                                                              WHEN 

                                                                              (b.delivery_status = 2 AND (b.assign_status_11_date <= '$loopDate' OR b.assign_status_12_date <= '$loopDate') AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$loopDate' OR b.assign_status_2_date IS NULL)) 


                                                                              OR 


                                                                              (b.delivery_status = 1 AND b.assign_status_11_date <= '$loopDate' AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)) 

                                                                              THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  

                                                                       GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }else{
                  $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }
                if($testMode){
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }else{
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0  GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }
                   
                    if($testMode){
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }else{
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }
            
             if($testMode){
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT  CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)  AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0   AND b.order_base>0 AND b.return_status = 0
                       AND (
                                             CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$loopDate' AND ((b.trip_end_date > '$loopDate' OR b.trip_end_date IS NULL)AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$loopDate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        ) 
 GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }else{
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }
   
                   $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
                          
                   $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                          
                   $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   




                    $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   


               
   
             //    
                $masterData = [];
                $custData = [];
//  
//             echo "SELECT SUM(b.bill_total) as bill_total , b.customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer_id IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 GROUP BY b.customer_id ORDER BY b.id DESC";
                // print_r($overallInproduction);
                // exit;

        //     foreach ($overallProduction as $item) {
        //         $cusData[$item->customer_id]['totalvalue'] = $item->totalvalue;
        //         $cusData[$item->customer_id]['production'] = $item->totalvalue;
        // }
        foreach ($overallProduction as $item) {
            $custData[$item->customer_id]['production'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['production'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallTotal as $item) {
            $custData[$item->customer_id]['total'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallInproduction as $item) {
            $custData[$item->customer_id]['inproduction_total_return']= 0;
            $custData[$item->customer_id]['inproduction_total_return']= round($item->bill_total,2);
        }
        foreach($overallReturn as $item) {
            $custData[$item->customer_id]['total_return'] = 0;
            $custData[$item->customer_id]['total_return'] = round($item->bill_total,2);
        }
       foreach($overallTransit as $item) {
            $custData[$item->customer_id]['total_transit'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total_transit'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallOld as $item){
            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
               
        }
        foreach($overallOpeningBal as $item) {
            $custData[$item->customer_id]['opeinging_balance'] = 0;
            $custData[$item->customer_id]['opeinging_balance'] = $item->credits - $item->debits;
        }
        foreach($overallCurrentBal as $item){
            $custData[$item->customer_id]['trnDr'] = 0;
            $custData[$item->customer_id]['trnCr'] = 0;
            $custData[$item->customer_id]['trnDr'] = $item->debits;
            $custData[$item->customer_id]['trnCr'] = $item->credits;
        }

        // echo "<table>";
     
        foreach ($resultsubdataArray as $customerId){
                        // $masterData[$customerId] = $customerId;
                        $masterData[$customerId->id]['production'] = 0;
                        $masterData[$customerId->id]['total'] = 0;
                        $masterData[$customerId->id]['inproduction_total_return'] = 0;
                        $masterData[$customerId->id]['total_return'] = 0;
                        $masterData[$customerId->id]['total_transit'] = 0;

                        $masterData[$customerId->id]['production'] = $custData[$customerId->id]['production'];
                        $masterData[$customerId->id]['total'] = $custData[$customerId->id]['total'];
                        $masterData[$customerId->id]['inproduction_total_return']= ($custData[$customerId->id]['inproduction_total_return']);
                        $masterData[$customerId->id]['total_return'] = $custData[$customerId->id]['total_return'];
                        $masterData[$customerId->id]['total_transit']  = ($custData[$customerId->id]['total_transit']);

                        $masterData[$customerId->id]['total_credit_balance'] = 0;
                        $masterData[$customerId->id]['total_debit_balance']           = 0;
                        $masterData[$customerId->id]['total_credit_balance_new']       = 0;
                        $masterData[$customerId->id]['total_debit_balance_new']        = 0;
                        $masterData[$customerId->id]['opening_balance']                = 0;

                        $masterData[$customerId->id]['old_date_opening_balance'] =  $custData[$customerId->id]['old_date_opening_balance'];
                        if ($masterData[$customerId->id]['old_date_opening_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        }

                        $masterData[$customerId->id]['opeinging_balance'] = $custData[$customerId->id]['opeinging_balance'];
                        if ($masterData[$customerId->id]['opeinging_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        }
                       if($customerId->mark_vendor_id > 0){


                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = '119' THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$customerId->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $opeinging_balance_vendor;
                                              }





                          // if( $custData[$item->customer_id]['opeinging_balance_vendor'] > 0){
                          //  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }else{
                          //    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }
                        }
                               
                                

                        $masterData[$customerId->id]['totalvaluecrited']   = round($masterData[$customerId->id]['total_credit_balance'] + $masterData[$customerId->id]['total_credit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluedebit']    = round($masterData[$customerId->id]['total_debit_balance'] + $masterData[$customerId->id]['total_debit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluecrited']   = abs($masterData[$customerId->id]['totalvaluecrited']);
                        $masterData[$customerId->id]['totalvaluedebit']    = abs($masterData[$customerId->id]['totalvaluedebit']);
                        $masterData[$customerId->id]['opening_balance_val'] = $masterData[$customerId->id]['totalvaluecrited'] - $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance_cr'] = $masterData[$customerId->id]['totalvaluecrited'];
                        $masterData[$customerId->id]['opening_balance_dr'] = $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance'] = abs($masterData[$customerId->id]['opening_balance_val']);
                        $masterData[$customerId->id]['sheet_in_factory'] = ($masterData[$customerId->id]['total'] + $masterData[$customerId->id]['total_return']);

                        
                        $masterData[$customerId->id]['trnDr'] = 0;
                        $masterData[$customerId->id]['trnCr'] = 0;
                        $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr'];
                        $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr'];
                        


                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $Totaltranspotval=0;
                    $TotalDr=$masterData[$customerId->id]['opening_balance_dr'];
                    $TotalCr=$masterData[$customerId->id]['opening_balance_cr'];
                    $totbalance=  $masterData[$customerId->id]['trnCr']-$masterData[$customerId->id]['trnDr'];
                    $Total_trn_dr               = $masterData[$customerId->id]['opening_balance_dr'] + $masterData[$customerId->id]['trnDr'];
                    $Total_trn_cr               = $masterData[$customerId->id]['opening_balance_cr'] + $masterData[$customerId->id]['trnCr'];
 //Vendor
                      
                    //  echo $Total_trn_dr."====".$Total_trn_cr.'<br/>';
                     if ($Total_trn_dr < $Total_trn_cr) {
                         $creditsset = $Total_trn_dr - $Total_trn_cr;
                         $creditsset = abs($creditsset);
                         $payment_status_bu_closeing = 'CR';
                         $closeing = $creditsset;
                     } else {
                         $debitsset = $Total_trn_cr - $Total_trn_dr;
                         $debitsset = abs($debitsset);
                         $payment_status_bu_closeing = 'DR';
                         if ($debitsset == 0) {
                             $payment_status_bu_closeing = 'CR';
                         } else {
                             $payment_status_bu_closeing = 'DR';
                         }
                         $closeing = $debitsset;
                     }
                    // if($masterData[$customerId]['production'] || $masterData[$customerId]['sheet_in_factory'] || $masterData[$customerId]['total_transit'] || $masterData[$customerId]['inproduction_total_return']){
                    //   echo "<tr><td>" . $cusNames[$customerId]."</td><td> ".$masterData[$customerId]['production']."</td><td> ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['total_transit']."</td><td> ".$masterData[$customerId]['inproduction_total_return']."</td></tr>";
                    // }
                     $Totaltranspot = 0;
                         if($payment_status_bu_closeing=='DR')
                         {
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit'];
                             $Totaltranspotval= $closeing-$Totaltranspot;
                             $Totaltranspotval= $Totaltranspotval-$masterData[$customerId->id]['inproduction_total_return'];
                         }
 
 
                          if($payment_status_bu_closeing=='CR')
                         {
                             
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit']+$masterData[$customerId->id]['inproduction_total_return'];
                             //$Totaltranspotval= $closeing-$Totaltranspot;
                             if($closeing>0)
                             {
                                $Totaltranspot=$closeing+$Totaltranspot;
                         

                                $Totaltranspotval= '-'.$Totaltranspot;
                             }
                             else
                             {
                                $Totaltranspotval= '-'.$Totaltranspot;
 
                             }
                         }
 
                         
                         



                      

                          $sheet=0;
                          $st=0;
                          $st=$masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['inproduction_total_return']+$masterData[$customerId->id]['total_transit'];

                        //   echo $masterData[$customerId]['production']." ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['inproduction_total_return']." ".$masterData[$customerId]['total_transit'].'<br/>';;
                          $totalcloseingbalance=$debitsset-$creditsset;
                          $netbalance_total_set=$totalcloseingbalance-$st;
                          
                           if($netbalance_total_set>0)
                           {
                                  $sheet=$st;
                           }
                           else
                           {
                                  $sheet=$debitsset;
                           }

                        //    $sheet = round($sheet,2);
                          $sheettotal_sales+=round($sheet,2);
                          $sheettotal_sales_master+=$sheet;
                        //   $totabetbalance+=$debitsset-$sheet;
                          $net_balance_sales +=$debitsset-$sheet;
                          $grpBalance +=$debitsset-$sheet;


                         if($Totaltranspotval > 0 && $Totaltranspotval != 0){
                             $balanceLedger = $balanceLedger + 1;
                             $balanceLedgerSl = $balanceLedgerSl + 1;
                         }
                         
                 }
                //  echo "</table>";
                //  echo $valueget->sales_person_name;
                //  exit;

 
                 $salesperson[]=array(
                     'sales_team_id'=>$valueget->sales_team_id,
                     'sales_person_name'=>$valueget->sales_person_name,
                     'sheet' => divideVal($sheettotal_sales ),
                     'balance' => divideVal($net_balance_sales),
                     'total'=> divideVal($sheettotal_sales+$net_balance_sales),
                     'balance_ledger' =>$balanceLedger
                );
             }
 
               $array[] = array(


                   'no' => $i,
                   'id' => $valuessg->sales_group_id,
                   'sales_group_name' => $valuessg->sales_group_name,
                   'balance_ledger'=> $balanceLedgerSl,
                   'net_balance' => divideVal(round($balancetoatal, 2)),
                   'sheet_total'=>divideVal(round($sheettotal_sales_master,2)),
                   'total'=> divideVal(round($sheettotal_sales_master,2)+round($balancetoatal,2)),
                   'salesperson'=>$salesperson

               );
               $i++;
           }
           $arrayMain[] = $array;

        }
        $rootData = $arrayMain[0];
         $rootTwo = $arrayMain[1];
         $totals = array();
         $dataFinal = array();
         $data2Final = array();
         foreach ($rootData as $key => &$team) {
            $team['net_balance'] = 0;
            $team['balance_ledger'] = 0;
            $team['sheet_total'] = 0;
            $team['total'] = 0;
            $team['net_balance'] = 0;
            $team['balance_ledger2'] = 0;
            $team['sheet_total2'] = 0;
            $team['total2'] = 0;
            $slFinal = [];
            $sl2Final = [];
            foreach ($team['salesperson'] as $keySl => &$sl) {
                $sl['sales_person_id'] = $sl['sales_team_id'] ;
                $sl['balance2'] = $rootTwo[$key]['salesperson'][$keySl]['balance'];
             //    $sl['credit_ledger'] = $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
             //    $sl['sheet_ledger'] = $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
                $sl['balance_ledger2'] = $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
                $sl['sheet2'] = $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $sl['total2'] = round($sl['balance2'] + $sl['sheet2'],2);
                $sl['total'] = round($sl['balance'] + $sl['sheet'],2);
 
                $sl['totalMain'] = round($sl['balance'] - $sl['balance2'],2);
 
 
                if ($sl['totalMain'] >= 0) {
                    unset($team['salesperson'][$keySl]);
                    unset($rootTwo[$key]['salesperson'][$keySl]);
                    // $totals['totalMain'] = ($sl['totalMain'] - $rootTwo[$key]['salesperson'][$keySl]['totalMain']);
                } else {
                    $sl['total'] = round($sl['balance'] + $sl['sheet'],2);
 
 
                //TEAM - day 1
 
                $team['net_balance'] = $team['net_balance'] + $sl['balance'];
                $team['balance_ledger'] = $team['balance_ledger'] + $sl['balance_ledger'];
                $team['sheet_total'] = $team['sheet_total'] + $sl['sheet'];
                $team['total'] = $team['total'] + ($sl['balance'] + $sl['sheet']);
                //TEAM - day 2
                $team['net_balance2'] = $team['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance'];
                $team['balance_ledger2'] = $team['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
             //    $team['sheet_ledger'] = $team['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
             //    $team['credit_ledger'] = $team['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
                $team['sheet_total2'] = $team['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $team['total2'] = $team['total2'] + ($rootTwo[$key]['salesperson'][$keySl]['balance'] + $rootTwo[$key]['salesperson'][$keySl]['sheet']);
                // $team['net_balance'] = $team['net_balance2'] + $rootTwo[$key]['net_balance'];
                // $team['balance_ledger2'] = $rootTwo[$key]['balance_ledger'];
                // $team['sheet_total2'] = $rootTwo[$key]['sheet_total'];
                // $team['total2'] = $rootTwo[$key]['total'];
 
 
 
                $totals['balance_ledger'] = $totals['balance_ledger'] + $sl['balance_ledger'];
                $totals['balance_ledger2'] = $totals['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
             //    $totals['credit_ledger'] = $totals['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
             //    $totals['sheet_ledger'] = $totals['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
                $totals['net_balance'] = $totals['net_balance'] + $sl['balance'];
                $totals['net_balance2'] = round($totals['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance'], 2);
                $totals['sheet_total'] = $totals['sheet_total'] + $sl['sheet'];
                $totals['sheet_total2'] = $totals['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $totals['total'] = $totals['total'] + $sl['total'];
                $totals['total2'] = $totals['total2'] + $rootTwo[$key]['salesperson'][$keySl]['total'];

                $slFinal[] = $team['salesperson'][$keySl];
                $sl2Final[] = $rootTwo[$key]['salesperson'][$keySl];
                // $rootTwo[$key]['salesperson'][$keySl] = array($rootTwo[$key]['salesperson'][$keySl]);
                }
 
            }
            $team['salesperson'] = $slFinal;
            $rootTwo[$key]['salesperson'] = $sl2Final;
            $team['totalMain'] = $team['balance'] - $team['net_balance2'];
            // $team['totalMain'] = $team['total'] - $team['total2'];
            if($team['totalMain'] >= 0){
                unset($rootData[$key]);
                unset($rootTwo[$key]);
            }else{
                $dataFinal[] = $rootData[$key];
                $data2Final[] = $rootTwo[$key];
            }
 
        }
 
         $totals['totalMain'] = $totals['net_balance'] - $totals['net_balance2'];
        $arrayMain[0] = $dataFinal;
        $arrayMain[1] = $data2Final;
        $arrayMain[] = $totals;

       echo json_encode($arrayMain);

   }


   public function fetch_data_customer_balance_increase_export()
   {

                    $this->db->query("UPDATE orders_process SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
                    $this->db->query("UPDATE order_delivery_order_status SET  assign_status_3_date = assign_date WHERE assign_status_3_date IS NULL AND assign_status = 3");
    
        $customer_id=$_GET['customer_id'];

        function divideVal($value){
           if($value != 0 && $value != ''){
               if($_GET['dividend'] == 1){
                   return round($value,2);
               }elseif($_GET['dividend'] == 'L'){
                   return round(($value/100000),2);
               }elseif($_GET['dividend'] == 'C') {
                   return round(($value/10000000),2);
               }
           }else{
               return 0;
           }

        }
        //$customer_id=31804;

        $cateid=$_GET['order_status'];
        $sales_group=$_GET['sales_group'];

        $productid=$_GET['productid'];
        $limit=$_GET['limit'];
        $formdate=$_GET['formdate'];
        $todate=$_GET['todate'];
        $order_status=$_GET['order_status'];
        $payment_mode=$_GET['payment_mode'];

        $pagenum = $_GET['page'];
        $pagesize = $_GET['size'];
        $offset = ($pagenum - 1) * $pagesize;

        $slCond = '';
        $order_status = $_GET['order_status'];
        if($order_status != 'ALL'){
           $slCond = 'AND  aa.id = '.$order_status.'  ';
        }


        $stat=' ';
        $userslog="";
       $usersgroup="";
       if($cateid!='ALL')
       {
            $userslog.=' AND b.sales_team_id="'.$cateid.'"';
       }



       if($customer_id!='0')
       {
            $userslog.=' AND b.id="'.$customer_id.'"';
       }


       if($sales_group!='ALL')
       {

            $usersgroup=' AND ss.id="'.$sales_group.'"';

       }






       if($this->session->userdata['logged_in']['access']=='17')
       {

             $sales_team_id=array();
             $query = $this->db->query("SELECT define_saleshd_id FROM `admin_users`  WHERE id='".$this->userid."'");
             $resultsales_team=$query->result();
             foreach ($resultsales_team as  $values) {

                 $sales_team_id[]=$values->define_saleshd_id;

             }


             $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
             foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->define_saleshd_id;
             }

              $sales_team_id="'".implode("','", $sales_team_id)."'";
              $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';




       }


       if($this->session->userdata['logged_in']['access']=='11' || $this->session->userdata['logged_in']['access']=='12')
       {



                    $sales_team_id = array($this->userid);
               $resultsales_team = $this->Main_model->where_in_names('sales_member_head','sales_head_id',$sales_team_id);
               foreach ($resultsales_team as $values) {
                   $sales_team_id[] = $values->sales_member_id;
               }

                 $poin_to_member = $this->Main_model->where_names('admin_users','mark_sales_member',$this->userid);
               foreach ($poin_to_member as $point) {
                   $sales_team_id[] = $point->id;
               }


             $sales_team_id="'".implode("','", $sales_team_id)."'";

             $userslog.=' AND  b.sales_team_id IN ('.$sales_team_id.')';



       }
                        //$('.showdetails_8846').hide();

  $testMode = (isset($_GET['test']) && $_GET['test'] == 'true');
                      // $testMode = true;



        $search = $_GET['search'];
        $searchsql="";
        $searchsql2="";
        if($search!="")
        {
            //$searchsql=" AND  ss.name LIKE'%".$search."%'";
            $searchsql2=" AND b.company_name LIKE'%".$search."%' OR b.phone LIKE'%".$search."%'";
        }


           // date removed
        $result=$this->db->query("SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM orders_process as a JOIN customers as b ON a.customer_id=b.id LEFT JOIN admin_users aa ON aa.id = b.sales_team_id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND b.deleteid=0  $slCond  $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC");
        $result=$result->result();


        // echo "Query 1 - " . date("Y-m-d H:i:s");
        // echo "</br>";
        // echo "SELECT ss.id as sales_group_id,ss.name as sales_group_name  FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id  JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id WHERE   a.deleteid=0   AND a.party_type='1'    $stat $userslog $usersgroup $searchsql $searchsql2 GROUP BY ss.id  ORDER BY ss.name ASC";




        $dates = array($formdate,$todate);
         $arrayMain = array();
         $totals = array();
        //Two dates
        foreach($dates as $loopDate){
           $i=1;
           $array=array();

           foreach ($result as $valuessg) {
            $salesperson                 = [];
            //SalesGroup with customers
            $get_sales_person = $this->db->query(
                "SELECT aa.id as sales_team_id,aa.username as sales_person_name FROM all_ledgers as a JOIN customers as b ON a.customer_id=b.id JOIN sales_member_group as ssg ON b.sales_team_id=ssg.sales_member_id JOIN sales_group as ss ON ssg.sales_group_id=ss.id JOIN admin_users as aa ON aa.id=ssg.sales_member_id WHERE  a.deleteid=0 AND a.party_type='1' AND aa.status = 1 $slCond  AND ssg.sales_group_id='".$valuessg->sales_group_id."' AND b.deleteid=0 AND aa.status=1 GROUP BY aa.id ORDER BY aa.username ASC"
            );
            $get_sales_person = $get_sales_person->result();
            $balanceLedgerSl = 0;
            $sheettotal_sales_master = 0;
            $grpBalance = 0;

            // exit;
                foreach ($get_sales_person as $valueget) {
                    $overAllBal = 0;
                    $sheettotal_sales = 0;
                    $balanceLedger = 0;
                    $balancetoatal_sales = 0;
                    $net_balance_sales = 0;


                    $limitExtend = " SET SESSION group_concat_max_len = 9999 ";
                    $setLimit = $this->db->query($limitExtend);
            
                       $resultsubdata=$this->db->query(" SELECT GROUP_CONCAT(distinct a.customer_id SEPARATOR ',')  as customersList FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id'  ORDER BY b.company_name ASC")->result();


   $resultsubdataArray=$this->db->query(" SELECT b.id, b.mark_vendor_id, b.company_name  FROM  customers as b LEFT JOIN all_ledgers as a ON b.id=a.customer_id WHERE b.deleteid=0 AND b.sales_team_id='$valueget->sales_team_id' and a.deleteid = 0  GROUP BY b.id")->result();

                   //  print_r($resultsubdata);
                   //  exit;
                    $customerData = $resultsubdata[0]->customersList;
                    $customerIds = explode(",", $customerData);
                    $customerIdsFromated = [];
                   foreach ($customerIds as $key => $value) {
                       if (is_numeric($value)) {
                           $customerIdsFromated[$key] = "'" . $value . "'";
                       }
                   }
                   $customerData = implode(",", $customerIdsFromated);
                   // $overallProduction = array();
    if(!$customerData){
      $customerData = '0';
    }
 if($testMode){
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND a.return_status=0 AND b.order_base>0
                                        AND b.reason != 'Return To Re-sale'
                                        AND b.deleteid = 0  

                     AND (
                                            CASE
                                                WHEN b.assign_status_0_date <= '$loopDate'  AND (b.assign_status_12_date > '$loopDate' OR b.assign_status_12_date IS NULL)  AND (b.assign_status_11_date > '$loopDate' OR b.assign_status_11_date IS NULL)  AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)  THEN 1
                                                ELSE 0
                                            END
                                        ) 


                                         GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                      // exit;
                   }else{
                      $overallProduction = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('0')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0  AND b.reason!='Return To Re-sale' AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                   }
                   
            
                      if($testMode){
                   $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)   AND b.reason != 'Return To Re-sale'  AND b.order_base>0
                                                                      AND b.deleteid = 0  AND b.return_status=0

                   AND (
                                                                           CASE
                                                                              WHEN 

                                                                              (b.delivery_status = 2 AND (b.assign_status_11_date <= '$loopDate' OR b.assign_status_12_date <= '$loopDate') AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL) AND (b.assign_status_2_date > '$loopDate' OR b.assign_status_2_date IS NULL)) 


                                                                              OR 


                                                                              (b.delivery_status = 1 AND b.assign_status_11_date <= '$loopDate' AND (b.assign_status_3_date > '$loopDate' OR b.assign_status_3_date IS NULL)) 

                                                                              THEN 1
                                                                              ELSE 0
                                                                          END
                                                                      )  

                                                                       GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }else{
                  $overallTotal = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND  b.assign_status IN ('11','12','1')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                 }
                if($testMode){
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }else{
                   $overallInproduction = $this->db->query("SELECT SUM(b.bill_total) as bill_total , b.customer as customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0  GROUP BY b.customer ORDER BY b.id DESC" )->result();
                 }
                   
                    if($testMode){
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 AND b.create_date <= '".$loopDate."' GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }else{
                   $overallReturn =   $this->db->query("SELECT SUM(b.bill_total) as bill_total, b.customer as customer_id FROM  order_sales_return_complaints as b WHERE b.deleteid=0 AND b.customer IN ($customerData) AND b.order_base=1 AND b.driver_delivery_status=0 GROUP BY b.customer ORDER BY b.id DESC")->result();
                 }
            
             if($testMode){
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT CASE
                                        WHEN b.create_date > '2024-05-31' THEN SUM(a.amount * 1.18) 
                                        ELSE SUM(a.amount)
                                            END AS totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData)  AND b.reason != 'Return To Re-sale' 
                                        AND b.deleteid = 0   AND b.order_base>0 AND b.return_status = 0
                       AND (
                                             CASE
                                                WHEN (b.delivery_status = 2 AND (b.assign_status_2_date <= '$loopDate' AND ((b.trip_end_date > '$loopDate' OR b.trip_end_date IS NULL)AND (b.trip_end_date IS NULL AND b.trip_start_date <= '$loopDate' )) ) )  THEN 1
                                                ELSE 0
                                            END
                                        ) 
 GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }else{
                     $overallTransit = $this->db->query("select sum(a.totalvalue) as totalvalue,a.customer_id, sum(a.tcsamount) as tcsamount, SUM(a.roundoff) as roundoff , SUM(a.discount) as discount from (SELECT SUM(a.amount) as totalvalue,b.customer_id,  (b.tcsamount) as tcsamount,  (b.roundoff) as roundoff,  (b.discount) as discount FROM order_product_list_process as a JOIN orders_process as b  ON a.order_id=b.id WHERE a.deleteid=0 AND b.customer_id IN ($customerData) AND b.assign_status IN ('2')  AND a.return_status=0 AND b.order_base>0 AND a.delivery_status=0 AND b.deleteid=0  GROUP BY b.id ORDER BY a.id DESC)a group by customer_id")->result();
                  }
   
                   $overallOld = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE  a.payment_date < '".$loopDate ."'  AND a.deleteid=0 AND a.party_type='1' AND a.opening_balance_status='0' AND a.cnn_status = 0 AND a.customer_id IN ($customerData)  GROUP BY a.customer_id")->result();
                          
                   $overallOpeningBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a WHERE a.opening_balance_status='1'  AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0   AND a.customer_id IN ($customerData)  GROUP BY a.customer_id ")->result();
                          
                   $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   




                    $overallCurrentBal = $this->db->query("SELECT SUM(a.debits) as debits,SUM(a.credits) as credits, a.customer_id FROM all_ledgers as a   WHERE   a.payment_date BETWEEN '" .$loopDate ."' AND '" .$loopDate ."' AND a.deleteid=0 AND a.party_type='1'  AND a.cnn_status = 0  AND a.opening_balance_status='0'  AND  a.customer_id IN ($customerData) GROUP BY a.customer_id ")->result();   


               
   
             //    
                $masterData = [];
                $custData = [];
//  
//             echo "SELECT SUM(b.bill_total) as bill_total , b.customer_id FROM  order_sales_return_complaints as b   WHERE b.deleteid=0 AND  b.customer_id IN ($customerData) AND b.order_base=2 AND b.driver_delivery_status=0 GROUP BY b.customer_id ORDER BY b.id DESC";
                // print_r($overallInproduction);
                // exit;

        //     foreach ($overallProduction as $item) {
        //         $cusData[$item->customer_id]['totalvalue'] = $item->totalvalue;
        //         $cusData[$item->customer_id]['production'] = $item->totalvalue;
        // }
        foreach ($overallProduction as $item) {
            $custData[$item->customer_id]['production'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['production'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallTotal as $item) {
            $custData[$item->customer_id]['total'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallInproduction as $item) {
            $custData[$item->customer_id]['inproduction_total_return']= 0;
            $custData[$item->customer_id]['inproduction_total_return']= round($item->bill_total,2);
        }
        foreach($overallReturn as $item) {
            $custData[$item->customer_id]['total_return'] = 0;
            $custData[$item->customer_id]['total_return'] = round($item->bill_total,2);
        }
       foreach($overallTransit as $item) {
            $custData[$item->customer_id]['total_transit'] =  0;
            $totalValue = 0;
            $totalValue = $item->totalvalue - $item->discount;
            $custData[$item->customer_id]['total_transit'] =  round($totalValue + $item->roundoff + $item->tcsamount);
        }
        foreach($overallOld as $item){
            $custData[$item->customer_id]['old_date_opening_balance'] = 0;
            $custData[$item->customer_id]['old_date_opening_balance'] = $item->credits - $item->debits;
               
        }
        foreach($overallOpeningBal as $item) {
            $custData[$item->customer_id]['opeinging_balance'] = 0;
            $custData[$item->customer_id]['opeinging_balance'] = $item->credits - $item->debits;
        }
        foreach($overallCurrentBal as $item){
            $custData[$item->customer_id]['trnDr'] = 0;
            $custData[$item->customer_id]['trnCr'] = 0;
            $custData[$item->customer_id]['trnDr'] = $item->debits;
            $custData[$item->customer_id]['trnCr'] = $item->credits;
        }

        // echo "<table>";
      foreach ($resultsubdataArray as $customerId){
                        // $masterData[$customerId] = $customerId;
                        $masterData[$customerId->id]['production'] = 0;
                        $masterData[$customerId->id]['total'] = 0;
                        $masterData[$customerId->id]['inproduction_total_return'] = 0;
                        $masterData[$customerId->id]['total_return'] = 0;
                        $masterData[$customerId->id]['total_transit'] = 0;

                        $masterData[$customerId->id]['production'] = $custData[$customerId->id]['production'];
                        $masterData[$customerId->id]['total'] = $custData[$customerId->id]['total'];
                        $masterData[$customerId->id]['inproduction_total_return']= ($custData[$customerId->id]['inproduction_total_return']);
                        $masterData[$customerId->id]['total_return'] = $custData[$customerId->id]['total_return'];
                        $masterData[$customerId->id]['total_transit']  = ($custData[$customerId->id]['total_transit']);

                        $masterData[$customerId->id]['total_credit_balance'] = 0;
                        $masterData[$customerId->id]['total_debit_balance']           = 0;
                        $masterData[$customerId->id]['total_credit_balance_new']       = 0;
                        $masterData[$customerId->id]['total_debit_balance_new']        = 0;
                        $masterData[$customerId->id]['opening_balance']                = 0;

                        $masterData[$customerId->id]['old_date_opening_balance'] =  $custData[$customerId->id]['old_date_opening_balance'];
                        if ($masterData[$customerId->id]['old_date_opening_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance'] = $masterData[$customerId->id]['old_date_opening_balance'];
                        }

                        $masterData[$customerId->id]['opeinging_balance'] = $custData[$customerId->id]['opeinging_balance'];
                        if ($masterData[$customerId->id]['opeinging_balance'] > 0) {
                            $masterData[$customerId->id]['total_credit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        } else {
                            $masterData[$customerId->id]['total_debit_balance_new'] = $masterData[$customerId->id]['opeinging_balance'];
                        }
                        if($customerId->mark_vendor_id > 0){


                            $resultDRsscurrentdate=$this->db->query("SELECT SUM(a.debits) as debits,SUM(CASE WHEN a.payment_date > '2024-05-31' AND a.account_heads_id_2 = '119' THEN a.credits * 1.18 ELSE a.credits END) as credits FROM all_ledgers as a   WHERE   a.deleteid=0 AND a.party_type='3'  AND   a.cnn_status = 0 AND a.customer_id='".$customerId->mark_vendor_id."'");
                                               $resultDRsscurrentdate=$resultDRsscurrentdate->result();


                                               $opeinging_balance_vendor=$resultDRsscurrentdate[0]->credits-$resultDRsscurrentdate[0]->debits;
                                              if($opeinging_balance_vendor>0)
                                              {
                                                  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $opeinging_balance_vendor;
                                              }
                                              else
                                              {
                                                    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $opeinging_balance_vendor;
                                              }





                          // if( $custData[$item->customer_id]['opeinging_balance_vendor'] > 0){
                          //  $masterData[$customerId->id]['total_credit_balance_new'] =  $masterData[$customerId->id]['total_credit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }else{
                          //    $masterData[$customerId->id]['total_debit_balance_new'] =  $masterData[$customerId->id]['total_debit_balance_new'] +  $custData[$customerId->id]['opeinging_balance_vendor'];
                          // }
                        }
                               
                               
                                

                        $masterData[$customerId->id]['totalvaluecrited']   = round($masterData[$customerId->id]['total_credit_balance'] + $masterData[$customerId->id]['total_credit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluedebit']    = round($masterData[$customerId->id]['total_debit_balance'] + $masterData[$customerId->id]['total_debit_balance_new'],2);
                        $masterData[$customerId->id]['totalvaluecrited']   = abs($masterData[$customerId->id]['totalvaluecrited']);
                        $masterData[$customerId->id]['totalvaluedebit']    = abs($masterData[$customerId->id]['totalvaluedebit']);
                        $masterData[$customerId->id]['opening_balance_val'] = $masterData[$customerId->id]['totalvaluecrited'] - $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance_cr'] = $masterData[$customerId->id]['totalvaluecrited'];
                        $masterData[$customerId->id]['opening_balance_dr'] = $masterData[$customerId->id]['totalvaluedebit'];
                        $masterData[$customerId->id]['opening_balance'] = abs($masterData[$customerId->id]['opening_balance_val']);
                        $masterData[$customerId->id]['sheet_in_factory'] = ($masterData[$customerId->id]['total'] + $masterData[$customerId->id]['total_return']);

                        
                        $masterData[$customerId->id]['trnDr'] = 0;
                        $masterData[$customerId->id]['trnCr'] = 0;
                        $masterData[$customerId->id]['trnDr'] = $custData[$customerId->id]['trnDr'];
                        $masterData[$customerId->id]['trnCr'] = $custData[$customerId->id]['trnCr'];
                        


                    $creditsset                 = 0;
                    $debitsset                  = 0;
                    $closeing                   = 0;
                    $Total_trn_dr               = 0;
                    $Total_trn_cr               = 0;
                    $payment_status_bu_closeing = "";
                    $Totaltranspotval=0;
                    $TotalDr=$masterData[$customerId->id]['opening_balance_dr'];
                    $TotalCr=$masterData[$customerId->id]['opening_balance_cr'];
                    $totbalance=  $masterData[$customerId->id]['trnCr']-$masterData[$customerId->id]['trnDr'];
                    $Total_trn_dr               = $masterData[$customerId->id]['opening_balance_dr'] + $masterData[$customerId->id]['trnDr'];
                    $Total_trn_cr               = $masterData[$customerId->id]['opening_balance_cr'] + $masterData[$customerId->id]['trnCr'];
 //Vendor
                      
                    //  echo $Total_trn_dr."====".$Total_trn_cr.'<br/>';
                     if ($Total_trn_dr < $Total_trn_cr) {
                         $creditsset = $Total_trn_dr - $Total_trn_cr;
                         $creditsset = abs($creditsset);
                         $payment_status_bu_closeing = 'CR';
                         $closeing = $creditsset;
                     } else {
                         $debitsset = $Total_trn_cr - $Total_trn_dr;
                         $debitsset = abs($debitsset);
                         $payment_status_bu_closeing = 'DR';
                         if ($debitsset == 0) {
                             $payment_status_bu_closeing = 'CR';
                         } else {
                             $payment_status_bu_closeing = 'DR';
                         }
                         $closeing = $debitsset;
                     }
                    // if($masterData[$customerId]['production'] || $masterData[$customerId]['sheet_in_factory'] || $masterData[$customerId]['total_transit'] || $masterData[$customerId]['inproduction_total_return']){
                    //   echo "<tr><td>" . $cusNames[$customerId]."</td><td> ".$masterData[$customerId]['production']."</td><td> ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['total_transit']."</td><td> ".$masterData[$customerId]['inproduction_total_return']."</td></tr>";
                    // }
                     $Totaltranspot = 0;
                         if($payment_status_bu_closeing=='DR')
                         {
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit'];
                             $Totaltranspotval= $closeing-$Totaltranspot;
                             $Totaltranspotval= $Totaltranspotval-$masterData[$customerId->id]['inproduction_total_return'];
                         }
 
 
                          if($payment_status_bu_closeing=='CR')
                         {
                             
                             $Totaltranspot= $masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['total_transit']+$masterData[$customerId->id]['inproduction_total_return'];
                             //$Totaltranspotval= $closeing-$Totaltranspot;
                             if($closeing>0)
                             {
                                $Totaltranspot=$closeing+$Totaltranspot;
                         

                                $Totaltranspotval= '-'.$Totaltranspot;
                             }
                             else
                             {
                                $Totaltranspotval= '-'.$Totaltranspot;
 
                             }
                         }
 
                         
                         



                      

                          $sheet=0;
                          $st=0;
                          $st=$masterData[$customerId->id]['production']+$masterData[$customerId->id]['sheet_in_factory']+$masterData[$customerId->id]['inproduction_total_return']+$masterData[$customerId->id]['total_transit'];

                        //   echo $masterData[$customerId]['production']." ".$masterData[$customerId]['sheet_in_factory']." ".$masterData[$customerId]['inproduction_total_return']." ".$masterData[$customerId]['total_transit'].'<br/>';;
                          $totalcloseingbalance=$debitsset-$creditsset;
                          $netbalance_total_set=$totalcloseingbalance-$st;
                          
                           if($netbalance_total_set>0)
                           {
                                  $sheet=$st;
                           }
                           else
                           {
                                  $sheet=$debitsset;
                           }

                        //    $sheet = round($sheet,2);
                          $sheettotal_sales+=round($sheet,2);
                          $sheettotal_sales_master+=$sheet;
                        //   $totabetbalance+=$debitsset-$sheet;
                          $net_balance_sales +=$debitsset-$sheet;
                          $grpBalance +=$debitsset-$sheet;


                         if($Totaltranspotval > 0 && $Totaltranspotval != 0){
                             $balanceLedger = $balanceLedger + 1;
                             $balanceLedgerSl = $balanceLedgerSl + 1;
                         }
                         
                 }
                //  echo "</table>";
                //  echo $valueget->sales_person_name;
                //  exit;

 
                 $salesperson[]=array(
                     'sales_team_id'=>$valueget->sales_team_id,
                     'sales_person_name'=>$valueget->sales_person_name,
                     'sheet' => divideVal($sheettotal_sales ),
                     'balance' => divideVal($net_balance_sales),
                     'total'=> divideVal($sheettotal_sales+$net_balance_sales),
                     'balance_ledger' =>$balanceLedger
                );
             }
 
               $array[] = array(


                   'no' => $i,
                   'id' => $valuessg->sales_group_id,
                   'sales_group_name' => $valuessg->sales_group_name,
                   'balance_ledger'=> $balanceLedgerSl,
                   'net_balance' => divideVal(round($balancetoatal, 2)),
                   'sheet_total'=>divideVal(round($sheettotal_sales_master,2)),
                   'total'=> divideVal(round($sheettotal_sales_master,2)+round($balancetoatal,2)),
                   'salesperson'=>$salesperson

               );
               $i++;
           }
           $arrayMain[] = $array;

        }
        $rootData = $arrayMain[0];
         $rootTwo = $arrayMain[1];
         $totals = array();
         $dataFinal = array();
         $data2Final = array();
         foreach ($rootData as $key => &$team) {
            $team['net_balance'] = 0;
            $team['balance_ledger'] = 0;
            $team['sheet_total'] = 0;
            $team['total'] = 0;
            $team['net_balance'] = 0;
            $team['balance_ledger2'] = 0;
            $team['sheet_total2'] = 0;
            $team['total2'] = 0;
            $slFinal = [];
            $sl2Final = [];
            foreach ($team['salesperson'] as $keySl => &$sl) {
                $sl['sales_person_id'] = $sl['sales_team_id'] ;
                $sl['balance2'] = $rootTwo[$key]['salesperson'][$keySl]['balance'];
             //    $sl['credit_ledger'] = $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
             //    $sl['sheet_ledger'] = $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
                $sl['balance_ledger2'] = $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
                $sl['sheet2'] = $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $sl['total2'] = round($sl['balance2'] + $sl['sheet2'],2);
                $sl['total'] = round($sl['balance'] + $sl['sheet'],2);
 
                $sl['totalMain'] = round($sl['balance'] - $sl['balance2'],2);
 
 
                if ($sl['totalMain'] >= 0) {
                    unset($team['salesperson'][$keySl]);
                    unset($rootTwo[$key]['salesperson'][$keySl]);
                    // $totals['totalMain'] = ($sl['totalMain'] - $rootTwo[$key]['salesperson'][$keySl]['totalMain']);
                } else {
                    $sl['total'] = round($sl['balance'] + $sl['sheet'],2);
 
 
                //TEAM - day 1
 
                $team['net_balance'] = $team['net_balance'] + $sl['balance'];
                $team['balance_ledger'] = $team['balance_ledger'] + $sl['balance_ledger'];
                $team['sheet_total'] = $team['sheet_total'] + $sl['sheet'];
                $team['total'] = $team['total'] + ($sl['balance'] + $sl['sheet']);
                //TEAM - day 2
                $team['net_balance2'] = $team['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance'];
                $team['balance_ledger2'] = $team['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
             //    $team['sheet_ledger'] = $team['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
             //    $team['credit_ledger'] = $team['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
                $team['sheet_total2'] = $team['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $team['total2'] = $team['total2'] + ($rootTwo[$key]['salesperson'][$keySl]['balance'] + $rootTwo[$key]['salesperson'][$keySl]['sheet']);
                // $team['net_balance'] = $team['net_balance2'] + $rootTwo[$key]['net_balance'];
                // $team['balance_ledger2'] = $rootTwo[$key]['balance_ledger'];
                // $team['sheet_total2'] = $rootTwo[$key]['sheet_total'];
                // $team['total2'] = $rootTwo[$key]['total'];
 
 
 
                $totals['balance_ledger'] = $totals['balance_ledger'] + $sl['balance_ledger'];
                $totals['balance_ledger2'] = $totals['balance_ledger2'] + $rootTwo[$key]['salesperson'][$keySl]['balance_ledger'];
             //    $totals['credit_ledger'] = $totals['credit_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['credit_ledger'];
             //    $totals['sheet_ledger'] = $totals['sheet_ledger'] + $rootTwo[$key]['salesperson'][$keySl]['sheet_ledger'];
                $totals['net_balance'] = $totals['net_balance'] + $sl['balance'];
                $totals['net_balance2'] = round($totals['net_balance2'] + $rootTwo[$key]['salesperson'][$keySl]['balance'], 2);
                $totals['sheet_total'] = $totals['sheet_total'] + $sl['sheet'];
                $totals['sheet_total2'] = $totals['sheet_total2'] + $rootTwo[$key]['salesperson'][$keySl]['sheet'];
                $totals['total'] = $totals['total'] + $sl['total'];
                $totals['total2'] = $totals['total2'] + $rootTwo[$key]['salesperson'][$keySl]['total'];

                $slFinal[] = $team['salesperson'][$keySl];
                $sl2Final[] = $rootTwo[$key]['salesperson'][$keySl];
                // $rootTwo[$key]['salesperson'][$keySl] = array($rootTwo[$key]['salesperson'][$keySl]);
                }
 
            }
            $team['salesperson'] = $slFinal;
            $rootTwo[$key]['salesperson'] = $sl2Final;
            $team['totalMain'] = $team['net_balance'] - $team['net_balance2'];
            // $team['totalMain'] = $team['total'] - $team['total2'];
            if($team['totalMain'] >= 0){
                unset($rootData[$key]);
                unset($rootTwo[$key]);
            }else{
                $dataFinal[] = $rootData[$key];
                $data2Final[] = $rootTwo[$key];
            }
 
        }
 
         $totals['totalMain'] = $totals['net_balance'] - $totals['net_balance2'];
        $arrayMain[0] = $dataFinal;
        $arrayMain[1] = $data2Final;
        $arrayMain[] = $totals;
       $fromdate = $_GET['formdate'];
       $todate = $_GET['todate'];
       $filename='Balance Increase Report ('.$formdate.' with '.$todate.')'; 
       header("Content-Type: application/xls");    
       header("Content-Disposition: attachment; filename=$filename.xls");  
       header("Pragma: no-cache"); 
       header("Expires: 0");
      
       ?>


<table  id="datatable" class="table table-bordered dt-responsive  nowrap w-100"  border="1"  style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;" >
                    <thead>
                      <tr>


                        <th colspan="11" style="text-align:center;font-size:16px;">Balance Increase Report - <?php echo $_GET['formdate'] . ' with ' . $_GET['todate']; ?>
                  </th>

              </tr>
          </thead>



      </table>
      <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"
          style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;">
          <thead>
              <tr>


                  <th style="text-align:center;font-size:16px;">No</th>
                  <th style="text-align:center;font-size:16px;">Name</th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['formdate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['todate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['formdate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['formdate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['formdate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['todate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['todate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">
                      <?= date('M d', strtotime($_GET['todate'])) ?>
                  </th>
                  <th style="text-align:center;font-size:16px;">Total</th>

              </tr>
          </thead>



      </table>
      <table id="datatable" class="table table-bordered dt-responsive  nowrap w-100" border="1"
          style="border: #d1d1d1 solid 1px;border-collapse: collapse;width: 100%;line-height: 1.5;">
          <thead>
              <tr>   


                  <th style="text-align:center;font-size:16px;"> </th>
                  <th style="text-align:center;font-size:16px;"> </th>
                  <th style="text-align:center;font-size:16px;">BAL.LED</th>
                  <th style="text-align:center;font-size:16px;">BAL.LED</th>
                  <th style="text-align:center;font-size:16px;">ACT.BAL</th>
                  <th style="text-align:center;font-size:16px;">SHEET</th>
                  <th style="text-align:center;font-size:16px;">TOTAL</th>
                  <th style="text-align:center;font-size:16px;">ACT.BAL</th>
                  <th style="text-align:center;font-size:16px;">SHEET</th>
                  <th style="text-align:center;font-size:16px;">TOTAL</th>
                  <th style="text-align:center;font-size:16px;">Total</th>

              </tr>
              <?php
              foreach ($rootData as $key => &$team) {
                  ?>
                  <tr>
                      <td> </td>
                      <td style="font-sizeL16px;color:#ff5e14;font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['sales_group_name'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['balance_ledger'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['balance_ledger2'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['net_balance'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['sheet_total'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['total'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['net_balance2'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['sheet_total2'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['total2'] ?>
                      </td>
                      <td style="font-sizeL16px; font-weight:bold;background-color:#f0f0f0;">
                          <?= $team['totalMain'] ?>
                      </td>
                  </tr>
                  <?php

                  if (isset($team['salesperson'][0])) {
                      foreach ($team['salesperson'] as $key => $entry) {
                          ?>
                          <tr>
                              <td> </td>
                              <td style="font-size:16px;">
                                  <?= $entry['sales_person_name'] ?>
                              </td>
                              <td>
                                  <?= $entry['balance_ledger'] ?>
                              </td>
                              <td>
                                  <?= $entry['balance_ledger2'] ?>
                              </td>
                              <td>
                                  <?= $entry['balance'] ?>
                              </td>
                              <td>
                                  <?= $entry['sheet'] ?>
                              </td>
                              <td>
                                  <?= $entry['total'] ?>
                              </td>
                              <td>
                                  <?= $entry['balance2'] ?>
                              </td>
                              <td>
                                  <?= $entry['sheet2'] ?>
                              </td>
                              <td>
                                  <?= $entry['total2'] ?>
                              </td>
                              <td>
                                  <?= $entry['totalMain'] ?>
                              </td>
                          </tr>
                          <?php
                      }
                  }

                  ?>
                  <tr>

                  <?php
                  for($i = 0; $i < 10; $i++) {
                  ?>
                      <th></th>
                      <?php
                  }
                      ?>
                  </tr>
                  <?php

              }
              ?>

              <tr>
                  <td> </td>
                  <td style="font-size:16px;font-weight:bold;">TOTALS</td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['balance_ledger'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['balance_ledger2'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['net_balance'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['sheet_total'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['total'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['net_balance2'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['sheet_total2'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['total2'] ?>
                  </td>
                  <td style="font-size:16px;font-weight:bold;background-color:#f0f0f0;">
                      <?= $totals['totalMain'] ?>
                  </td>
              </tr>




      </table>

      <?php



  }







    public function getReportUpdates($salesman_id,$date,$field,$sort="desc"){
        $this->db->select('au.username,rc.previous_value,rc.modified_value, DATE_FORMAT(rc.modified_at, "%d/%m/%Y,%h:%i:%s %p") as at_time, rc.modified_value as value, rc.field');
        $this->db->from('report_changes rc');
        $this->db->where('rc.for_date', $date);
        $this->db->join('admin_users au', 'au.id = rc.modified_by');
        $this->db->where('rc.salesman_id', $salesman_id);
        $this->db->where('rc.field', $field);
        $this->db->where('rc.report_name', 'balance_increase_report');
        $this->db->order_by('rc.modified_at', $sort);
        $query = $this->db->get()->result();
        // print_r($query);
        // exit;
        foreach ($query as $res){
            $res->message = $res->username." Modified from ".$res->previous_value." to ".$res->modified_value." at ".$res->at_time;
        }
        
        return $query;
    }
    public function handleReportUpdates()
    {
        date_default_timezone_set('Asia/Kolkata');
        //load db
        $this->load->database();
        $form_data = json_decode(file_get_contents("php://input"));
        //for insert
        $input = array(
            'salesman_id' => $form_data->salesman_id,
            'report_name' => 'balance_increase_report',
            'team_id' => $form_data->team_id,
            'for_date' =>  $form_data->for_date,
            'previous_value' =>  $form_data->previous_value,
            'field' =>  $form_data->field,
            'modified_value' =>  $form_data->modified_value,
            'modified_by' => $this->userid
        );
        $this->db->insert('report_changes', $input);
    }
    
    public function fetch_data_size()
	{
                     
                     $product_id=$_GET['product_id'];
                     $array=array();
                 	 $result= $this->Main_model->where_names_order_by('product_size_guide','product_id',$product_id,'id','ASC');
                 	 foreach ($result as  $value) {
                 	 	$array[] = array(
                 	 		'id' => $value->id, 
                 	 		'product_id' => $value->product_id, 
                 	 		'label1' => $value->label1, 
                 	 		'label2' => $value->label2, 
                 	 		'point' => $value->point
                 	 	);
                 	 }
                    echo json_encode($array);
	}
    public function getBenchmarkDate($report='balance_increase_report'){
        $this->db->select('rc.modified_value');
        $this->db->from('report_changes rc');
        $this->db->where('rc.report_name', $report);
        $this->db->where('rc.field', 'benchmark_date');
        $query = $this->db->get()->result();
        if(count($query) == 0){
            return date('Y-m-d', strtotime('-1 days'));
        }else{
            return $query[0]->modified_value;
        }
    }


    public function changeReportBenchmark(){
        date_default_timezone_set('Asia/Kolkata');
        //load db
        $this->load->database();
        $form_data = json_decode(file_get_contents("php://input"));
        //for insert
        $this->db->select('rc.id');
        $this->db->from('report_changes rc');
        $this->db->where('report_name',$form_data->report_name);
        $this->db->where('rc.field', 'benchmark_date');
        $query = $this->db->get()->result();
        if(count($query) == 0){
            $input = array(
                'report_name' => $form_data->report_name,
                'field' =>  'benchmark_date',
                'modified_value' =>  $form_data->modified_value,
            );
            $this->db->insert('report_changes', $input);
        }else{
            $this->db->where('report_name',$form_data->report_name);
            $this->db->where('field','benchmark_date');
            $this->db->set('modified_value',$form_data->modified_value);
            $this->db->update('report_changes');
        }
       
    }

}   
?>